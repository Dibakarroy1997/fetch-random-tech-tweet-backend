[
    {
        "data": {
            "conversation_id": "1605046569237192705",
            "text": "That\u2019s all for now! Follow @Rapid_API for more exclusive content. \ud83d\udc19\ud83d\udc99",
            "edit_history_tweet_ids": [
                "1605046593186578432"
            ],
            "id": "1605046593186578432"
        }
    },
    {
        "data": {
            "conversation_id": "1605046569237192705",
            "edit_history_tweet_ids": [
                "1605046589185302531"
            ],
            "text": "\ud83d\udccc Downsides of tRPC\n\n- It requires both your front and back end to use TypeScript.\n\n- It works best when your frontend and backend are close together like a monorepo.",
            "id": "1605046589185302531"
        }
    },
    {
        "data": {
            "conversation_id": "1605046569237192705",
            "id": "1605046585154588672",
            "edit_history_tweet_ids": [
                "1605046585154588672"
            ],
            "text": "\ud83d\udccc Benefits of type safety\n\n- Static typing that can help catch errors on build time rather than run time.\n\n- Autocompletion and checks for bad types.\n\n- Data validation that improves API security."
        }
    },
    {
        "data": {
            "conversation_id": "1605046569237192705",
            "id": "1605046581195071489",
            "edit_history_tweet_ids": [
                "1605046581195071489"
            ],
            "text": "\ud83d\udccc What is type safety for APIs? \n\nIt means, the server and client already agree on the form of data.\n\nSo, when the data gets to the server or client, it is already validated."
        }
    },
    {
        "data": {
            "conversation_id": "1605046569237192705",
            "id": "1605046577122496514",
            "edit_history_tweet_ids": [
                "1605046577122496514"
            ],
            "text": "\ud83d\udccc How does it work?\n\ntRPC uses functions (procedures) instead of schemas to remotely call the backend.  \n\nYou can share types between client and server, ensuring full type safety for inputs, outputs, and errors."
        }
    },
    {
        "data": {
            "text": "As TypeScript grows in popularity, tRPC offers a TypeScript-based addition to traditional REST and GraphQL APIs.\n\ntRPC allows you to build and consume APIs in a typesafe manner.",
            "id": "1605046573162962945",
            "edit_history_tweet_ids": [
                "1605046573162962945"
            ],
            "conversation_id": "1605046569237192705"
        }
    },
    {
        "data": {
            "conversation_id": "1605046569237192705",
            "edit_history_tweet_ids": [
                "1605046569237192705"
            ],
            "id": "1605046569237192705",
            "text": "What is tRPC?\n\nA thread \ud83d\udc47\ud83e\uddf5"
        }
    },
    {
        "data": {
            "id": "1605009831156383745",
            "edit_history_tweet_ids": [
                "1605009831156383745"
            ],
            "conversation_id": "1605009806678523905",
            "text": "That\u2019s all for now!\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19"
        }
    },
    {
        "data": {
            "conversation_id": "1605009806678523905",
            "edit_history_tweet_ids": [
                "1605009827020869634"
            ],
            "text": "5\ufe0f\u20e3 Tripadvisor API\n\nTripadvisor API helps to query real-time hotels search, flight prices, restaurants, attracting locations, etc., to create a traveling site.\n\n\ud83d\udd17 https://t.co/SZL1qWVzS8",
            "id": "1605009827020869634"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1605009822885216257"
            ],
            "text": "4\ufe0f\u20e3 Airbnb API\n\nAirbnb API allows users to search accommodations by location, place name, and GEO coordinates to find a place to rent. \n\n\ud83d\udd17 https://t.co/8Q0u4KWNc2",
            "id": "1605009822885216257",
            "conversation_id": "1605009806678523905"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1605009818829348865"
            ],
            "text": "3\ufe0f\u20e3 Priceline Provider API\n\nYou can use this API to search for hotels, cars for rent, flights, etc.\n\n\ud83d\udd17 https://t.co/8kAgrkJpa4",
            "id": "1605009818829348865",
            "conversation_id": "1605009806678523905"
        }
    },
    {
        "data": {
            "id": "1605009814668677120",
            "edit_history_tweet_ids": [
                "1605009814668677120"
            ],
            "text": "2\ufe0f\u20e3 Trail API\n\nThis API provides information and photos for tens of thousands of outdoor recreation locations including hiking and mountain biking trails, campgrounds, ski resorts, ATV trails, and more.\n\n\ud83d\udd17 https://t.co/fw1CHmOUVQ",
            "conversation_id": "1605009806678523905"
        }
    },
    {
        "data": {
            "text": "1\ufe0f\u20e3 Hotels API\n\nThis API helps to query rooms, prices, facilities, etc information from many hotels around the world to create a traveling site/application.\n\n\ud83d\udd17 https://t.co/AHdc2Zt5xG",
            "id": "1605009810587533314",
            "edit_history_tweet_ids": [
                "1605009810587533314"
            ],
            "conversation_id": "1605009806678523905"
        }
    },
    {
        "data": {
            "id": "1605009806678523905",
            "edit_history_tweet_ids": [
                "1605009806678523905"
            ],
            "text": "Here are the top five travel APIs that you can use in your next project\n\nThread \ud83e\uddf5\ud83d\udc47",
            "conversation_id": "1605009806678523905"
        }
    },
    {
        "data": {
            "conversation_id": "1604835177557008384",
            "text": "That\u2019s all for now!\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19",
            "edit_history_tweet_ids": [
                "1604835202852954112"
            ],
            "id": "1604835202852954112"
        }
    },
    {
        "data": {
            "conversation_id": "1604835177557008384",
            "text": "We have written a detailed guide on API errors that you can find here: https://t.co/53Qm0tk0HR",
            "edit_history_tweet_ids": [
                "1604835198738259969"
            ],
            "id": "1604835198738259969"
        }
    },
    {
        "data": {
            "text": "3\ufe0f\u20e3 Documentation reference\n\nYou can also include a link to a help page in your API documentation referring to the error.\n\nIt will allow developers to fix the error quickly, massively improving the Developer Experience of your API.",
            "id": "1604835194648907777",
            "edit_history_tweet_ids": [
                "1604835194648907777"
            ],
            "conversation_id": "1604835177557008384"
        }
    },
    {
        "data": {
            "conversation_id": "1604835177557008384",
            "id": "1604835189523357702",
            "edit_history_tweet_ids": [
                "1604835189523357702"
            ],
            "attachments": {
                "media_keys": [
                    "3_1604835171252977664"
                ]
            },
            "text": "2\ufe0f\u20e3 Human readable messages\n\nOnly the status codes are not enough to clarify the error. A clear, human-readable message goes a long way to pinpoint the actual cause of the error.\n\nHere is an example error message https://t.co/OkECkmmBiu"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1604835171252977664",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FkWFFeGWQAAZRM4.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "id": "1604835185521983488",
            "text": "\ud83d\udccc Best practices\n\n1\ufe0f\u20e3 HTTP Status Code\n\nThe 4xx and 5xx HTTP Status Codes are used to show the category of the error that occurred. \n\nIncluding these standard error codes helps the developers understand what the error is and where it occurred.",
            "edit_history_tweet_ids": [
                "1604835185521983488"
            ],
            "conversation_id": "1604835177557008384"
        }
    },
    {
        "data": {
            "id": "1604835181533302786",
            "edit_history_tweet_ids": [
                "1604835181533302786"
            ],
            "text": "\ud83d\udccc Why does good error response matter?\n\nIn the case of failed requests, only the status codes are not enough since they simply define the categories of the errors. \n\nWhile they are beneficial, they are not enough to explain the reason why the request failed.",
            "conversation_id": "1604835177557008384"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1604835177557008384"
            ],
            "id": "1604835177557008384",
            "text": "Best practices for creating API errors\n\nThread \ud83e\uddf5\ud83d\udc47",
            "conversation_id": "1604835177557008384"
        }
    },
    {
        "data": {
            "text": "Hope you like this tip. \ud83d\udc19\n\nDo check out RapidAPI for Mac\n\u21b3 https://t.co/bnAk5XetrR",
            "id": "1604459558788911106",
            "edit_history_tweet_ids": [
                "1604459558788911106"
            ],
            "conversation_id": "1604459553369776128"
        }
    },
    {
        "data": {
            "conversation_id": "1604459553369776128",
            "attachments": {
                "media_keys": [
                    "16_1604459525855215619"
                ]
            },
            "id": "1604459553369776128",
            "edit_history_tweet_ids": [
                "1604459553369776128"
            ],
            "text": "Rapid Week Tip \ud83d\udc19\n\n\ud83d\udd39 Import cURL requests to RapidAPI for Mac by @alpha_beta_rtm\n\nIf you have copied a cURL command on your clipboard, you can quickly import and test it inside RapidAPI for Mac. https://t.co/F0AJJt2Csy"
        },
        "includes": {
            "media": [
                {
                    "media_key": "16_1604459525855215619",
                    "type": "animated_gif"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1604238018491056128",
            "text": "Hope you like this tip. \ud83d\udc19\n\nDo check out RapidAPI Studio\n\u21b3 https://t.co/DkvKLVEDz6",
            "edit_history_tweet_ids": [
                "1604238023545262082"
            ],
            "id": "1604238023545262082"
        }
    },
    {
        "data": {
            "conversation_id": "1604238018491056128",
            "attachments": {
                "media_keys": [
                    "16_1604237980188786692"
                ]
            },
            "text": "Rapid Week Tip \ud83d\udc19\n\n\ud83d\udd39 API Testing with RapidAPI Studio by @rotem_yohanan\n\nRapidAPI Studio houses an extremely powerful API testing tool that can:\n\n\u2013 Create complex API tests\n\u2013 Schedule tests in 9 locations\n\u2013 Set up email alerts in case the test fails\n\u2013 Generate execution reports https://t.co/Dmk56O3jqY",
            "edit_history_tweet_ids": [
                "1604238018491056128"
            ],
            "id": "1604238018491056128"
        },
        "includes": {
            "media": [
                {
                    "media_key": "16_1604237980188786692",
                    "type": "animated_gif"
                }
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1603921901138714624"
            ],
            "conversation_id": "1603921896193548290",
            "id": "1603921901138714624",
            "text": "Hope you like this tip. \ud83d\udc19\n\nDo check out RapidAPI Client for VS Code\n\u21b3 https://t.co/En66s2boMr"
        }
    },
    {
        "data": {
            "conversation_id": "1603921896193548290",
            "id": "1603921896193548290",
            "text": "Rapid Week Tip \ud83d\udc19\n\n\ud83d\udd39 Debug while testing your APIs by @eliostruyf\n\nRapidAPI Client for VS Code is also integrated with VS Code debugger.\n\nJust set the breakpoint and hit the send button to start testing and debugging APIs you are developing. https://t.co/KfLClC2Q72",
            "attachments": {
                "media_keys": [
                    "3_1603921891516981249"
                ]
            },
            "edit_history_tweet_ids": [
                "1603921896193548290"
            ]
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1603921891516981249",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FkJGdl9XoAEBn-K.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1603751591772839937"
            ],
            "text": "Thanks for reading this RapidAPI Comic!\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19\n\nTo discover over 40,000 APIs, checkout RapidAPI Hub: https://t.co/2tM1EEQGY2",
            "conversation_id": "1603751561573941248",
            "id": "1603751591772839937"
        }
    },
    {
        "data": {
            "text": "{ 6 / 6 } https://t.co/hvmVU1nCRp",
            "id": "1603751586567692292",
            "edit_history_tweet_ids": [
                "1603751586567692292"
            ],
            "attachments": {
                "media_keys": [
                    "3_1603751557706792961"
                ]
            },
            "conversation_id": "1603751561573941248"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1603751557706792961",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FkGri3EXwAEOUh6.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1603751561573941248",
            "id": "1603751581475901441",
            "edit_history_tweet_ids": [
                "1603751581475901441"
            ],
            "attachments": {
                "media_keys": [
                    "3_1603751553130795010"
                ]
            },
            "text": "{ 5 / 6 } https://t.co/XJrVjwlhWx"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1603751553130795010",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FkGrimBXkAIzZyd.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "text": "{ 4 / 6 } https://t.co/EeeHxj17Bc",
            "id": "1603751576446935041",
            "edit_history_tweet_ids": [
                "1603751576446935041"
            ],
            "attachments": {
                "media_keys": [
                    "3_1603751548869378049"
                ]
            },
            "conversation_id": "1603751561573941248"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1603751548869378049",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FkGriWJXgAEUZi5.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "id": "1603751571527028736",
            "attachments": {
                "media_keys": [
                    "3_1603751544129740802"
                ]
            },
            "edit_history_tweet_ids": [
                "1603751571527028736"
            ],
            "conversation_id": "1603751561573941248",
            "text": "{ 3 / 6 } https://t.co/6L4TbReMkF"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1603751544129740802",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FkGriEfWYAIIpOm.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1603751538790465540"
                ]
            },
            "conversation_id": "1603751561573941248",
            "edit_history_tweet_ids": [
                "1603751566535704577"
            ],
            "id": "1603751566535704577",
            "text": "{ 2 / 6 } https://t.co/g0Z95g0X2Q"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1603751538790465540",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FkGrhwmXgAQCQsP.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1603751534021541888"
                ]
            },
            "conversation_id": "1603751561573941248",
            "id": "1603751561573941248",
            "edit_history_tweet_ids": [
                "1603751561573941248"
            ],
            "text": "What exactly is the CRUD model?\n\nA thread \ud83d\udc47\n\n{ 1 / 6 } https://t.co/z1xH4hZGgW"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1603751534021541888",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FkGrhe1XgAAx6wD.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1603420507658981377",
            "edit_history_tweet_ids": [
                "1603420544073957377"
            ],
            "text": "Thanks for reading!\n\nFollow us @Rapid_API for more exclusive content. \ud83d\udc19\ud83d\udc99",
            "id": "1603420544073957377"
        }
    },
    {
        "data": {
            "id": "1603420539988709376",
            "edit_history_tweet_ids": [
                "1603420539988709376"
            ],
            "conversation_id": "1603420507658981377",
            "text": "8\ufe0f\u20e3 Improved security: \n\nGraphQL allows developers to define exactly what data is being requested, making it easier to secure an application.\n\nThis ensures that sensitive data is not exposed to potential attackers."
        }
    },
    {
        "data": {
            "conversation_id": "1603420507658981377",
            "edit_history_tweet_ids": [
                "1603420535597273096"
            ],
            "id": "1603420535597273096",
            "text": "7\ufe0f\u20e3 Easy to learn \n\nGraphQL has a simple syntax and is easy to learn, making it accessible to many developers. \n\nThis can speed up the development process and reduce the learning curve."
        }
    },
    {
        "data": {
            "conversation_id": "1603420507658981377",
            "edit_history_tweet_ids": [
                "1603420531545587718"
            ],
            "text": "6\ufe0f\u20e3 Better performance\n\nThe efficiency of GraphQL is because the server only has to make a single request for the required data rather than multiple requests. \n\nThis can result in much better performance and less strain on the server.",
            "id": "1603420531545587718"
        }
    },
    {
        "data": {
            "conversation_id": "1603420507658981377",
            "edit_history_tweet_ids": [
                "1603420527602835456"
            ],
            "text": "5\ufe0f\u20e3 Better developer experience\n\nGraphQL enables developers to interact with APIs more efficiently by providing a consistent and predictable way to query data.",
            "id": "1603420527602835456"
        }
    },
    {
        "data": {
            "id": "1603420523647717378",
            "edit_history_tweet_ids": [
                "1603420523647717378"
            ],
            "text": "4\ufe0f\u20e3 Reduced overhead\n\nGraphQL reduces network overhead because it only sends the data that is requested. \n\nThis makes it more efficient and cost-effective compared to traditional RESTful APIs.",
            "conversation_id": "1603420507658981377"
        }
    },
    {
        "data": {
            "conversation_id": "1603420507658981377",
            "id": "1603420519587631108",
            "text": "3\ufe0f\u20e3 More flexible\n\nGraphQL allows clients to make more flexible queries that can return complex data structures. \n\nThis makes it easier to add new features and update existing ones without having to rewrite code.",
            "edit_history_tweet_ids": [
                "1603420519587631108"
            ]
        }
    },
    {
        "data": {
            "text": "2\ufe0f\u20e3 Strong typing\n\nGraphQL is strongly typed, making it easier to catch errors at compile time rather than at runtime.",
            "id": "1603420515682631681",
            "edit_history_tweet_ids": [
                "1603420515682631681"
            ],
            "conversation_id": "1603420507658981377"
        }
    },
    {
        "data": {
            "id": "1603420511614164994",
            "edit_history_tweet_ids": [
                "1603420511614164994"
            ],
            "conversation_id": "1603420507658981377",
            "text": "1\ufe0f\u20e3 Easy to extend\n\nIt makes it easier to evolve the API over time because the schema acts as a contract between the client and the server, allowing both parties to evolve their implementations independently."
        }
    },
    {
        "data": {
            "id": "1603420507658981377",
            "edit_history_tweet_ids": [
                "1603420507658981377"
            ],
            "conversation_id": "1603420507658981377",
            "text": "Advantages of GraphQL\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1603389152246087680"
            ],
            "conversation_id": "1603389146919309315",
            "id": "1603389152246087680",
            "text": "Hope you like this tip. \ud83d\udc19\n\nDo check out RapidAPI Studio\n\u21b3 https://t.co/DkvKLVEDz6"
        }
    },
    {
        "data": {
            "text": "Rapid Week Tip \ud83d\udc19\n\n\ud83d\udd39 Bi-directional sync b/w RapidAPI for Mac &amp; Studio by @bcinarli\n\nIf you are using RapidAPI for Mac, all of your local API requests will also be present on RapidAPI Studio. \n\nThis allows you to continue your work even if you switch from the Mac app to Studio. https://t.co/3WlRkSNcal",
            "id": "1603389146919309315",
            "edit_history_tweet_ids": [
                "1603389146919309315"
            ],
            "attachments": {
                "media_keys": [
                    "3_1603389135477215236",
                    "3_1603389142095757320"
                ]
            },
            "conversation_id": "1603389146919309315"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1603389135477215236",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FkBh7HDXEAQJzZU.jpg"
                },
                {
                    "media_key": "3_1603389142095757320",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FkBh7ftWAAgU0_w.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1603197152221696000",
            "id": "1603197184492675075",
            "edit_history_tweet_ids": [
                "1603197184492675075"
            ],
            "text": "Thanks for reading!\n\nFollow us @Rapid_API for more exclusive content. \ud83d\udc19\ud83d\udc99"
        }
    },
    {
        "data": {
            "id": "1603197180461957121",
            "edit_history_tweet_ids": [
                "1603197180461957121"
            ],
            "conversation_id": "1603197152221696000",
            "text": "REST APIs can be less secure than other types of APIs, as they do not provide built-in support for authentication and authorization.\n\nSo, developers must implement these features themselves, which can introduce additional complexity and potential security vulnerabilities."
        }
    },
    {
        "data": {
            "conversation_id": "1603197152221696000",
            "edit_history_tweet_ids": [
                "1603197176506638336"
            ],
            "text": "Because REST APIs are based on the HTTP protocol, they can be slower and less efficient than other types of APIs, such as those based on the more efficient TCP protocol.",
            "id": "1603197176506638336"
        }
    },
    {
        "data": {
            "conversation_id": "1603197152221696000",
            "text": "\ud83d\udccc Cons\n\nThey can be more complex to implement than other types of APIs, particularly for developers who are not familiar with REST architectural principles.",
            "edit_history_tweet_ids": [
                "1603197172274561027"
            ],
            "id": "1603197172274561027"
        }
    },
    {
        "data": {
            "id": "1603197168323534848",
            "edit_history_tweet_ids": [
                "1603197168323534848"
            ],
            "text": "The key benefits of REST APIs are their flexibility, scalability, and ability to support a wide range of applications.",
            "conversation_id": "1603197152221696000"
        }
    },
    {
        "data": {
            "conversation_id": "1603197152221696000",
            "id": "1603197164301287426",
            "text": "REST APIs are well-suited for use with microservices architectures, as they allow for the development of independent services that can be easily combined and integrated with one another.",
            "edit_history_tweet_ids": [
                "1603197164301287426"
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1603197152221696000",
            "id": "1603197160153137153",
            "edit_history_tweet_ids": [
                "1603197160153137153"
            ],
            "text": "REST APIs also provide a flexible and scalable approach to developing APIs, allowing developers to easily build and deploy new APIs without being constrained by a specific platform or development approach."
        }
    },
    {
        "data": {
            "text": "\ud83d\udccc Pros\n\nREST API has the ability to support a wide range of applications, including web, mobile, and IoT.",
            "id": "1603197156185317376",
            "edit_history_tweet_ids": [
                "1603197156185317376"
            ],
            "conversation_id": "1603197152221696000"
        }
    },
    {
        "data": {
            "id": "1603197152221696000",
            "edit_history_tweet_ids": [
                "1603197152221696000"
            ],
            "conversation_id": "1603197152221696000",
            "text": "The pros and cons of REST APIs\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "text": "Hope you like this tip. \ud83d\udc19\n\nDo check out RapidAPI Studio\n\u21b3 https://t.co/DkvKLVEDz6",
            "conversation_id": "1603026802049417216",
            "edit_history_tweet_ids": [
                "1603026806939983874"
            ],
            "id": "1603026806939983874"
        }
    },
    {
        "data": {
            "conversation_id": "1603026802049417216",
            "edit_history_tweet_ids": [
                "1603026802049417216"
            ],
            "text": "Rapid Week Tip \ud83d\udc19\n\n\ud83d\udd39 Test Fragments in RapidAPI Studio by @stanisgiovanni\n\nThere's a chance you'll have to repeat the same steps from one API test to another in RapidAPI Studio.\n\nHere, we can use Test Fragments by creating a child test and using its response in our test. https://t.co/XriEAWM6AP",
            "attachments": {
                "media_keys": [
                    "16_1603026756549722112"
                ]
            },
            "id": "1603026802049417216"
        },
        "includes": {
            "media": [
                {
                    "media_key": "16_1603026756549722112",
                    "type": "animated_gif"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1602842819625947142",
            "edit_history_tweet_ids": [
                "1602842856825257986"
            ],
            "id": "1602842856825257986",
            "text": "Hope you enjoyed this thread.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99"
        }
    },
    {
        "data": {
            "text": "Here is an example GET fetch request that includes the API key. https://t.co/oDE9mNhsBO",
            "id": "1602842851443884034",
            "edit_history_tweet_ids": [
                "1602842851443884034"
            ],
            "attachments": {
                "media_keys": [
                    "3_1602842812806057986"
                ]
            },
            "conversation_id": "1602842819625947142"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1602842812806057986",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fj5xC8gX0AI5Mtf.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1602842807496048641"
                ]
            },
            "text": "Now you can access the API key located in the .env file. https://t.co/QTHA5nMlgq",
            "conversation_id": "1602842819625947142",
            "edit_history_tweet_ids": [
                "1602842846637219840"
            ],
            "id": "1602842846637219840"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1602842807496048641",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fj5xCouXgAEiOCE.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1602842819625947142",
            "id": "1602842841901924357",
            "text": "In the next step, we will import the package in our code. https://t.co/37LitkG8HP",
            "attachments": {
                "media_keys": [
                    "3_1602842802148327426"
                ]
            },
            "edit_history_tweet_ids": [
                "1602842841901924357"
            ]
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1602842802148327426",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fj5xCUzXwAIpsMV.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1602842836680179712"
            ],
            "attachments": {
                "media_keys": [
                    "3_1602842795663917056"
                ]
            },
            "id": "1602842836680179712",
            "text": "To use env file in Node.js, we need to first install the \"dotenv\" package. https://t.co/ROnpuWXKRr",
            "conversation_id": "1602842819625947142"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1602842795663917056",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fj5xB8pXgAAdTZa.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1602842819625947142",
            "edit_history_tweet_ids": [
                "1602842831470608385"
            ],
            "attachments": {
                "media_keys": [
                    "3_1602842790563561473"
                ]
            },
            "id": "1602842831470608385",
            "text": "\ud83d\udccc env file\n\nA file containing environment variables is known as an env file.\n\nVariables that are set in the environment in which a program operates are known as environment variables.\n\nThey are applied to alter the behavior of the program. https://t.co/2KdIMN0FFH"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1602842790563561473",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fj5xBppWQAEGedU.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1602842819625947142",
            "id": "1602842827502895104",
            "edit_history_tweet_ids": [
                "1602842827502895104"
            ],
            "text": "The are two solutions for this.\n\n1\ufe0f\u20e3 The first is to implement a proxy for the API.\n\n2\ufe0f\u20e3 The second simpler-to-implement solution is to use the .env (environment) file.\n\nLet's demonstrate."
        }
    },
    {
        "data": {
            "id": "1602842823535067136",
            "text": "Although making your API key public is a bad idea, it still happens.\n\n- Sometimes, we include it in the GET request parameters.\n\n- Other times, we commit the key to GitHub in our code.",
            "edit_history_tweet_ids": [
                "1602842823535067136"
            ],
            "conversation_id": "1602842819625947142"
        }
    },
    {
        "data": {
            "conversation_id": "1602842819625947142",
            "id": "1602842819625947142",
            "edit_history_tweet_ids": [
                "1602842819625947142"
            ],
            "text": "How to secure your Node.js API key?\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "conversation_id": "1602728560187375618",
            "id": "1602728592420511744",
            "edit_history_tweet_ids": [
                "1602728592420511744"
            ],
            "text": "That\u2019s all for now!\n\nYou can get started with GraphQL using the following course:\n\u21b3 https://t.co/YyiY13riRh\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19"
        }
    },
    {
        "data": {
            "conversation_id": "1602728560187375618",
            "edit_history_tweet_ids": [
                "1602728588347932674"
            ],
            "id": "1602728588347932674",
            "text": "\u2192 When we want to reduce the miscommunication between the client and the server, we can use GraphQL because of its strongly defined data types.\n\u2192 We can use GraphQL for applications we know will be used by people with limited bandwidth."
        }
    },
    {
        "data": {
            "conversation_id": "1602728560187375618",
            "text": "\ud83d\udccc When to use GraphQL?\n\n\u2192 We can use GraphQL when under-fetching and over-fetching impact the application performance.\n\u2192 When we want to get precise data from the API using a single API.",
            "edit_history_tweet_ids": [
                "1602728584346587136"
            ],
            "id": "1602728584346587136"
        }
    },
    {
        "data": {
            "conversation_id": "1602728560187375618",
            "id": "1602728580282212353",
            "edit_history_tweet_ids": [
                "1602728580282212353"
            ],
            "text": "\ud83d\udccc Mutation\n\nThere is also a type that lets you manipulate the data using GraphQL. \n\nIt's called Mutation. Inside this type, you can make calls to different functions that change your data later."
        }
    },
    {
        "data": {
            "conversation_id": "1602728560187375618",
            "id": "1602728576268337153",
            "text": "\ud83d\udccc Query\n\nThe Query type is a special object type that defines all of the top-level entry points for queries that clients execute against your server.\n\nEach field of the Query type defines the name and return type of a different entry point.",
            "edit_history_tweet_ids": [
                "1602728576268337153"
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1602728560187375618",
            "id": "1602728572216639492",
            "edit_history_tweet_ids": [
                "1602728572216639492"
            ],
            "text": "The schema is defined using the type keyword. \n\nThe type can have multiple fields, and you can make a field required by putting an exclamation mark (!) in front of it."
        }
    },
    {
        "data": {
            "conversation_id": "1602728560187375618",
            "text": "\ud83d\udccc How to use GraphQL?\n\nWe have a single entry point. On the server, we define a schema that describes all the possible data we may need to query in our application. \n\nThe data is then later fetched using a syntax that replicates the data's return shape in JSON.",
            "edit_history_tweet_ids": [
                "1602728568227876866"
            ],
            "id": "1602728568227876866"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1602728564192940045"
            ],
            "conversation_id": "1602728560187375618",
            "id": "1602728564192940045",
            "text": "GraphQL is a query language that lets client request the precise data they require from the server. Thus, eliminating the under-fetching and over-fetching.\n\nUnlike REST API, GraphQL provides a single entry point, i.e., /graphql, that we can use to request the data."
        }
    },
    {
        "data": {
            "text": "What is GraphQL?\n\nThread \ud83e\uddf5\ud83d\udc47",
            "id": "1602728560187375618",
            "edit_history_tweet_ids": [
                "1602728560187375618"
            ],
            "conversation_id": "1602728560187375618"
        }
    },
    {
        "data": {
            "conversation_id": "1602674453346918401",
            "id": "1602674458355023873",
            "edit_history_tweet_ids": [
                "1602674458355023873"
            ],
            "text": "Hope you like this tip. \ud83d\udc19\n\nDo check out RapidAPI Studio\n\u21b3 https://t.co/DkvKLVEDz6"
        }
    },
    {
        "data": {
            "text": "Rapid Week Tip \ud83d\udc19\n\n\ud83d\udd39 Quickly generate API tests using Request Generator by @jevgeniazi\n\nIn RapidAPI Studio, you can use the Request Generator to easily create and run extensive tests for your APIs. https://t.co/K0b41DNfWW",
            "id": "1602674453346918401",
            "edit_history_tweet_ids": [
                "1602674453346918401"
            ],
            "attachments": {
                "media_keys": [
                    "16_1602674419180126212"
                ]
            },
            "conversation_id": "1602674453346918401"
        },
        "includes": {
            "media": [
                {
                    "media_key": "16_1602674419180126212",
                    "type": "animated_gif"
                }
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1602444957490495488"
            ],
            "id": "1602444957490495488",
            "text": "That\u2019s all for now! \n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19\ud83d\udc99",
            "conversation_id": "1602444928939958272"
        }
    },
    {
        "data": {
            "id": "1602444953522675712",
            "edit_history_tweet_ids": [
                "1602444953522675712"
            ],
            "conversation_id": "1602444928939958272",
            "text": "These test types are in the order of their popularity, as reported by API developers in the StateofAPI survey.\n\nhttps://t.co/aVvOC7GK4j"
        }
    },
    {
        "data": {
            "conversation_id": "1602444928939958272",
            "id": "1602444949269762048",
            "edit_history_tweet_ids": [
                "1602444949269762048"
            ],
            "text": "\ud83d\udccc Security testing\n\nPenetration and fuzz tests are done to test the API's security.\n\nIn penetration tests, the API is attacked to see its response.\n\nIn fuzz tests, the API is tested by injecting unexpected inputs."
        }
    },
    {
        "data": {
            "conversation_id": "1602444928939958272",
            "id": "1602444945255813123",
            "edit_history_tweet_ids": [
                "1602444945255813123"
            ],
            "text": "\ud83d\udccc Performance testing\n\nPerformance tests evaluate the API's performance under different conditions.\n\nThe most popular example is load testing, which tests the API's behavior under normal, maximum, and overloaded traffic."
        }
    },
    {
        "data": {
            "conversation_id": "1602444928939958272",
            "id": "1602444941267017728",
            "edit_history_tweet_ids": [
                "1602444941267017728"
            ],
            "text": "\ud83d\udccc Validation testing\n\nValidation or acceptance tests are conducted at the end of API development.\n\nThese tests use simple criteria to validate the API's specs, behavior, and efficiency.\n\nThey determine whether the API was developed correctly or not."
        }
    },
    {
        "data": {
            "conversation_id": "1602444928939958272",
            "text": "\ud83d\udccc Integration testing\n\nIf the API connects with other components, applications, or APIs, we should conduct integration testing.\n\nIt tests the data flow and communication of the API to ensure its seamless integration with other parts of the system.",
            "edit_history_tweet_ids": [
                "1602444936997216257"
            ],
            "id": "1602444936997216257"
        }
    },
    {
        "data": {
            "conversation_id": "1602444928939958272",
            "edit_history_tweet_ids": [
                "1602444933058760705"
            ],
            "id": "1602444933058760705",
            "text": "\ud83d\udccc Functional testing\n\nIt tests each function of the API to ensure it is working as expected.\n\nDifferent test cases and scenarios are created, and the API is tested by giving inputs according to them."
        }
    },
    {
        "data": {
            "text": "Types of API tests to perform on your APIs.\n\nThread \ud83e\uddf5\ud83d\udc47",
            "id": "1602444928939958272",
            "edit_history_tweet_ids": [
                "1602444928939958272"
            ],
            "conversation_id": "1602444928939958272"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1602364156501528602"
            ],
            "text": "That\u2019s all for now!\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19",
            "id": "1602364156501528602",
            "conversation_id": "1602364128382914582"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1602364152571465748"
            ],
            "text": "5\ufe0f\u20e3 Review Your Code\n\nBefore submitting the code, check your code manually for any keys or sensitive authentication information.",
            "id": "1602364152571465748",
            "conversation_id": "1602364128382914582"
        }
    },
    {
        "data": {
            "text": "4\ufe0f\u20e3 Restrict access\n\nOne of the ways to avoid the dangers of key exposure is to restrict what the key can do. \n\nAPIs should allow the end-users to limit the API key access to specific actions. They can create separate keys for separate actions like GitHub does with their tokens.",
            "id": "1602364148490407940",
            "edit_history_tweet_ids": [
                "1602364148490407940"
            ],
            "conversation_id": "1602364128382914582"
        }
    },
    {
        "data": {
            "id": "1602364144442904578",
            "edit_history_tweet_ids": [
                "1602364144442904578"
            ],
            "conversation_id": "1602364128382914582",
            "text": "3\ufe0f\u20e3 Regenerate Keys\n\nRegenerate your API keys regularly and update the keys in your applications. \n\nDoing so will render the exposed key useless."
        }
    },
    {
        "data": {
            "id": "1602364140382822401",
            "edit_history_tweet_ids": [
                "1602364140382822401"
            ],
            "text": "2\ufe0f\u20e3 Use .env file\n\nInstead of embedding them in code, use environment variable (.env) files or secrets to store API keys. \n\nDon't forget to add the .env files to gitignore before pushing your code to a GitHub repository so that the file never gets exposed.",
            "conversation_id": "1602364128382914582"
        }
    },
    {
        "data": {
            "conversation_id": "1602364128382914582",
            "edit_history_tweet_ids": [
                "1602364136368869378"
            ],
            "text": "\ud83d\udccc Best Practices\n\n1\ufe0f\u20e3 Don\u2019t embed in code\n\nOne of the most common mistakes developers make is hardcoding the API keys in their applications. \n\nLater, they may push the code to a public GitHub repository where the key is exposed to everyone.",
            "id": "1602364136368869378"
        }
    },
    {
        "data": {
            "conversation_id": "1602364128382914582",
            "edit_history_tweet_ids": [
                "1602364132321366065"
            ],
            "id": "1602364132321366065",
            "text": "\ud83d\udccc API keys\n\nOne way APIs control access is by using encrypted strings called API keys. \n\nWith API keys, you can verify each app's or user's identity and mitigate the risks of unauthorized access."
        }
    },
    {
        "data": {
            "id": "1602364128382914582",
            "edit_history_tweet_ids": [
                "1602364128382914582"
            ],
            "conversation_id": "1602364128382914582",
            "text": "Best Practices for Securing API Keys\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "conversation_id": "1602302003539058691",
            "edit_history_tweet_ids": [
                "1602302008492724224"
            ],
            "text": "Hope you like this tip. \ud83d\udc19\n\nDo check out RapidAPI for Mac\n\u21b3 https://t.co/bnAk5Xf1hp",
            "id": "1602302008492724224"
        }
    },
    {
        "data": {
            "text": "Rapid Week Tip \ud83d\udc19\n\n\ud83d\udd39 Publicly share an API  request response with RapidAPI for Mac by @seaotta\n\nIn RapidAPI for Mac, you can share an API request and response by generating a link and sharing it with others.\n\nThis way, anyone can view the API response within their browser. https://t.co/SkufKyhFj6",
            "id": "1602302003539058691",
            "edit_history_tweet_ids": [
                "1602302003539058691"
            ],
            "attachments": {
                "media_keys": [
                    "16_1602301970374615049"
                ]
            },
            "conversation_id": "1602302003539058691"
        },
        "includes": {
            "media": [
                {
                    "media_key": "16_1602301970374615049",
                    "type": "animated_gif"
                }
            ]
        }
    },
    {
        "data": {
            "text": "That\u2019s all for now! \n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19\ud83d\udc99",
            "id": "1601335380871184385",
            "edit_history_tweet_ids": [
                "1601335380871184385"
            ],
            "conversation_id": "1601335352186257412"
        }
    },
    {
        "data": {
            "conversation_id": "1601335352186257412",
            "text": "\ud83d\udccc Use batching\n\nUse batch endpoints when accessing a large number of resources.\n\nFor example, if you need 100 posts, use/create a batch endpoint like `GET Many Posts` that will let you get all the posts in a single request.",
            "edit_history_tweet_ids": [
                "1601335376785842176"
            ],
            "id": "1601335376785842176"
        }
    },
    {
        "data": {
            "conversation_id": "1601335352186257412",
            "id": "1601335372784574468",
            "edit_history_tweet_ids": [
                "1601335372784574468"
            ],
            "text": "\ud83d\udccc Use caching\n\nCache frequently accessed data to reduce the number of API calls in your application.\n\nCaching will reduce your API usage and improve performance."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1601335368716091394"
            ],
            "conversation_id": "1601335352186257412",
            "id": "1601335368716091394",
            "text": "\ud83d\udccc Avoid unnecessary calls\n\nImprove your code and eliminate excess API calls.\n\nSome API requests might be fetching data that is not being used. Remove them."
        }
    },
    {
        "data": {
            "conversation_id": "1601335352186257412",
            "id": "1601335364609794048",
            "edit_history_tweet_ids": [
                "1601335364609794048"
            ],
            "text": "\ud83d\udccc Track response headers\n\nUse the `X-Rate-Limit`\nresponse headers to keep track of remaining calls. \n\nFor example, `X-Rate-Limit-Remaining: 500` means 500 calls left.\n\nIf you receive a response of \"429 - Too Many Requests\", you've hit the rate limit."
        }
    },
    {
        "data": {
            "text": "\ud83d\udccc Monitor the API\n\nThe easiest solution is to regularly monitor your API usage to see your remaining rate and usage limits.\n\nAPI monitoring tools are very effective for this purpose. See how RapidAPI Studio monitors API usage. \u21b4\n\n\ud83d\udd17 https://t.co/fJq1xjZDkk",
            "id": "1601335360272883712",
            "edit_history_tweet_ids": [
                "1601335360272883712"
            ],
            "conversation_id": "1601335352186257412"
        }
    },
    {
        "data": {
            "conversation_id": "1601335352186257412",
            "id": "1601335356233842689",
            "text": "Usage and rate limits are enforced by API providers to restrict the number of API calls in a specific period.\n\nIf you make too many calls, the API's rate limit will exceed and it will be unusable. \n\nSo, keep the following practices in mind to avoid being rate limited.",
            "edit_history_tweet_ids": [
                "1601335356233842689"
            ]
        }
    },
    {
        "data": {
            "id": "1601335352186257412",
            "edit_history_tweet_ids": [
                "1601335352186257412"
            ],
            "conversation_id": "1601335352186257412",
            "text": "Best practices to avoid API limits.\n\nA thread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1601286850324434945"
            ],
            "text": "That's all for this thread!\n\nIf you liked this, follow @Rapid_API for more exclusive content \ud83d\udc19",
            "id": "1601286850324434945",
            "conversation_id": "1601286822105079809"
        }
    },
    {
        "data": {
            "conversation_id": "1601286822105079809",
            "edit_history_tweet_ids": [
                "1601286846243373059"
            ],
            "id": "1601286846243373059",
            "text": "It is also ideal to restrict GraphiQL and Introspection as they reveal information about your APIs schema, mutations, and even private fields. \n\nIf the API is internal, the best approach is to disable introspection entirely."
        }
    },
    {
        "data": {
            "conversation_id": "1601286822105079809",
            "id": "1601286842132926464",
            "edit_history_tweet_ids": [
                "1601286842132926464"
            ],
            "text": "5\ufe0f\u20e3 Mask errors\n\nDefault GraphQL configurations provide excessive error information which could be used maliciously. This is especially an issue for internal APIs.\n\nTo avoid exposing error details, disable debug mode and stack traces."
        }
    },
    {
        "data": {
            "id": "1601286838169341953",
            "text": "4\ufe0f\u20e3 Use timeouts\n\nSome queries may take an unusually long time to process. The reason for this could be large or expensive queries, but in some cases, you might not know why.\n\nIn any case, it's recommended to configure timeouts for performance and security reasons.",
            "edit_history_tweet_ids": [
                "1601286838169341953"
            ],
            "conversation_id": "1601286822105079809"
        }
    },
    {
        "data": {
            "conversation_id": "1601286822105079809",
            "edit_history_tweet_ids": [
                "1601286834100781056"
            ],
            "text": "3\ufe0f\u20e3 Rate limit\n\nRate limiting GraphQL APIs is more complex than REST APIs.\n\nSeveral effective methods include IP-based limiting, limiting recursion depth, or applying a complexity score system, which calculates a limit based on the query type.",
            "id": "1601286834100781056"
        }
    },
    {
        "data": {
            "conversation_id": "1601286822105079809",
            "edit_history_tweet_ids": [
                "1601286830095220737"
            ],
            "id": "1601286830095220737",
            "text": "2\ufe0f\u20e3 Validate input\n\nData input from clients can be a security risk, most commonly injection attacks.\n\nUse the GraphQL schema to support validation and reject any invalid input. Also, be cautious of using JSON scalars as they are typically more prone to being improperly validated."
        }
    },
    {
        "data": {
            "text": "1\ufe0f\u20e3 Limit query depth\n\nThe nature of GraphQL means it's possible to write large nested queries. These could overwhelm an API or consume too many resources.\n\nDepth limiting can be easily implemented and allows you to set a maximum depth, usually the depth of your deepest query.",
            "id": "1601286826098130944",
            "edit_history_tweet_ids": [
                "1601286826098130944"
            ],
            "conversation_id": "1601286822105079809"
        }
    },
    {
        "data": {
            "text": "GraphQL security tips.\n\nThread \ud83e\uddf5\ud83d\udc47",
            "id": "1601286822105079809",
            "edit_history_tweet_ids": [
                "1601286822105079809"
            ],
            "conversation_id": "1601286822105079809"
        }
    },
    {
        "data": {
            "id": "1601215337646751744",
            "text": "Hope you enjoyed this thread.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99",
            "edit_history_tweet_ids": [
                "1601215337646751744"
            ],
            "conversation_id": "1601215313210654722"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1601215333653700609"
            ],
            "conversation_id": "1601215313210654722",
            "id": "1601215333653700609",
            "text": "API documentation plays a crucial role here.\n\nEach endpoint must be thoroughly documented, including every argument and data type it expects."
        }
    },
    {
        "data": {
            "conversation_id": "1601215313210654722",
            "text": "Endpoint = `posts/:id`\n\nHere \"posts\" refers to the resource collection, and \":id\" is the parameter we can send to the endpoint to obtain a particular resource.",
            "edit_history_tweet_ids": [
                "1601215329568538624"
            ],
            "id": "1601215329568538624"
        }
    },
    {
        "data": {
            "id": "1601215325470597120",
            "text": "\ud83d\udccc  Example\n\nHere\u2019s what an API endpoint URL looks like:\n\n`https://t.co/VjYKzqRiIt`\n\nIt is created by joining the Base URL and endpoint.\n\nThe Base URL is the same for all endpoints. In our case:\n\nBase URL = `https://t.co/w7lsIVdWWH`",
            "edit_history_tweet_ids": [
                "1601215325470597120"
            ],
            "conversation_id": "1601215313210654722"
        }
    },
    {
        "data": {
            "id": "1601215321406218240",
            "edit_history_tweet_ids": [
                "1601215321406218240"
            ],
            "text": "An API uses endpoints to enable data flow in a prescribed manner.\n\nIt can involve getting data out of the application, putting in new data, or updating it.",
            "conversation_id": "1601215313210654722"
        }
    },
    {
        "data": {
            "conversation_id": "1601215313210654722",
            "edit_history_tweet_ids": [
                "1601215317157576704"
            ],
            "text": "\ud83d\udccc  What is an API endpoint?\n\nA digital location known as an API endpoint is where an API receives inquiries about a particular resource on its server.\n\nAn API endpoint is typically a uniform resource locator (URL) that specifies where a resource is located on a server.",
            "id": "1601215317157576704"
        }
    },
    {
        "data": {
            "text": "Understanding API endpoints.\n\nThread \ud83e\uddf5\ud83d\udc47",
            "conversation_id": "1601215313210654722",
            "edit_history_tweet_ids": [
                "1601215313210654722"
            ],
            "id": "1601215313210654722"
        }
    },
    {
        "data": {
            "text": "Thanks for reading! \n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19\ud83d\udc99",
            "id": "1600972484433645568",
            "edit_history_tweet_ids": [
                "1600972484433645568"
            ],
            "conversation_id": "1600972460136058886"
        }
    },
    {
        "data": {
            "conversation_id": "1600972460136058886",
            "id": "1600972480436371456",
            "edit_history_tweet_ids": [
                "1600972480436371456"
            ],
            "text": "\ud83d\udccc Use mocking\n\nMock the missing parts or data for the API to complete its testing without delays.\n\nIf your API connects to another API, you can mock that API and test its integration before production."
        }
    },
    {
        "data": {
            "conversation_id": "1600972460136058886",
            "edit_history_tweet_ids": [
                "1600972476426625024"
            ],
            "id": "1600972476426625024",
            "text": "\ud83d\udccc Perform negative testing\n\nYou have tested the API to see how it responds to valid data input.\n\nBut we should also test the API with invalid inputs to check how it deals with errors."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1600972472345677827"
            ],
            "id": "1600972472345677827",
            "text": "\ud83d\udccc Use the right testing tool\n\nMost API developers use tools to test their APIs.\n\nA proper API testing tool can help you with functional testing, monitoring, and scheduling API tests.\n\nRead more about API testing tools here \n\u21b3 https://t.co/MrlefOLMu6",
            "conversation_id": "1600972460136058886"
        }
    },
    {
        "data": {
            "text": "\ud83d\udccc Simulate production conditions\n\nTest the API in the exact conditions it will face in a production environment. \n\nThis is crucial for ensuring performance and security.",
            "conversation_id": "1600972460136058886",
            "edit_history_tweet_ids": [
                "1600972468310663176"
            ],
            "id": "1600972468310663176"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1600972464301158406"
            ],
            "conversation_id": "1600972460136058886",
            "id": "1600972464301158406",
            "text": "\ud83d\udccc Start with a smoke test\n\nIt is a quick and simple test that verifies the API's basic functionalities. \n\nCall the API with test data and check its response. Confirm whether the response matches the expected behavior."
        }
    },
    {
        "data": {
            "conversation_id": "1600972460136058886",
            "edit_history_tweet_ids": [
                "1600972460136058886"
            ],
            "id": "1600972460136058886",
            "text": "API testing best practices\n\nA thread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "conversation_id": "1600915344746582028",
            "edit_history_tweet_ids": [
                "1600915389613051927"
            ],
            "id": "1600915389613051927",
            "text": "We hope you liked this thread! \ud83d\udc19\n\nFollow @Rapid_API for more exclusive content.\n\nVisit Rapid\u2019s API Hub to play around with 40,000 more APIs (https://t.co/2tM1EEQGY2)"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1600915385452302465"
            ],
            "text": "\ud83d\udd1f OPENALPR API\n\nThe OPENALPR Cloud API is a web-based API that analyses images for license plates as well as vehicle information such as make, model, and color.\n\nhttps://t.co/Njvc6x6Zez",
            "conversation_id": "1600915344746582028",
            "id": "1600915385452302465"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1600915381388021760"
            ],
            "id": "1600915381388021760",
            "text": "9\ufe0f\u20e3 https://t.co/hxFEurzZYW Watermark Detection API\n\nDetects artificially added watermarks, texts, and logos in images with an A.I. powered computer vision solution.\n\nhttps://t.co/lPVKpASyfN",
            "conversation_id": "1600915344746582028"
        }
    },
    {
        "data": {
            "id": "1600915377285992473",
            "edit_history_tweet_ids": [
                "1600915377285992473"
            ],
            "text": "8\ufe0f\u20e3 Logo detection API\n\nTakes an image as an input and outputs the coordinates of the identified logo.\n\nhttps://t.co/0XBQiuOm12",
            "conversation_id": "1600915344746582028"
        }
    },
    {
        "data": {
            "text": "7\ufe0f\u20e3 Pen to Print - Handwriting OCR API\n\nConverts scanned handwritten notes into editable text.\n\nhttps://t.co/oK6bmierEu",
            "id": "1600915373183963150",
            "edit_history_tweet_ids": [
                "1600915373183963150"
            ],
            "conversation_id": "1600915344746582028"
        }
    },
    {
        "data": {
            "id": "1600915369023213593",
            "edit_history_tweet_ids": [
                "1600915369023213593"
            ],
            "conversation_id": "1600915344746582028",
            "text": "6\ufe0f\u20e3 Background Removal API\n\nProvides image foreground segmentation with consequent background removal.\n\nhttps://t.co/G3WGqyNvB2"
        }
    },
    {
        "data": {
            "conversation_id": "1600915344746582028",
            "edit_history_tweet_ids": [
                "1600915364992487433"
            ],
            "text": "5\ufe0f\u20e3 OCR - Extract Text API\n\nExtracts texts from images and supports all languages.\n\nhttps://t.co/kDBcpLELfc",
            "id": "1600915364992487433"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1600915360944984094"
            ],
            "text": "4\ufe0f\u20e3 Microsoft Computer Vision API\n\nA Microsoft Azure AI service that analyses content in images.\n\nhttps://t.co/lRA6QUFxgX",
            "conversation_id": "1600915344746582028",
            "id": "1600915360944984094"
        }
    },
    {
        "data": {
            "conversation_id": "1600915344746582028",
            "text": "3\ufe0f\u20e3 VIN Recognition API\n\nDetects VIN numbers (Vehicle Identity Numbers) from images of IDs, documents, labels, invoices, etc.\n\nhttps://t.co/44ChDc3GG5",
            "edit_history_tweet_ids": [
                "1600915356792623116"
            ],
            "id": "1600915356792623116"
        }
    },
    {
        "data": {
            "id": "1600915352724148238",
            "edit_history_tweet_ids": [
                "1600915352724148238"
            ],
            "conversation_id": "1600915344746582028",
            "text": "2\ufe0f\u20e3 NSFW Image Classification API\n\nA content moderation API you can use to flag possible inappropriate content in your images.\n\nhttps://t.co/hbp88ZGJQh"
        }
    },
    {
        "data": {
            "conversation_id": "1600915344746582028",
            "edit_history_tweet_ids": [
                "1600915348689227788"
            ],
            "id": "1600915348689227788",
            "text": "1\ufe0f\u20e3 Face Detection API\n\nUse Face Detection API to detect human faces in your images with additional options like age and gender.\n\nhttps://t.co/i82hMvGk4L"
        }
    },
    {
        "data": {
            "conversation_id": "1600915344746582028",
            "edit_history_tweet_ids": [
                "1600915344746582028"
            ],
            "id": "1600915344746582028",
            "text": "Top 10 visual recognition APIs.\n\nA thread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "conversation_id": "1600852446498226176",
            "id": "1600852481873002496",
            "edit_history_tweet_ids": [
                "1600852481873002496"
            ],
            "text": "Hope you enjoyed this thread.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99"
        }
    },
    {
        "data": {
            "conversation_id": "1600852446498226176",
            "text": "As you may have noticed, XML supports attributes like they are supported in HTML.\n\nCategory = \"Customer\" is the attribute.\n\nProlog is: &lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;.\n\nProlog is not required.\n\nIt details the encoding that was applied to the XML file.",
            "edit_history_tweet_ids": [
                "1600852477829603329"
            ],
            "id": "1600852477829603329"
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1600852435295248388"
                ]
            },
            "edit_history_tweet_ids": [
                "1600852472083496960"
            ],
            "conversation_id": "1600852446498226176",
            "id": "1600852472083496960",
            "text": "As you can see, XML merely saves data as opposed to HTML.\n\nNo instructions are provided for formatting or displaying the data.\n\nXML supports the three structures.\n\nIt means you can easily define a list of objects. https://t.co/DXZskekqXs"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1600852435295248388",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FjdezueXoAQbAak.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "text": "\ud83d\udccc Example\n\nLet\u2019s look at an example where we use XML.\n\nThe following characteristics are used to describe the user:\n\n- first name\n- last name\n- age https://t.co/CJJZq94SyQ",
            "id": "1600852466668642308",
            "edit_history_tweet_ids": [
                "1600852466668642308"
            ],
            "attachments": {
                "media_keys": [
                    "3_1600852429427417088"
                ]
            },
            "conversation_id": "1600852446498226176"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1600852429427417088",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FjdezYnXoAAJuq0.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "id": "1600852462621040648",
            "edit_history_tweet_ids": [
                "1600852462621040648"
            ],
            "text": "A wide range of software applications handle XML well, and it is also fairly simple to learn and use.\n\nUsers can specify their tags in XML.\n\nLike HTML tags, XML tags are not predefined.\n\nBecause users can build their own tags, XML is incredibly flexible.",
            "conversation_id": "1600852446498226176"
        }
    },
    {
        "data": {
            "conversation_id": "1600852446498226176",
            "edit_history_tweet_ids": [
                "1600852458581925890"
            ],
            "text": "The fact that XML is a very flexible format is just one of its many advantages.\n\nWeb pages, configuration files, databases, and APIs are just a few applications that can use XML.",
            "id": "1600852458581925890"
        }
    },
    {
        "data": {
            "conversation_id": "1600852446498226176",
            "edit_history_tweet_ids": [
                "1600852454526128130"
            ],
            "id": "1600852454526128130",
            "text": "XML files can contain text, data, tables, and other elements, allowing documents to be transmitted and stored in their original format.\n\nXML documents are also easily parsed by various software applications, making them a good candidate for API output."
        }
    },
    {
        "data": {
            "id": "1600852450541453312",
            "text": "XML (Extensible Markup Language) is a markup language used to encode documents in a human-readable and machine-readable format.\n\nIt is designed to transport and store data, as well as to define the structure of documents.",
            "edit_history_tweet_ids": [
                "1600852450541453312"
            ],
            "conversation_id": "1600852446498226176"
        }
    },
    {
        "data": {
            "conversation_id": "1600852446498226176",
            "text": "What is XML format?\n\nThread \ud83e\uddf5\ud83d\udc47",
            "edit_history_tweet_ids": [
                "1600852446498226176"
            ],
            "id": "1600852446498226176"
        }
    },
    {
        "data": {
            "text": "Hope you enjoyed this short tutorial.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99",
            "conversation_id": "1600630745021747200",
            "edit_history_tweet_ids": [
                "1600630783504433152"
            ],
            "id": "1600630783504433152"
        }
    },
    {
        "data": {
            "id": "1600630778538475520",
            "edit_history_tweet_ids": [
                "1600630778538475520"
            ],
            "conversation_id": "1600630745021747200",
            "text": "The PUT request created in Fastify is displayed in the example below.\n\nWe're getting the User ID from the request parameters. https://t.co/yvsPYPKibP",
            "attachments": {
                "media_keys": [
                    "3_1600630739506184193"
                ]
            }
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1600630739506184193",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FjaVLVTWQAE7-MR.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1600630745021747200",
            "edit_history_tweet_ids": [
                "1600630773412945920"
            ],
            "id": "1600630773412945920",
            "attachments": {
                "media_keys": [
                    "3_1600630733370007559"
                ]
            },
            "text": "The simple POST request created in Fastify is displayed in the example below.\n\nAs you can see, this situation calls for the POST technique.\n\nBy using the \"request.body\" method, we are also receiving the request payload. https://t.co/4DOQYsBqbt"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1600630733370007559",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FjaVK-cXoAcG0q2.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "id": "1600630768283402240",
            "edit_history_tweet_ids": [
                "1600630768283402240"
            ],
            "attachments": {
                "media_keys": [
                    "3_1600630728341037056"
                ]
            },
            "text": "You can access your newly created server at http://localhost:3000\n\nYou should receive the following: https://t.co/uC6oE76AxJ",
            "conversation_id": "1600630745021747200"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1600630728341037056",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FjaVKrtXoAA8rQ5.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "id": "1600630764156092419",
            "edit_history_tweet_ids": [
                "1600630764156092419"
            ],
            "text": "The server is then actually launched on port 3000 using the \"app.listen\" function.\n\nWe also implemented a GET method that provides a simple JSON response.\n\nReturning to the command line, type \"node index.js\" to start the server.",
            "conversation_id": "1600630745021747200"
        }
    },
    {
        "data": {
            "conversation_id": "1600630745021747200",
            "id": "1600630758384828418",
            "text": "2\ufe0f\u20e3 Server code\n\nMake a file called index.js in the project folder.\n\nSimple Fastify server code running on port 3000 can be found below.\n\nBefore creating the app, we first need to import Fastify (saved in the app variable) https://t.co/N30vLoyG3g",
            "attachments": {
                "media_keys": [
                    "3_1600630720019550209"
                ]
            },
            "edit_history_tweet_ids": [
                "1600630758384828418"
            ]
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1600630720019550209",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FjaVKMtX0AEPq69.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "text": "1\ufe0f\u20e3 Initiate a new project and install Fastify\n\nRun the following commands after opening your terminal: https://t.co/uB6hjAoknR",
            "id": "1600630752944816129",
            "edit_history_tweet_ids": [
                "1600630752944816129"
            ],
            "attachments": {
                "media_keys": [
                    "3_1600630714483052544"
                ]
            },
            "conversation_id": "1600630745021747200"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1600630714483052544",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FjaVJ4FXkAArIPY.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1600630745021747200",
            "id": "1600630748951765001",
            "text": "Fastify is a Node.js based web framework that provides low-latency, high-performance, and extensible.\n\nLet's learn how to build a basic API server with Fastify.",
            "edit_history_tweet_ids": [
                "1600630748951765001"
            ]
        }
    },
    {
        "data": {
            "text": "How to create a simple API with Fastify\n\nThread \ud83e\uddf5\ud83d\udc47",
            "id": "1600630745021747200",
            "edit_history_tweet_ids": [
                "1600630745021747200"
            ],
            "conversation_id": "1600630745021747200"
        }
    },
    {
        "data": {
            "conversation_id": "1600567854516113408",
            "edit_history_tweet_ids": [
                "1600567882999635973"
            ],
            "id": "1600567882999635973",
            "text": "Follow @Rapid_API for more exclusive content.  \ud83d\udc19 \ud83d\ude80"
        }
    },
    {
        "data": {
            "text": "Creating a mock API can be challenging, so here is a guide on how to do it using Rapid API Hub.\n\u21b3 https://t.co/ZjOeRK8t0N",
            "conversation_id": "1600567854516113408",
            "edit_history_tweet_ids": [
                "1600567878985596934"
            ],
            "id": "1600567878985596934"
        }
    },
    {
        "data": {
            "conversation_id": "1600567854516113408",
            "text": "\ud83d\udccc  Challenges\n\n- Mock API requires maintenance. It may become obsolete if the old request and response data is not updated.\n\n- Mock API's effectiveness depends on the accuracy of the example responses and server interactions.",
            "edit_history_tweet_ids": [
                "1600567875017785353"
            ],
            "id": "1600567875017785353"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1600567871020613654"
            ],
            "id": "1600567871020613654",
            "text": "\ud83d\udccc  Static vs. Dynamic mocking\n\nFor static mocking, we specify example responses for each endpoint, and they are not affected by the input. \n\nDynamic mock responses are able to change according to the input parameters of the API call.",
            "conversation_id": "1600567854516113408"
        }
    },
    {
        "data": {
            "conversation_id": "1600567854516113408",
            "edit_history_tweet_ids": [
                "1600567867061190670"
            ],
            "id": "1600567867061190670",
            "text": "It can be expensive and time-consuming to call actual APIs to test them during integration. \n\nInstead, we mock their responses through mock APIs and complete integration."
        }
    },
    {
        "data": {
            "id": "1600567862933995531",
            "text": "\ud83d\udccc  Why are mock APIs used?\n\nIt can take time to complete building the real API. \n\nWithout a mock API, development may pause until the API is ready.",
            "edit_history_tweet_ids": [
                "1600567862933995531"
            ],
            "conversation_id": "1600567854516113408"
        }
    },
    {
        "data": {
            "conversation_id": "1600567854516113408",
            "edit_history_tweet_ids": [
                "1600567858454568963"
            ],
            "id": "1600567858454568963",
            "text": "\ud83d\udccc API mocking\n\nAPI Mocking lets you imitate and test a real API by emulating its responses, response behaviors, and endpoints.\n\nMock APIs give an idea of the actual API by imitating it on a smaller scale."
        }
    },
    {
        "data": {
            "conversation_id": "1600567854516113408",
            "id": "1600567854516113408",
            "edit_history_tweet_ids": [
                "1600567854516113408"
            ],
            "text": "What is API mocking?\n\nA thread \ud83d\udc47\ud83e\uddf5"
        }
    },
    {
        "data": {
            "text": "\u201cWe selected people based on criteria like the impact of their work and the size of their personal networks.\u201d \u2013 Business Insider.\n\n\u2728 Read all about it here\n\u21b3 https://t.co/EdgKvOr8yJ",
            "id": "1600490047811248130",
            "edit_history_tweet_ids": [
                "1600490047811248130"
            ],
            "conversation_id": "1600490042731929607"
        }
    },
    {
        "data": {
            "text": "Business Insider names our founder and CEO, @iddogino, as one of the top 100 people building the next-generation internet. \ud83d\udea8 https://t.co/5i1BvjxnYW",
            "id": "1600490042731929607",
            "edit_history_tweet_ids": [
                "1600490042731929607"
            ],
            "attachments": {
                "media_keys": [
                    "3_1600490036532858886"
                ]
            },
            "conversation_id": "1600490042731929607"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1600490036532858886",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FjYVNV4X0AY9nZN.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1600235102897856516",
            "text": "Thanks for reading! \n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19\ud83d\udc99",
            "edit_history_tweet_ids": [
                "1600235139136720902"
            ],
            "id": "1600235139136720902"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1600235134866923520"
            ],
            "id": "1600235134866923520",
            "text": "3\ufe0f\u20e3 Request Queues\n\nThis means limiting the number of requests per a given period, for example, allowing only ten requests per second.\n\nThere are many libraries available that implement request queuing for you, for example, Amazon Simple Queue Service (ASQS).",
            "conversation_id": "1600235102897856516"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1600235130928390149"
            ],
            "text": "2\ufe0f\u20e3 Rate Limiting algorithms\n\nThere are several algorithms used to control API calls. The most popular are leaky bucket, fixed window, and sliding log.\n\nEach implements slightly different methods, but all apply scalable and trusted rate limiting.",
            "id": "1600235130928390149",
            "conversation_id": "1600235102897856516"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1600235126759251984"
            ],
            "conversation_id": "1600235102897856516",
            "id": "1600235126759251984",
            "text": "1\ufe0f\u20e3 Throttling\n\nThere are various algorithms for throttling. However, most algorithms first assess if the request exceeds the enforced limit.\n\nIf the limit is exceeded, the throttle is triggered, and the client will have their bandwidth reduced or be disconnected entirely."
        }
    },
    {
        "data": {
            "id": "1600235122824994819",
            "text": "It is considered essential to rate limit both on the server and client sides to maximize efficiency and minimize latency.\n\nLet\u2019s look at the most common methods of rate limiting \ud83d\udc47",
            "edit_history_tweet_ids": [
                "1600235122824994819"
            ],
            "conversation_id": "1600235102897856516"
        }
    },
    {
        "data": {
            "id": "1600235118689484803",
            "text": "API owners can apply rate limiting on the server by limiting TPS (transactions per second) or limiting the number of requests clients make, which is called application rate limiting.",
            "edit_history_tweet_ids": [
                "1600235118689484803"
            ],
            "conversation_id": "1600235102897856516"
        }
    },
    {
        "data": {
            "conversation_id": "1600235102897856516",
            "text": "Rate limiting is also excellent for API scalability. \n\nIf your API experiences a spike in usage or evolves to become more popular over time, rate limiting will keep control of the request flow and resource usage.",
            "edit_history_tweet_ids": [
                "1600235114713210889"
            ],
            "id": "1600235114713210889"
        }
    },
    {
        "data": {
            "text": "Without rate limiting, your API is at risk of malicious attacks because clients can send unlimited requests to the API server. \n\nThis means APIs are targets of DDoS attacks and bots sending an influx of requests, resulting in a massive traffic spike and an overloaded server.",
            "id": "1600235110774759431",
            "edit_history_tweet_ids": [
                "1600235110774759431"
            ],
            "conversation_id": "1600235102897856516"
        }
    },
    {
        "data": {
            "conversation_id": "1600235102897856516",
            "edit_history_tweet_ids": [
                "1600235106819612672"
            ],
            "id": "1600235106819612672",
            "text": "Rate limiting restricts the number of API calls a user can make in a given period.\n\nImplementing rate limiting on your API is a best practice and not only improves performance but is an essential security method."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1600235102897856516"
            ],
            "text": "What exactly is API rate limiting, and how does it work?\n\nA thread \ud83e\uddf5\ud83d\udc47",
            "id": "1600235102897856516",
            "conversation_id": "1600235102897856516"
        }
    },
    {
        "data": {
            "id": "1600183756551233538",
            "edit_history_tweet_ids": [
                "1600183756551233538"
            ],
            "conversation_id": "1600183756551233538",
            "text": "Rapid Week Announcement \ud83d\udc19\ud83d\udea8\n\nWe\u2019re bringing you a whole week of helpful and interesting tips straight from Rapid Engineers.\n\nBe sure to keep an eye out for it next week."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1600129176790478849"
            ],
            "conversation_id": "1600129171295858692",
            "id": "1600129176790478849",
            "text": "That\u2019s all for now!\n\nGo ahead and install RapidAPI Client and start testing your APIs inside VS Code. \n\u21b3 https://t.co/En66s2sZDZ\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1600129174412222464"
            ],
            "text": "We can use environment variables for parameters, headers, and authentication in API requests.",
            "id": "1600129174412222464",
            "conversation_id": "1600129171295858692"
        }
    },
    {
        "data": {
            "conversation_id": "1600129171295858692",
            "attachments": {
                "media_keys": [
                    "16_1600128730051084292"
                ]
            },
            "text": "RapidAPI Client for VS Code Tip! \ud83d\udc19\n\nUse environment variables as API request parameters.\n\nRapidAPI Client lets you define and use environment variables for API calls in VS Code. https://t.co/pjMYYlFkDl",
            "edit_history_tweet_ids": [
                "1600129171295858692"
            ],
            "id": "1600129171295858692"
        },
        "includes": {
            "media": [
                {
                    "media_key": "16_1600128730051084292",
                    "type": "animated_gif"
                }
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1599904711209017349"
            ],
            "text": "I hope you enjoyed this thread.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99",
            "id": "1599904711209017349",
            "conversation_id": "1599904669958119430"
        }
    },
    {
        "data": {
            "id": "1599904707178291202",
            "edit_history_tweet_ids": [
                "1599904707178291202"
            ],
            "conversation_id": "1599904669958119430",
            "text": "6\ufe0f\u20e3 PTR DNS record\n\nA PTR record is a Domain Name System (DNS) record that maps an IP address to a hostname.\n\nPTR records are used for reverse DNS lookups."
        }
    },
    {
        "data": {
            "conversation_id": "1599904669958119430",
            "id": "1599904703046877185",
            "text": "If there are numerous mail servers accessible, the MX record also includes a preference value that is utilized to prioritize message delivery.",
            "edit_history_tweet_ids": [
                "1599904703046877185"
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1599904669958119430",
            "edit_history_tweet_ids": [
                "1599904699045527553"
            ],
            "id": "1599904699045527553",
            "text": "5\ufe0f\u20e3 MX DNS record\n\nMX (Mail Exchange) is a DNS record that specifies a mail server responsible for accepting email messages on behalf of a recipient's domain."
        }
    },
    {
        "data": {
            "conversation_id": "1599904669958119430",
            "id": "1599904695044251649",
            "edit_history_tweet_ids": [
                "1599904695044251649"
            ],
            "text": "4\ufe0f\u20e3 NS DNS record\n\nNS (Name Server) DNS record specifies which DNS server is responsible for a particular zone.\n\nIn other words, the NS record defines the authoritative name servers for a domain."
        }
    },
    {
        "data": {
            "conversation_id": "1599904669958119430",
            "id": "1599904690874957825",
            "edit_history_tweet_ids": [
                "1599904690874957825"
            ],
            "text": "3\ufe0f\u20e3 TXT DNS record\n\nA TXT DNS record stores text-based data associated with a domain name.\n\nThis data can be used for various purposes, such as verifying ownership of the domain or providing additional information about the domain."
        }
    },
    {
        "data": {
            "conversation_id": "1599904669958119430",
            "id": "1599904686592720898",
            "edit_history_tweet_ids": [
                "1599904686592720898"
            ],
            "text": "2\ufe0f\u20e3 CNAME DNS record\n\nCNAME records are used to alias one domain name to another.\n\nFor example, you could use a CNAME record to redirect `https://t.co/evFFf2I2zS` to `https://t.co/MulqsNU8XP`."
        }
    },
    {
        "data": {
            "id": "1599904682578743296",
            "edit_history_tweet_ids": [
                "1599904682578743296"
            ],
            "conversation_id": "1599904669958119430",
            "text": "1\ufe0f\u20e3 A DNS record\n\nA DNS record maps a domain name to the IP address (Version 4) of the computer hosting the domain.\n\nFor instance, the domain `https://t.co/g9a0BIcMRD` maps to IP 172.66.41.2."
        }
    },
    {
        "data": {
            "conversation_id": "1599904669958119430",
            "text": "DNS is used by everyone who accesses the internet, making it one of the most critical components of the internet infrastructure.\n\nHere are a few most common ones.",
            "edit_history_tweet_ids": [
                "1599904678573129728"
            ],
            "id": "1599904678573129728"
        }
    },
    {
        "data": {
            "conversation_id": "1599904669958119430",
            "text": "The Domain Name System (DNS) is a fundamental part of the internet, providing a way to match domain names (such as `https://t.co/evFFf2I2zS`) with the numerical IP addresses that computers use to connect to each other.",
            "edit_history_tweet_ids": [
                "1599904673900666881"
            ],
            "id": "1599904673900666881"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1599904669958119430"
            ],
            "id": "1599904669958119430",
            "text": "Domain name system (DNS) most common records\n\nThread \ud83e\uddf5\ud83d\udc47",
            "conversation_id": "1599904669958119430"
        }
    },
    {
        "data": {
            "conversation_id": "1599822409607135252",
            "id": "1599822440171028502",
            "text": "That\u2019s all for now!\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19",
            "edit_history_tweet_ids": [
                "1599822440171028502"
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1599822433728565248"
            ],
            "text": "\ud83d\udccc Call an API\n\nWe can use HTTP GET method to call an API using Axios. \n\nLet\u2019s use the Famous Quotes API from RapidAPI Hub. \u200b\u200b\u2192 https://t.co/rSjFv0pvGe https://t.co/lZ56L5j5Fe",
            "id": "1599822433728565248",
            "conversation_id": "1599822409607135252",
            "attachments": {
                "media_keys": [
                    "3_1599822397737254913"
                ]
            }
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1599822397737254913",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FjO1_pjXwAEvDas.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1599822409607135252",
            "edit_history_tweet_ids": [
                "1599822427126743041"
            ],
            "id": "1599822427126743041",
            "attachments": {
                "media_keys": [
                    "3_1599822386723012610"
                ]
            },
            "text": "\ud83d\udccc Syntax\n\nAn API call is a promise that either rejects or resolves. To call APIs in JavaScript, we either use promise-chaining or async/await.\n\nLet\u2019s look at both syntaxes with Axios. https://t.co/noisyvc51p"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1599822386723012610",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FjO1_AhXwAIqpsU.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1599822379819171840"
                ]
            },
            "edit_history_tweet_ids": [
                "1599822421762232321"
            ],
            "conversation_id": "1599822409607135252",
            "id": "1599822421762232321",
            "text": "\ud83d\udccc  Import\n\nOnce installed, you can import it via Commonjs/ES6 syntax:\n\nimport axios from 'axios'\n\nor \n\nconst axios = require('axios') https://t.co/IWgf59pUuL"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1599822379819171840",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FjO1-mzXgAABdUi.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1599822417576312832"
            ],
            "id": "1599822417576312832",
            "text": "\ud83d\udccc Installation and Import\n\nYou can install Axios using npm:\n\nnpm install axios",
            "conversation_id": "1599822409607135252"
        }
    },
    {
        "data": {
            "id": "1599822413587529747",
            "edit_history_tweet_ids": [
                "1599822413587529747"
            ],
            "conversation_id": "1599822409607135252",
            "text": "\ud83d\udccc What is Axios?\n\nIt is an open-source, promise-based HTTP client. \n\nIt uses JavaScript\u2019s promises to send HTTP requests and manage their responses."
        }
    },
    {
        "data": {
            "conversation_id": "1599822409607135252",
            "text": "Call APIs using Axios.\n\nThread \ud83e\uddf5\ud83d\udc47",
            "edit_history_tweet_ids": [
                "1599822409607135252"
            ],
            "id": "1599822409607135252"
        }
    },
    {
        "data": {
            "text": "That\u2019s all for now!\n\nGo ahead and install RapidAPI Client and start testing your APIs inside VS Code. \n\u21b3https://t.co/En66s2bWBZ\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19",
            "conversation_id": "1599776723582611456",
            "edit_history_tweet_ids": [
                "1599776733200539648"
            ],
            "id": "1599776733200539648"
        }
    },
    {
        "data": {
            "conversation_id": "1599776723582611456",
            "attachments": {
                "media_keys": [
                    "16_1599776626786680832"
                ]
            },
            "id": "1599776729693765634",
            "edit_history_tweet_ids": [
                "1599776729693765634"
            ],
            "text": "\ud83d\udccc Generate API request snippets\n\nOne of the features that RapidAPI Client offers is that you can generate code snippets for implementing API requests in your applications. \n\nThe RapidAPI extension automatically generates code snippets in 40+ languages. https://t.co/bmIWh2KjIL"
        },
        "includes": {
            "media": [
                {
                    "media_key": "16_1599776626786680832",
                    "type": "animated_gif"
                }
            ]
        }
    },
    {
        "data": {
            "text": "\ud83d\udccc RapidAPI Client for VS Code\n\nIt is a full-featured HTTP client that lets you test and describes the APIs you build or consume inside VS Code. \n\nLink \u2192 https://t.co/En66s2bWBZ",
            "id": "1599776726779068417",
            "edit_history_tweet_ids": [
                "1599776726779068417"
            ],
            "conversation_id": "1599776723582611456"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1599776723582611456"
            ],
            "conversation_id": "1599776723582611456",
            "id": "1599776723582611456",
            "text": "Generate API Request Snippets inside VS Code\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "text": "That\u2019s all for now!\n\nGo ahead and install RapidAPI Client and start testing your APIs inside VS Code. \n\u21b3 https://t.co/En66s2boMr",
            "id": "1599400641155268610",
            "edit_history_tweet_ids": [
                "1599400641155268610"
            ],
            "conversation_id": "1599400632284323843"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1599400637237788673"
            ],
            "id": "1599400637237788673",
            "text": "If you use a cURL command, the method, headers, and body will automatically be populated.",
            "conversation_id": "1599400632284323843"
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "16_1599400599480664066"
                ]
            },
            "conversation_id": "1599400632284323843",
            "id": "1599400632284323843",
            "edit_history_tweet_ids": [
                "1599400632284323843"
            ],
            "text": "RapidAPI Client for VS Code Tip! \ud83d\udc19\n\nGot a URL in your clipboard or a cURL command? \n\nThen you can use the RapidAPI: Create new request from clipboard command to create the request automatically. https://t.co/UIWsfpI5rF"
        },
        "includes": {
            "media": [
                {
                    "media_key": "16_1599400599480664066",
                    "type": "animated_gif"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1599095632068608000",
            "edit_history_tweet_ids": [
                "1599095655003136001"
            ],
            "id": "1599095655003136001",
            "text": "That\u2019s all for now!\n\nGo ahead and install RapidAPI Client and start testing your APIs inside VS Code. \n\u21b3https://t.co/En66s2sZDZ\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19"
        }
    },
    {
        "data": {
            "conversation_id": "1599095632068608000",
            "id": "1599095650716876800",
            "edit_history_tweet_ids": [
                "1599095650716876800"
            ],
            "text": "5\ufe0f\u20e3 Generate types &amp; interfaces from API response\n\nRapidAPI Client for VS Code can automatically generate response types for you."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1599095647818330112"
            ],
            "id": "1599095647818330112",
            "text": "4\ufe0f\u20e3 Code snippet generation\n\nThe RapidAPI Client for VS Code automatically generates code snippets in 40+ languages. \n\nAll you need is to select the language and the package you want to call API, and RapidAPI Client will generate the snippet for you.",
            "conversation_id": "1599095632068608000"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1599095644874248192"
            ],
            "text": "3\ufe0f\u20e3 VS Code theme support\n\nYou can use your favorite VS Code theme with the RapidAPI extension.",
            "id": "1599095644874248192",
            "conversation_id": "1599095632068608000"
        }
    },
    {
        "data": {
            "id": "1599095641585553408",
            "edit_history_tweet_ids": [
                "1599095641585553408"
            ],
            "conversation_id": "1599095632068608000",
            "text": "2\ufe0f\u20e3 Environment variables\n\nCreate and use different environments and environment variables during API testing. https://t.co/F98sqKL5wd",
            "attachments": {
                "media_keys": [
                    "3_1599095443434110976"
                ]
            }
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1599095443434110976",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FjEg1VvWAAACU96.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1599095638171402240"
            ],
            "text": "\ud83d\udccc RapidAPI Client features\n\n1\ufe0f\u20e3 Call APIs from VS Code\n\nYou can test your APIs with an easy-to-use and intuitive UI. https://t.co/7aeOMvbQYR",
            "attachments": {
                "media_keys": [
                    "3_1599095383841538048"
                ]
            },
            "conversation_id": "1599095632068608000",
            "id": "1599095638171402240"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1599095383841538048",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FjEgx3vXgAAffB8.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "id": "1599095635055022082",
            "edit_history_tweet_ids": [
                "1599095635055022082"
            ],
            "conversation_id": "1599095632068608000",
            "text": "\ud83d\udccc RapidAPI Client for VS Code\n\nIt is a full-featured HTTP client that lets you test and describes the APIs you build or consume inside VS Code. \n\nLink \u2192 https://t.co/En66s2sZDZ"
        }
    },
    {
        "data": {
            "conversation_id": "1599095632068608000",
            "id": "1599095632068608000",
            "edit_history_tweet_ids": [
                "1599095632068608000"
            ],
            "text": "Test your APIs inside VS Code\n\n\u200b\u200bThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "conversation_id": "1598792135314219036",
            "id": "1598792159683125272",
            "edit_history_tweet_ids": [
                "1598792159683125272"
            ],
            "text": "That\u2019s all for now!\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19"
        }
    },
    {
        "data": {
            "conversation_id": "1598792135314219036",
            "id": "1598792154419236864",
            "edit_history_tweet_ids": [
                "1598792154419236864"
            ],
            "attachments": {
                "media_keys": [
                    "3_1598792125918978060"
                ]
            },
            "text": "\ud83d\udccc Delete data from session storage\n\nWe can delete a single data entry using sessionStorage.removeItem() method.\n\nIf we want to clear everything, we can use the clear() method. https://t.co/UXbz3xqbvS"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1598792125918978060",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FjAM978XoAwhehY.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1598792117614256134"
                ]
            },
            "edit_history_tweet_ids": [
                "1598792149138653185"
            ],
            "conversation_id": "1598792135314219036",
            "id": "1598792149138653185",
            "text": "\ud83d\udccc Read data from session storage\n\nWe can get the data using the getItem() method.\n\nIf you are retrieving an object/array, make sure you parse it afterward. https://t.co/9a2KjScMdC"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1598792117614256134",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FjAM9dAXoAYvVJx.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1598792135314219036",
            "edit_history_tweet_ids": [
                "1598792143778324508"
            ],
            "text": "\ud83d\udccc Save data in session storage\n\nWe can use the setItem() method to save data inside session storage. \n\nSession storage can only save strings. If you have to store objects/arrays, convert them to strings. https://t.co/N9ksgoYmt7",
            "attachments": {
                "media_keys": [
                    "3_1598792108038660117"
                ]
            },
            "id": "1598792143778324508"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1598792108038660117",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FjAM85VXoBUn5Cu.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "text": "It is a form of Web storage API that temporarily saves data in the web browser.\n\nThe application data you save here gets cleared out after closing the browser or the tab.\n\nLike local storage, the data is not transferred to the server and is readily available on the client side.",
            "conversation_id": "1598792135314219036",
            "edit_history_tweet_ids": [
                "1598792139533688837"
            ],
            "id": "1598792139533688837"
        }
    },
    {
        "data": {
            "conversation_id": "1598792135314219036",
            "edit_history_tweet_ids": [
                "1598792135314219036"
            ],
            "id": "1598792135314219036",
            "text": "Session Storage. What is it?\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "conversation_id": "1598736224562434048",
            "text": "Thanks for reading! \ud83d\udc19\n\nFollow @Rapid_API for more of our exclusive content!",
            "edit_history_tweet_ids": [
                "1598736262587977734"
            ],
            "id": "1598736262587977734"
        }
    },
    {
        "data": {
            "conversation_id": "1598736224562434048",
            "text": "The dataset might not be big enough to require pagination, but it will be needed in the future if the data grows.\n\nIt's good practice to keep this in mind when designing an API.",
            "edit_history_tweet_ids": [
                "1598736258414645255"
            ],
            "id": "1598736258414645255"
        }
    },
    {
        "data": {
            "id": "1598736254195073024",
            "edit_history_tweet_ids": [
                "1598736254195073024"
            ],
            "text": "Pagination is essential if you're dealing with large datasets and many endpoints.\n\nHowever, it is also good to implement it in smaller datasets depending on the API.",
            "conversation_id": "1598736224562434048"
        }
    },
    {
        "data": {
            "conversation_id": "1598736224562434048",
            "edit_history_tweet_ids": [
                "1598736249610723328"
            ],
            "id": "1598736249610723328",
            "text": "3\ufe0f\u20e3 Cursor pagination\n\nThe server returns a cursor with each request, which points toward the next set page.\n\nThere are reverse and forward cursors, allowing you to go forwards or back a page. Cursors are typically encrypted strings, so they can be hard to manipulate by clients."
        }
    },
    {
        "data": {
            "conversation_id": "1598736224562434048",
            "id": "1598736245357776901",
            "edit_history_tweet_ids": [
                "1598736245357776901"
            ],
            "text": "2\ufe0f\u20e3 Keyset pagination\n\nKeyset pagination uses a key as a reference to manage the data returned data. \n\nThis key is passed as a query parameter and is used with a timestamp to page the data as needed."
        }
    },
    {
        "data": {
            "conversation_id": "1598736224562434048",
            "id": "1598736241167667232",
            "edit_history_tweet_ids": [
                "1598736241167667232"
            ],
            "text": "1\ufe0f\u20e3 Offset pagination\n\nThis is seen in SQL-based apps using the commands \u2018limit\u2019 and \u2018offset\u2019 already present in the SQL library.\n\n\u2018limit\u2019 defines the number of items returned, and \u2018offset\u2019 indicates the number of items that should be skipped."
        }
    },
    {
        "data": {
            "conversation_id": "1598736224562434048",
            "id": "1598736236981751810",
            "edit_history_tweet_ids": [
                "1598736236981751810"
            ],
            "text": "This is where pagination can help. There are a few different types of pagination depending on your needs. These are:\n\n1. Offset pagination\n2. Keyset pagination\n3. Seek pagination"
        }
    },
    {
        "data": {
            "conversation_id": "1598736224562434048",
            "edit_history_tweet_ids": [
                "1598736232808419355"
            ],
            "text": "APIs that serve large databases can return thousands, if not millions, of entities in a response.\n\nSuch large responses can take significantly longer to compile and load.",
            "id": "1598736232808419355"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1598736228605726724"
            ],
            "id": "1598736228605726724",
            "text": "API pagination is when a response is divided and returned in several pages instead of all at once.\n\nYou can think of pagination like Google search results, where you have several pages of results instead of one long page returned.",
            "conversation_id": "1598736224562434048"
        }
    },
    {
        "data": {
            "id": "1598736224562434048",
            "edit_history_tweet_ids": [
                "1598736224562434048"
            ],
            "conversation_id": "1598736224562434048",
            "text": "What exactly is API pagination?\n\nA thread \ud83e\uddf5"
        }
    },
    {
        "data": {
            "conversation_id": "1598678132470562819",
            "edit_history_tweet_ids": [
                "1598678163621568512"
            ],
            "id": "1598678163621568512",
            "text": "Thanks for reading this week\u2019s Rapid Comic! \ud83d\udc19\n\nFollow @Rapid_API for more exclusive content.\n\nAlso, visit RapidAPI Hub to discover over 40,000 APIs (https://t.co/2tM1EEQGY2)"
        }
    },
    {
        "data": {
            "id": "1598678158559121410",
            "attachments": {
                "media_keys": [
                    "3_1598678125910626304"
                ]
            },
            "edit_history_tweet_ids": [
                "1598678158559121410"
            ],
            "conversation_id": "1598678132470562819",
            "text": "{ 6 / 6 } https://t.co/eUCdABNaM5"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1598678125910626304",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fi-lSQ0XEAAufzL.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1598678132470562819",
            "id": "1598678153412710401",
            "text": "{ 5 / 6 } https://t.co/jJMcGld3Wf",
            "attachments": {
                "media_keys": [
                    "3_1598678119409491971"
                ]
            },
            "edit_history_tweet_ids": [
                "1598678153412710401"
            ]
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1598678119409491971",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fi-lR4mXoAMkfqA.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1598678132470562819",
            "edit_history_tweet_ids": [
                "1598678148408922112"
            ],
            "text": "{ 4 / 6 } https://t.co/OJRdwZbWec",
            "attachments": {
                "media_keys": [
                    "3_1598678111096344577"
                ]
            },
            "id": "1598678148408922112"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1598678111096344577",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fi-lRZoXEAEn71V.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1598678132470562819",
            "edit_history_tweet_ids": [
                "1598678142549360640"
            ],
            "text": "{ 3 / 6 } https://t.co/Xer4OneKDW",
            "attachments": {
                "media_keys": [
                    "3_1598678103433396225"
                ]
            },
            "id": "1598678142549360640"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1598678103433396225",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fi-lQ9FXwAEwfGu.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1598678132470562819",
            "id": "1598678137398779906",
            "edit_history_tweet_ids": [
                "1598678137398779906"
            ],
            "attachments": {
                "media_keys": [
                    "3_1598678098890874890"
                ]
            },
            "text": "{ 2 / 6 } https://t.co/2dwcPBUIAn"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1598678098890874890",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fi-lQsKWYAoSsDa.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1598678093501276160"
                ]
            },
            "conversation_id": "1598678132470562819",
            "edit_history_tweet_ids": [
                "1598678132470562819"
            ],
            "id": "1598678132470562819",
            "text": "What exactly is API rate limiting?\n\nA thread \ud83d\udc47\n\n{ 1 / 6 } https://t.co/hjMxbtq2V5"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1598678093501276160",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fi-lQYFXoAA4xaF.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1598481037130186752",
            "edit_history_tweet_ids": [
                "1598481057061474304"
            ],
            "id": "1598481057061474304",
            "text": "If you found this thread useful, follow @Rapid_API for more. \ud83d\udc19\ud83d\udc99"
        }
    },
    {
        "data": {
            "conversation_id": "1598481037130186752",
            "edit_history_tweet_ids": [
                "1598481053018120195"
            ],
            "id": "1598481053018120195",
            "text": "\ud83d\udccc Applications\n\nThey are mostly used for event-based real-time applications like:\n\n- Analytics.\n- Chat applications.\n- Collaborative editing/coding.\n- Social feeds.\n\nFor more detail, check out our guide on GraphQL Subscriptions.\n\nhttps://t.co/tVUlKHqqn9"
        }
    },
    {
        "data": {
            "id": "1598481048974905352",
            "edit_history_tweet_ids": [
                "1598481048974905352"
            ],
            "text": "\ud83d\udccc Advantages\n\nThey are fast and great for real-time data updates.\n\nYou don't have to request large objects repeatedly when only a few of the object's fields change. Subscriptions can fetch updates to individual fields.",
            "conversation_id": "1598481037130186752"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1598481044944084992"
            ],
            "text": "\ud83d\udccc How do they work?\n\nA subscription is a continuously living request that pushes data to the client whenever a specific event happens.\n\nBecause of their long-lived nature, they use the WebSocket protocol instead of HTTP.",
            "conversation_id": "1598481037130186752",
            "id": "1598481044944084992"
        }
    },
    {
        "data": {
            "id": "1598481041022402560",
            "edit_history_tweet_ids": [
                "1598481041022402560"
            ],
            "conversation_id": "1598481037130186752",
            "text": "\ud83d\udccc GraphQL Subscriptions\n\nIn addition to queries and mutations, GraphQL offers a third operation type called subscriptions. \n\nWhile queries/mutations fetch data immediately, GraphQL Subscriptions provide a way to fetch data in real-time."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1598481037130186752"
            ],
            "text": "What are GraphQL Subscriptions?\n\nA thread \ud83d\udc47\ud83e\uddf5",
            "id": "1598481037130186752",
            "conversation_id": "1598481037130186752"
        }
    },
    {
        "data": {
            "text": "We hope you found this helpful! \n\nFollow @Rapid_API for more of our exclusive content. \ud83d\udc19\ud83d\ude80",
            "id": "1598393013537050625",
            "edit_history_tweet_ids": [
                "1598393013537050625"
            ],
            "conversation_id": "1598392981429649422"
        }
    },
    {
        "data": {
            "text": "\ud83d\udccc Features\n\nAxios offers additional features that are not natively available in Fetch, such as:\n\n- Request timeouts\n- Request interceptors\n- Simultaneous requests\n\nFor more detail, read our in-depth guide:\nhttps://t.co/B7JCmdXLzP",
            "id": "1598393009476964352",
            "edit_history_tweet_ids": [
                "1598393009476964352"
            ],
            "conversation_id": "1598392981429649422"
        }
    },
    {
        "data": {
            "id": "1598393005438013440",
            "edit_history_tweet_ids": [
                "1598393005438013440"
            ],
            "conversation_id": "1598392981429649422",
            "text": "\ud83d\udccc Compatibility\n\nAxios is backward compatible with older browsers since it uses XMLHttpRequest under the hood.\n\nFetch supports relatively newer browsers."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1598393001201598474"
            ],
            "id": "1598393001201598474",
            "text": "\ud83d\udccc Data transformation\n\nAxios automatically converts the response data into JSON. With Fetch, you need to convert it using `response.json`.\n\nThe same goes for sending body data. Axios automatically stringifies the data but Fetch does not.",
            "conversation_id": "1598392981429649422"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1598392995157524482"
            ],
            "text": "To use Axios, you need to install it using npm or yarn. Unlike Fetch, you can use a different function for each HTTP method like `axios.get`, `https://t.co/T5tM7yCUeb`, etc.\n\nHere is what an Axios API call looks like. https://t.co/xIVT3FLa6V",
            "attachments": {
                "media_keys": [
                    "3_1598392967261192193"
                ]
            },
            "conversation_id": "1598392981429649422",
            "id": "1598392995157524482"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1598392967261192193",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fi6h72EWAAEj2Ns.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1598392955290664960"
                ]
            },
            "text": "\ud83d\udccc Basic Usage\n\nFetch offers the `fetch()` method to send API requests. It takes multiple arguments, like the API endpoint's URL, HTTP method, and parameters. \n\nHere is what an example API call looks like. https://t.co/KbwSUTGeQy",
            "conversation_id": "1598392981429649422",
            "edit_history_tweet_ids": [
                "1598392989298163713"
            ],
            "id": "1598392989298163713"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1598392955290664960",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fi6h7JeWQAAhgMU.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1598392981429649422",
            "id": "1598392985355517970",
            "text": "Axios is the most popular HTTP client library available on npm.\n\nOn the other hand, Fetch is a web API included in all modern browsers. We don\u2019t have to install it.",
            "edit_history_tweet_ids": [
                "1598392985355517970"
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1598392981429649422"
            ],
            "conversation_id": "1598392981429649422",
            "id": "1598392981429649422",
            "text": "Differences between Axios and Fetch for making API calls.\n\nThread \ud83d\udc47\ud83e\uddf5"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1598315976243691523"
            ],
            "conversation_id": "1598315969868431361",
            "id": "1598315976243691523",
            "text": "\u26a1\ufe0fFill out the survey below for a chance to win Rapid Swag kits and T-shirts.\n\nTake the survey here\n\u21b3https://t.co/RyKpTqxtPV"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1598315969868431361"
            ],
            "text": "Last chance to participate in the world's largest API survey. \ud83d\udea8\ud83d\udea8\ud83d\udea8 https://t.co/Iyn3uvO0T6",
            "id": "1598315969868431361",
            "conversation_id": "1598315969868431361",
            "attachments": {
                "media_keys": [
                    "3_1598315966835970051"
                ]
            }
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1598315966835970051",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fi5b51IX0AMXfEi.png"
                }
            ]
        }
    },
    {
        "data": {
            "id": "1598103067982962689",
            "edit_history_tweet_ids": [
                "1598103067982962689"
            ],
            "text": "That's the end of this thread! \ud83d\udc19\n\nFollow @Rapid_API for more exclusive content.",
            "conversation_id": "1598103044092305408"
        }
    },
    {
        "data": {
            "conversation_id": "1598103044092305408",
            "edit_history_tweet_ids": [
                "1598103064011051008"
            ],
            "id": "1598103064011051008",
            "text": "5\ufe0f\u20e3 Input validation\n\nInput validation means ensuring incoming data and requests are received in the correct format. \n\nWithout Input validation, APIs can be vulnerable to code injection attacks."
        }
    },
    {
        "data": {
            "id": "1598103060030652419",
            "text": "4\ufe0f\u20e3 Rate limiting\n\nRate limiting restricts the number of API calls made to the server. \n\nRate limiting prevents bots from potentially sending hundreds or thousands of API requests in a short amount of time and overloading the server to breaking point.",
            "edit_history_tweet_ids": [
                "1598103060030652419"
            ],
            "conversation_id": "1598103044092305408"
        }
    },
    {
        "data": {
            "id": "1598103056058556416",
            "text": "3\ufe0f\u20e3 One-way password hashing\n\nPasswords should never be stored in plain cleartext. \n\nOne-way hashing (encryption) applies an algorithm that scrambles the data in an irreversible way, keeping it hidden from attackers.",
            "edit_history_tweet_ids": [
                "1598103056058556416"
            ],
            "conversation_id": "1598103044092305408"
        }
    },
    {
        "data": {
            "conversation_id": "1598103044092305408",
            "id": "1598103052073959424",
            "text": "2\ufe0f\u20e3 API keys\n\nAPI keys enable user authorization and control API access.\n\nThey can be used to limit the rate of API calls, prevent information from being public, or only allow access to data based on a subscription if the service is paid.",
            "edit_history_tweet_ids": [
                "1598103052073959424"
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1598103048072601602"
            ],
            "conversation_id": "1598103044092305408",
            "id": "1598103048072601602",
            "text": "1\ufe0f\u20e3 Always use HTTPS\n\nAny HTTP-only connection is more prone to being hacked. \n\nAn HTTPS connection uses SSL/TLS certificates to encrypt network connections and considerably removes the risk of attacks like MITM (Man- in-the-middle-attack)."
        }
    },
    {
        "data": {
            "conversation_id": "1598103044092305408",
            "id": "1598103044092305408",
            "edit_history_tweet_ids": [
                "1598103044092305408"
            ],
            "text": "Five ways to secure API endpoints.\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "id": "1598034618745327616",
            "edit_history_tweet_ids": [
                "1598034618745327616"
            ],
            "text": "That's it for this thread! \n\nFor more exclusive content, follow @Rapid_API \ud83d\udc19",
            "conversation_id": "1598034594628083712"
        }
    },
    {
        "data": {
            "conversation_id": "1598034594628083712",
            "id": "1598034614743928853",
            "edit_history_tweet_ids": [
                "1598034614743928853"
            ],
            "text": "5\ufe0f\u20e3 Parameter tampering\n\nParameter tampering aims to manipulate parameters sent in API requests, creating access to potentially sensitive information. \n\nParameter tampering is done mainly through input forms submitted by clients on the web."
        }
    },
    {
        "data": {
            "conversation_id": "1598034594628083712",
            "id": "1598034610755145752",
            "edit_history_tweet_ids": [
                "1598034610755145752"
            ],
            "text": "4\ufe0f\u20e3 MITM (Man-in-the-middle attack)\n\nMITM attacks are when a hacker intercepts communication between two programs to obtain the information being transferred between them.\n\nThis risk is much greater if the data in transit is not encrypted, which is why using HTTPS is standard."
        }
    },
    {
        "data": {
            "id": "1598034606703403008",
            "text": "3\ufe0f\u20e3 Excessive data exposure\n\nThis is where an API returns unneeded or sensitive data in its responses that could be valuable to hackers.\n\nThis is commonly seen where APIs return complete datasets as they are on backend servers, and the client is relied on to filter the results.",
            "edit_history_tweet_ids": [
                "1598034606703403008"
            ],
            "conversation_id": "1598034594628083712"
        }
    },
    {
        "data": {
            "id": "1598034602668527639",
            "text": "2\ufe0f\u20e3 DDoS (Distributed Denial of Service) attack\n\nThis aims to disrupt a server with a large amount of traffic. It essentially creates a traffic jam, with no traffic able to be transferred to and from the server. \n\nThis can break the API by making its data inaccessible to users.",
            "edit_history_tweet_ids": [
                "1598034602668527639"
            ],
            "conversation_id": "1598034594628083712"
        }
    },
    {
        "data": {
            "text": "1\ufe0f\u20e3 API Injection Attack\n\nInjection attacks are carried out by inserting malicious code into the API via a query or request to obtain unauthorized access to data.\n\nThese are most commonly SQL injection attacks, which insert malicious SQL code as a parameter field.",
            "id": "1598034598600052761",
            "edit_history_tweet_ids": [
                "1598034598600052761"
            ],
            "conversation_id": "1598034594628083712"
        }
    },
    {
        "data": {
            "id": "1598034594628083712",
            "edit_history_tweet_ids": [
                "1598034594628083712"
            ],
            "text": "An overview of the most common attacks carried out on APIs.\n\nThread \ud83e\uddf5\ud83d\udc47",
            "conversation_id": "1598034594628083712"
        }
    },
    {
        "data": {
            "id": "1597997396277006338",
            "edit_history_tweet_ids": [
                "1597997396277006338"
            ],
            "conversation_id": "1597997359769722885",
            "text": "That's all for this thread! \n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19"
        }
    },
    {
        "data": {
            "text": "As you can see, there are many options for curl. Initially, it might seem confusing. \n\nHowever, curl is a powerful tool widely used thanks to its convenience and efficiency. curl can effectively streamline testing and interaction with your API.",
            "id": "1597997392258895874",
            "edit_history_tweet_ids": [
                "1597997392258895874"
            ],
            "conversation_id": "1597997359769722885"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1597997388182036481"
            ],
            "text": "\ud83d\udccc -o \n-o is followed by a specified file and redirects the returned data there instead of the standard output.\n\n\ud83d\udccc -H\nAdds additional HTTP Headers to a request. It is followed by the header name and value in enclosed quotes, e.g.\n\nCurl -H \u2018[Header name: value]\u2019 [URL]",
            "id": "1597997388182036481",
            "conversation_id": "1597997359769722885"
        }
    },
    {
        "data": {
            "conversation_id": "1597997359769722885",
            "id": "1597997383845027841",
            "edit_history_tweet_ids": [
                "1597997383845027841"
            ],
            "text": "Other commonly used options are:\n\n\ud83d\udccc -I \nThis command returns HTTP header fields such as Content-Type, Date, etc.\n\n\ud83d\udccc -v \nThe \u2018verbose\u2019 command, which returns data to tell you everything that happened when you ran the curl request, including connection info and headers."
        }
    },
    {
        "data": {
            "conversation_id": "1597997359769722885",
            "id": "1597997379822682112",
            "edit_history_tweet_ids": [
                "1597997379822682112"
            ],
            "text": "curl can be used for authentication and sending all the usual HTTP method requests (GET, POST, DELETE, etc.)\n\nThis is done using the -X option. For example, a POST request syntax is as follows:\n\ncurl -X POST [URL]"
        }
    },
    {
        "data": {
            "id": "1597997375800414208",
            "edit_history_tweet_ids": [
                "1597997375800414208"
            ],
            "text": "There are over 200 curl commands that can be used. Most follow this basic format:\n\ncurl [option] [URL]\n\nYou can run \u2018curl \u2013help\u2019 or simply \u2018-h\u2019 in your command line to get a list of all the available curl commands.",
            "conversation_id": "1597997359769722885"
        }
    },
    {
        "data": {
            "conversation_id": "1597997359769722885",
            "id": "1597997371803291649",
            "text": "A curl request, in its most basic form, looks like this:\n\ncurl [URL]\n\nBy default, curl requests that only specify a URL are sent as GET requests. So the example above would return the HTML source for the specified URL.",
            "edit_history_tweet_ids": [
                "1597997371803291649"
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1597997367709638658"
            ],
            "id": "1597997367709638658",
            "text": "Curl is widely used across the web and is highly portable. It is compatible with almost every operating system and supports many protocols, including HTTPS, FTP, SMPT, POP3, and more.\n\nIn terms of APIs, curl is great for testing endpoints.",
            "conversation_id": "1597997359769722885"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1597997363720818688"
            ],
            "text": "Client URL (curl) is a command line tool used to transfer data. Curl uses URLs to specify where a request is sent, followed by the data to be transferred.",
            "id": "1597997363720818688",
            "conversation_id": "1597997359769722885"
        }
    },
    {
        "data": {
            "text": "What is curl, and how does it work?\n\nA thread \ud83e\uddf5\ud83d\udc47",
            "conversation_id": "1597997359769722885",
            "edit_history_tweet_ids": [
                "1597997359769722885"
            ],
            "id": "1597997359769722885"
        }
    },
    {
        "data": {
            "id": "1597645349807689729",
            "edit_history_tweet_ids": [
                "1597645349807689729"
            ],
            "text": "Hope you enjoyed this thread.\n\nIf you found it useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99",
            "conversation_id": "1597645317675143170"
        }
    },
    {
        "data": {
            "conversation_id": "1597645317675143170",
            "edit_history_tweet_ids": [
                "1597645345621696519"
            ],
            "text": "The HMAC method is used by the client to check the message's validity once it has been received.\n\nIt is possible to tell whether a request is legitimate after comparing the derived signature with the one given by the webhook provider.",
            "id": "1597645345621696519"
        }
    },
    {
        "data": {
            "conversation_id": "1597645317675143170",
            "edit_history_tweet_ids": [
                "1597645341645496321"
            ],
            "id": "1597645341645496321",
            "text": "You can employ a signature verification strategy in this situation.\n\nThis is how it works:\n\nThe client receives a message from the webhook provider that has been secured using the HMAC cryptography technique."
        }
    },
    {
        "data": {
            "id": "1597645337572904962",
            "edit_history_tweet_ids": [
                "1597645337572904962"
            ],
            "conversation_id": "1597645317675143170",
            "text": "\ud83d\udccc Signature verification strategy\n\nUnfortunately, you can't use this technique in all cases.\n\nYou must employ a different security strategy if the webhook URL needs to be accessed by hundreds of unidentified IP addresses."
        }
    },
    {
        "data": {
            "conversation_id": "1597645317675143170",
            "edit_history_tweet_ids": [
                "1597645333584089088"
            ],
            "id": "1597645333584089088",
            "text": "\ud83d\udccc Authorized IPs list\n\nUtilizing the authorized IPs list is one of the simplest ways to stop others from visiting the URL.\n\nYou create firewall rules that, by default, block all access to the webhook URL.\n\nThen you add IP addresses with permitted access to a whitelist."
        }
    },
    {
        "data": {
            "text": "This endpoint is openly accessible. Thus, any application may call it.\n\nTherefore, you should check that the requests your API endpoint receive come from the appropriate source.\n\nYou can accomplish this using a quick verification procedure.",
            "id": "1597645329632985089",
            "edit_history_tweet_ids": [
                "1597645329632985089"
            ],
            "conversation_id": "1597645317675143170"
        }
    },
    {
        "data": {
            "conversation_id": "1597645317675143170",
            "id": "1597645325648502785",
            "edit_history_tweet_ids": [
                "1597645325648502785"
            ],
            "text": "\ud83d\udccc Secure webhooks\n\nYou can easily avoid the request being readable by using an HTTPS connection in place of HTTP.\n\nInstalling the SSL certificate on the web server that hosts the webhook URL is all that is necessary to accomplish this."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1597645321630269453"
            ],
            "id": "1597645321630269453",
            "text": "\ud83d\udccc What is a webhook?\n\nA webhook is a way for an app to provide other apps with real-time information.\n\nA webhook delivers data to other applications as it happens, meaning you get data immediately.",
            "conversation_id": "1597645317675143170"
        }
    },
    {
        "data": {
            "conversation_id": "1597645317675143170",
            "id": "1597645317675143170",
            "text": "How to secure Webhooks?\n\nThread \ud83e\uddf5\ud83d\udc47",
            "edit_history_tweet_ids": [
                "1597645317675143170"
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1597592685984026624",
            "edit_history_tweet_ids": [
                "1597592714744324099"
            ],
            "text": "I hope you enjoyed this thread.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99",
            "id": "1597592714744324099"
        }
    },
    {
        "data": {
            "text": "4\ufe0f\u20e3 Remote API\n\nA remote API is an API that enables access to information and assets kept on a distant server.\n\nMobile applications that need to retrieve data from a server that is not on the same device as the application often use this kind of API.",
            "id": "1597592710365560832",
            "edit_history_tweet_ids": [
                "1597592710365560832"
            ],
            "conversation_id": "1597592685984026624"
        }
    },
    {
        "data": {
            "text": "Every OS, for instance, has its own API.\n\nDoesn't matter if it is Windows, Linux, or macOS. All provide APIs.",
            "conversation_id": "1597592685984026624",
            "edit_history_tweet_ids": [
                "1597592706301235206"
            ],
            "id": "1597592706301235206"
        }
    },
    {
        "data": {
            "id": "1597592702266347520",
            "edit_history_tweet_ids": [
                "1597592702266347520"
            ],
            "conversation_id": "1597592685984026624",
            "text": "3\ufe0f\u20e3 Operating systems APIs\n\nA set of coding directives known as an operating system API enables software to communicate with the operating system.\n\nThis can involve operations like showing information on the screen, opening and shutting files, and memory management."
        }
    },
    {
        "data": {
            "conversation_id": "1597592685984026624",
            "id": "1597592698260754434",
            "edit_history_tweet_ids": [
                "1597592698260754434"
            ],
            "text": "The database may be:\n\n\ud83d\udc49 proprietary: e.g., MSSQL, DB2, or Oracle\n\n\ud83d\udc49 open source: e.g., MongoDB, MySQL, or Postgress."
        }
    },
    {
        "data": {
            "text": "2\ufe0f\u20e3 Database API\n\nA database API is a collection of coding guidelines that enables software to communicate with databases.\n\nData from the database may be retrieved, new data may be added to the database, or current data may be updated.",
            "id": "1597592694167162885",
            "edit_history_tweet_ids": [
                "1597592694167162885"
            ],
            "conversation_id": "1597592685984026624"
        }
    },
    {
        "data": {
            "conversation_id": "1597592685984026624",
            "edit_history_tweet_ids": [
                "1597592690014781440"
            ],
            "id": "1597592690014781440",
            "text": "1\ufe0f\u20e3 Web API\n\nA web API is an application programming interface for a web server or a web browser.\n\nIt is a web development concept typically only used on the client side of web applications."
        }
    },
    {
        "data": {
            "id": "1597592685984026624",
            "text": "Let\u2019s look at different API use cases\n\nThread \ud83e\uddf5\ud83d\udc47",
            "edit_history_tweet_ids": [
                "1597592685984026624"
            ],
            "conversation_id": "1597592685984026624"
        }
    },
    {
        "data": {
            "text": "That\u2019s all for now!\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19",
            "id": "1597364486792527872",
            "edit_history_tweet_ids": [
                "1597364486792527872"
            ],
            "conversation_id": "1597364461681131520"
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1597364451589718021"
                ]
            },
            "conversation_id": "1597364461681131520",
            "id": "1597364481352499200",
            "edit_history_tweet_ids": [
                "1597364481352499200"
            ],
            "text": "\ud83d\udccc Delete data from local storage\n\nYou can delete a single data entry using localstorage.removeItem() method.\n\nIf you want to clear everything, you can use the clear() method. https://t.co/eSWsV0c2ci"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1597364451589718021",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fir6gWnXgAUK5DE.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1597364443628945410"
                ]
            },
            "text": "\ud83d\udccc Read data from local storage\n\nYou can get the data using the getItem() method. If you are retrieving an object/array, make sure you parse it afterward. https://t.co/QzKjRcZQgF",
            "conversation_id": "1597364461681131520",
            "edit_history_tweet_ids": [
                "1597364475912413184"
            ],
            "id": "1597364475912413184"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1597364443628945410",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fir6f49XwAIBC6R.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1597364434120445959"
                ]
            },
            "edit_history_tweet_ids": [
                "1597364470053064705"
            ],
            "conversation_id": "1597364461681131520",
            "id": "1597364470053064705",
            "text": "\ud83d\udccc Save data in local storage\n\nLocal storage provides a setItem() method that we can use to store data. https://t.co/EQ9uqiyJ0S"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1597364434120445959",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fir6fViXkAc4wbr.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "id": "1597364465841889285",
            "text": "\ud83d\udccc  What is local storage?\n\nIt is an API that lets you store data in the browser for extended periods of time. \n\nLocal storage can only save strings. If you need to save an array/object, convert it to string using JSON.stringify() and then save it in the local storage.",
            "edit_history_tweet_ids": [
                "1597364465841889285"
            ],
            "conversation_id": "1597364461681131520"
        }
    },
    {
        "data": {
            "conversation_id": "1597364461681131520",
            "id": "1597364461681131520",
            "edit_history_tweet_ids": [
                "1597364461681131520"
            ],
            "text": "Local Storage. What is it?\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "id": "1597279161030430720",
            "edit_history_tweet_ids": [
                "1597279161030430720"
            ],
            "conversation_id": "1597279122233126912",
            "text": "Hope you enjoyed this short tutorial.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99"
        }
    },
    {
        "data": {
            "conversation_id": "1597279122233126912",
            "id": "1597279156622004224",
            "edit_history_tweet_ids": [
                "1597279156622004224"
            ],
            "text": "Tokens are incredibly adaptable and work with multiple platforms.\n\nAdditionally, there is nothing like domain restriction. \n\nTokens can be transferred between various domains.\n\nBecause they are self-contained, they are larger in size than cookies."
        }
    },
    {
        "data": {
            "conversation_id": "1597279122233126912",
            "edit_history_tweet_ids": [
                "1597279152519913472"
            ],
            "id": "1597279152519913472",
            "text": "The tokens stand alone.\n\nThis signifies that the token has all the data needed for server-side verification.\n\nSince no database searches are necessary, they are appropriate for API authentication."
        }
    },
    {
        "data": {
            "id": "1597279148405272577",
            "edit_history_tweet_ids": [
                "1597279148405272577"
            ],
            "text": "2\ufe0f\u20e3 Tokens\n\nIn essence, tokens are a collection of letters and numbers.\n\nTokens have no state.\n\nIt implies that no information about the token needs to be stored on the server.",
            "conversation_id": "1597279122233126912"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1597279144039022592"
            ],
            "text": "You can use the \"HttpOnly\" setting to prevent JavaScript tampering on client sites.\n\nRemember that only HTTPS connections are secure for cookies.\n\nThe \"Secure\" flag can be used for this reason. \n\nIt ensures that cookies will be sent only if the connection type is HTTPS.",
            "conversation_id": "1597279122233126912",
            "id": "1597279144039022592"
        }
    },
    {
        "data": {
            "id": "1597279139886731264",
            "text": "Cookies allow a domain and its subdomains to exchange information.\n\nSharing cookie information with another domain is not possible.",
            "edit_history_tweet_ids": [
                "1597279139886731264"
            ],
            "conversation_id": "1597279122233126912"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1597279135688265729"
            ],
            "id": "1597279135688265729",
            "text": "Session cookies are stateful.\n\nEach session has a unique ID that the server uses to identify the current user and all the information related to that user.",
            "conversation_id": "1597279122233126912"
        }
    },
    {
        "data": {
            "conversation_id": "1597279122233126912",
            "text": "1\ufe0f\u20e3 Session Cookies\n\nSession Cookies are small data stored both on the server and the client.\n\nThe server often keeps track of sessions in a database or memory.\n\nA browser controls cookies on the client side. They're included with every request.",
            "edit_history_tweet_ids": [
                "1597279131229917184"
            ],
            "id": "1597279131229917184"
        }
    },
    {
        "data": {
            "conversation_id": "1597279122233126912",
            "edit_history_tweet_ids": [
                "1597279126594867201"
            ],
            "text": "The two most common types of authentication are session cookies and tokens.\n\nLet's compare the two and highlight their differences, benefits, and drawbacks.",
            "id": "1597279126594867201"
        }
    },
    {
        "data": {
            "conversation_id": "1597279122233126912",
            "edit_history_tweet_ids": [
                "1597279122233126912"
            ],
            "text": "Difference between Session Cookies and Tokens\n\nThread \ud83e\uddf5\ud83d\udc47",
            "id": "1597279122233126912"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1597228550435704838"
            ],
            "id": "1597228550435704838",
            "text": "\ud83d\udccc What is RapidAPI Client?\n\nIt is an extension that enables API development and testing inside VS Code.\n\nThis course gives a perspective on developing, testing, and monetizing your APIs using RapidAPI Client.\n\nStart here \u21b4\n\ud83d\udd17 https://t.co/EPU0ASnXKb",
            "conversation_id": "1597228545868169218"
        }
    },
    {
        "data": {
            "id": "1597228545868169218",
            "attachments": {
                "media_keys": [
                    "3_1597228538284867585"
                ]
            },
            "text": "RapidAPI Client for VS Code \u26a1\n\nBringing you a practical course on how to build, consume, and test APIs without leaving VS Code.\n\n\ud83d\udd25 Get the complete course for free!\n\ud83d\udd17 https://t.co/EPU0ASFz8L https://t.co/1mBlESvVJx",
            "edit_history_tweet_ids": [
                "1597228545868169218"
            ],
            "conversation_id": "1597228545868169218"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1597228538284867585",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fip-5KGWAAEOqfZ.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1596506791629684739",
            "id": "1596506812617875462",
            "text": "That\u2019s all for now!\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19",
            "edit_history_tweet_ids": [
                "1596506812617875462"
            ]
        }
    },
    {
        "data": {
            "id": "1596506808205512704",
            "text": "\ud83d\udccc How to secure endpoints?\n\n1\ufe0f\u20e3 Use HTTPs protocol as it is more secure than HTTP.\n\n2\ufe0f\u20e3 Use asymmetric (or \u201cone-way\u201d) encryption algorithms for storing passwords.\n\n3\ufe0f\u20e3 Enforce rate limiting to prevent DoS attacks.",
            "edit_history_tweet_ids": [
                "1596506808205512704"
            ],
            "conversation_id": "1596506791629684739"
        }
    },
    {
        "data": {
            "conversation_id": "1596506791629684739",
            "id": "1596506803935670273",
            "edit_history_tweet_ids": [
                "1596506803935670273"
            ],
            "text": "\ud83d\udccc Components of an API endpoint\n\n1\ufe0f\u20e3 Description: short detail on the data accepted/returned by the endpoint.\n\n2\ufe0f\u20e3 HTTP Method: the HTTP verb used to request the endpoint.\n\n3\ufe0f\u20e3 Headers and Parameters: details about the required headers and parameters to access the information."
        }
    },
    {
        "data": {
            "id": "1596506799812771840",
            "edit_history_tweet_ids": [
                "1596506799812771840"
            ],
            "text": "\ud83d\udccc Role of an API endpoint\n\nThe API endpoint dictates the location of the resource and where the request is sent. \n\nEach endpoint locates a unique piece of data. The API cannot access the data if the endpoint is faulty or incorrect.",
            "conversation_id": "1596506791629684739"
        }
    },
    {
        "data": {
            "id": "1596506795715235840",
            "edit_history_tweet_ids": [
                "1596506795715235840"
            ],
            "text": "\ud83d\udccc What is an API endpoint?\n\nThey are the communication touchpoints between the API and the server. In REST APIs, API endpoints are URLs that act as access points to an API and its resources.\n\nHere is an example:\n\nhttps:// api .com/cars",
            "conversation_id": "1596506791629684739"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1596506791629684739"
            ],
            "text": "API endpoint. What is it?\n\nThread \ud83e\uddf5\ud83d\udc47",
            "id": "1596506791629684739",
            "conversation_id": "1596506791629684739"
        }
    },
    {
        "data": {
            "id": "1596228330319400960",
            "edit_history_tweet_ids": [
                "1596228330319400960"
            ],
            "conversation_id": "1596228330319400960",
            "text": "It\u2019s not too late to take Rapid Developer Survey. \ud83d\udc19\n\nAt the end of it, we will randomly select five people and send them Rapid Swag kits and T-shirts. \u26a1\ufe0f \n\nTake the survey today! \ud83d\udc47 \u21b4\nhttps://t.co/RyKpTqy1Ft https://t.co/E6ar7G6v4D"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1596142669222363136"
            ],
            "conversation_id": "1596142653195829249",
            "id": "1596142669222363136",
            "text": "Thanks for reading! \ud83d\udc19\n\nTo discover 40,000 more APIs, visit Rapid\u2019s Hub (https://t.co/2tM1EEQGY2)"
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1596142647479091200"
                ]
            },
            "text": "FIFA Ultimate Team API \u2192 (https://t.co/SQz7ma8TVX)\n\nWorld Cup API \u2192 (https://t.co/UH5sJF8Wt5)\n\n{ 3 / 3 } https://t.co/N6fGg2Toqo",
            "conversation_id": "1596142653195829249",
            "edit_history_tweet_ids": [
                "1596142663786532869"
            ],
            "id": "1596142663786532869"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1596142647479091200",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FiajR_nXwAAEcJZ.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "text": "FIFA 2022 Schedule and Stats API \u2192 (https://t.co/23wDJ4X82R)\n\nFIFA Data API \u2192 (https://t.co/E5Y4pNR9tg)\n\n{ 2 / 3 } https://t.co/HubZjDRVIj",
            "id": "1596142658371584000",
            "edit_history_tweet_ids": [
                "1596142658371584000"
            ],
            "attachments": {
                "media_keys": [
                    "3_1596142641334329350"
                ]
            },
            "conversation_id": "1596142653195829249"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1596142641334329350",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FiajRouWIAYmLwm.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1596142653195829249"
            ],
            "attachments": {
                "media_keys": [
                    "3_1596142634719903749"
                ]
            },
            "id": "1596142653195829249",
            "text": "The FIFA World Cup has kicked off!\n\nA thread \ud83d\udc47 https://t.co/uw8fsnITVO",
            "conversation_id": "1596142653195829249"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1596142634719903749",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FiajRQFWAAUXFlR.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1595942063006179330",
            "id": "1595942107998478337",
            "edit_history_tweet_ids": [
                "1595942107998478337"
            ],
            "text": "Thanks for reading! \ud83d\udc19\n\nFollow @Rapid_API for more exclusive content."
        }
    },
    {
        "data": {
            "conversation_id": "1595942063006179330",
            "id": "1595942103921881088",
            "edit_history_tweet_ids": [
                "1595942103921881088"
            ],
            "text": "\ud83d\udccc Documentation requires maintenance and will evolve as your API evolves. Keep it up-to-date with the API's latest changes.\n\n\ud83d\udccc Ensure your documentation is well-structured."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1595942099647574018"
            ],
            "id": "1595942099647574018",
            "text": "Extra tips:\n\n\ud83d\udccc Writing documentation from scratch may not be the best option. There are open-source frameworks that provide a foundation for writing documentation.\n\n\ud83d\udccc Keep your docs accessible to developers of all skill levels by avoiding overly technical explanations.",
            "conversation_id": "1595942063006179330"
        }
    },
    {
        "data": {
            "conversation_id": "1595942063006179330",
            "edit_history_tweet_ids": [
                "1595942095386443776"
            ],
            "id": "1595942095386443776",
            "text": "7\ufe0f\u20e3 FAQs/comments\n\nAPI documentation is becoming increasingly more interactive. Allowing a comments section enables feedback from users, making you aware of any problems or where to improve."
        }
    },
    {
        "data": {
            "conversation_id": "1595942063006179330",
            "edit_history_tweet_ids": [
                "1595942091263287296"
            ],
            "id": "1595942091263287296",
            "text": "6\ufe0f\u20e3 Error and debugging\n\nYour documentation should provide a section on errors. You should know which status codes can be returned by which endpoints and give solutions to common errors."
        }
    },
    {
        "data": {
            "conversation_id": "1595942063006179330",
            "edit_history_tweet_ids": [
                "1595942087303860225"
            ],
            "id": "1595942087303860225",
            "text": "5\ufe0f\u20e3 Link external resources\n\nIf your API uses external tools such as OAuth for authentication, provide links to appropriate resources that developers can use to understand your API fully."
        }
    },
    {
        "data": {
            "conversation_id": "1595942063006179330",
            "id": "1595942083394781184",
            "edit_history_tweet_ids": [
                "1595942083394781184"
            ],
            "text": "4\ufe0f\u20e3 Provide reference documentation\n\nThis means providing a list of endpoints, available requests and response fields, and authentication information.\n\nThis information should be kept up-to-date. It can also be automated to stay in sync with your latest API updates."
        }
    },
    {
        "data": {
            "conversation_id": "1595942063006179330",
            "edit_history_tweet_ids": [
                "1595942079330336768"
            ],
            "text": "3\ufe0f\u20e3 Code snippet examples\n\nCode snippet examples should support text explanations in various programming languages or at least the most widely used.",
            "id": "1595942079330336768"
        }
    },
    {
        "data": {
            "conversation_id": "1595942063006179330",
            "text": "2\ufe0f\u20e3 Start with your API specification\n\nAPI specs can be used to generate documentation. This both is a human and machine-readable description of your API. The benefit of this is automation.\n\nA popular example is the OpenAPI spec, with which you can describe your API's features.",
            "edit_history_tweet_ids": [
                "1595942075182219264"
            ],
            "id": "1595942075182219264"
        }
    },
    {
        "data": {
            "conversation_id": "1595942063006179330",
            "id": "1595942071122399232",
            "edit_history_tweet_ids": [
                "1595942071122399232"
            ],
            "text": "Here are several essential points to include in your API documentation.\n\n1\ufe0f\u20e3 Getting started info\n\nStart by providing a straightforward and practical explanation of how to use your API, which is why most developers initially come to documentation."
        }
    },
    {
        "data": {
            "conversation_id": "1595942063006179330",
            "id": "1595942066944606208",
            "edit_history_tweet_ids": [
                "1595942066944606208"
            ],
            "text": "Quality API documentation is vital to create a good developer experience around your API.\n\nDocumentation is what explains the functionality of your API as well as how to use it. It is also a resource that developers can return to if they have issues or questions about your API."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1595942063006179330"
            ],
            "text": "A short guide to writing quality API documentation.\n\nA thread \ud83e\uddf5\ud83d\udc47",
            "id": "1595942063006179330",
            "conversation_id": "1595942063006179330"
        }
    },
    {
        "data": {
            "text": "I hope you enjoyed this thread.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99",
            "conversation_id": "1595938033559375874",
            "edit_history_tweet_ids": [
                "1595938062403502080"
            ],
            "id": "1595938062403502080"
        }
    },
    {
        "data": {
            "text": "You may exchange complicated items back and forth between two programs using SOAP.\n\nAdditionally, it makes sure that your communication will reach its target unaltered.",
            "conversation_id": "1595938033559375874",
            "edit_history_tweet_ids": [
                "1595938058347552768"
            ],
            "id": "1595938058347552768"
        }
    },
    {
        "data": {
            "text": "3\ufe0f\u20e3 SOAP API (Simple Object Access Protocol API) is a type of API that allows two systems to communicate using the SOAP protocol.\n\nIt is a protocol that uses XML data format to communicate messages across the network.",
            "id": "1595938054073716737",
            "edit_history_tweet_ids": [
                "1595938054073716737"
            ],
            "conversation_id": "1595938033559375874"
        }
    },
    {
        "data": {
            "text": "RPCs are frequently used to access program functionality that is not available locally.\n\nRPCs can even be used to interact with other programs running on the same computer.",
            "conversation_id": "1595938033559375874",
            "edit_history_tweet_ids": [
                "1595938050005032960"
            ],
            "id": "1595938050005032960"
        }
    },
    {
        "data": {
            "id": "1595938045882236930",
            "edit_history_tweet_ids": [
                "1595938045882236930"
            ],
            "conversation_id": "1595938033559375874",
            "text": "2\ufe0f\u20e3 RPC (A remote procedure call) is a way of communication between two applications running on different machines.\n\nRPCs enable software to call a function on a different program and system.\n\nIn other words, it enables one program to launch a method or subroutine in another."
        }
    },
    {
        "data": {
            "text": "1\ufe0f\u20e3 REST (Representational State Transfer) API.\n\nREST) API is an interface that provides a set of HTTP methods to access resources on a server.\n\nIt is often used to execute web application tasks or get data from a database.",
            "id": "1595938041721389059",
            "edit_history_tweet_ids": [
                "1595938041721389059"
            ],
            "conversation_id": "1595938033559375874"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1595938037699325954"
            ],
            "text": "The architectural style is the predefined set of characteristics and features of the API.\n\nFor APIs, there are numerous architectural design options.\n\nREST, SOAP, and XML-RPC are the most widely used types.",
            "id": "1595938037699325954",
            "conversation_id": "1595938033559375874"
        }
    },
    {
        "data": {
            "conversation_id": "1595938033559375874",
            "text": "Different Architectural Styles of APIs\n\nThread \ud83e\uddf5\ud83d\udc47",
            "edit_history_tweet_ids": [
                "1595938033559375874"
            ],
            "id": "1595938033559375874"
        }
    },
    {
        "data": {
            "conversation_id": "1595869105860784128",
            "edit_history_tweet_ids": [
                "1595869133236834307"
            ],
            "text": "Thanks for reading!\n\nFollow us @Rapid_API for more exclusive content. \ud83d\udc19\ud83d\udc99",
            "id": "1595869133236834307"
        }
    },
    {
        "data": {
            "conversation_id": "1595869105860784128",
            "edit_history_tweet_ids": [
                "1595869129265025024"
            ],
            "text": "PATCH consumes less bandwidth than PUT because we only send information that needs to be updated.",
            "id": "1595869129265025024"
        }
    },
    {
        "data": {
            "conversation_id": "1595869105860784128",
            "id": "1595869124202319874",
            "text": "\ud83d\udccc PATCH\n\nIt's an alternate technique for upgrading resources.\n\nIn this instance, the client provides a portion of the modified data rather than changing the complete resource.\n\nFields that are not part of the payload won't be updated.\n\nWe're sending an email and an avatar. https://t.co/m6f4i77Dl7",
            "attachments": {
                "media_keys": [
                    "3_1595869098856030210"
                ]
            },
            "edit_history_tweet_ids": [
                "1595869124202319874"
            ]
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1595869098856030210",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FiWqfXlWIAIcUHj.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1595869118502240257"
            ],
            "text": "Imagine you wish to update the user using an API.\n\nWe transmit all of the resource's attributes along with the PUT request.\n\nPUT API request consumes more bandwidth than PATCH because we send all of the resource's contents using it. https://t.co/nCWDQQe08v",
            "attachments": {
                "media_keys": [
                    "3_1595869091667001344"
                ]
            },
            "conversation_id": "1595869105860784128",
            "id": "1595869118502240257"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1595869091667001344",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FiWqe8zWQAA3dD5.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1595869105860784128",
            "id": "1595869114207154177",
            "edit_history_tweet_ids": [
                "1595869114207154177"
            ],
            "text": "\ud83d\udccc PUT\n\nThe PUT method offers a technique to edit resources by delivering data that updates the entire resource.\n\nPUT will completely swap out a resource if it already exists and creates the resource if it doesn't exist."
        }
    },
    {
        "data": {
            "conversation_id": "1595869105860784128",
            "id": "1595869110017359872",
            "edit_history_tweet_ids": [
                "1595869110017359872"
            ],
            "text": "APIs employ various HTTP methods but PUT, and PATCH are likely the two that cause the most confusion.\n\nThe resources can be updated or modified using either one of them.\n\nLet's discuss how these approaches differ from one another."
        }
    },
    {
        "data": {
            "text": "What's the difference between PUT and PATCH\n\nThread \ud83e\uddf5\ud83d\udc47",
            "id": "1595869105860784128",
            "edit_history_tweet_ids": [
                "1595869105860784128"
            ],
            "conversation_id": "1595869105860784128"
        }
    },
    {
        "data": {
            "text": "\u201cI wanted something that felt fast, and when I downloaded RapidAPI for Mac, that was the impression I got. I was like, \"woohoo! Okay, this feels native\", and that's why I fell in love with it.\u201d \n\n\u2013 Zeno Rocha (VP of DX, WorkOS)\n\n\u2728 Continue reading \u21b4\nhttps://t.co/IvfG28lYz9",
            "conversation_id": "1595779009249435649",
            "edit_history_tweet_ids": [
                "1595779014395846657"
            ],
            "id": "1595779014395846657"
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1595778998897983490"
                ]
            },
            "conversation_id": "1595779009249435649",
            "edit_history_tweet_ids": [
                "1595779009249435649"
            ],
            "id": "1595779009249435649",
            "text": "Rapid Developer Story! \ud83d\udc19\n\nWe had the pleasure of interviewing @zenorocha, VP of DX at WorkOS, about his experience with RapidAPI for Mac (formerly Paw). \u26a1\ufe0f\n\n\ud83d\udd25 Read all about it\n\ud83d\udd17 https://t.co/IvfG28lYz9 https://t.co/KrSMU1EzAd"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1595778998897983490",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FiVYi3FXwAIkEJI.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1595525092028604427",
            "id": "1595525126727950336",
            "text": "Hope you enjoyed this thread.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99",
            "edit_history_tweet_ids": [
                "1595525126727950336"
            ]
        }
    },
    {
        "data": {
            "id": "1595525120847917056",
            "attachments": {
                "media_keys": [
                    "3_1595525084688564224"
                ]
            },
            "edit_history_tweet_ids": [
                "1595525120847917056"
            ],
            "conversation_id": "1595525092028604427",
            "text": "Use the second parameter of the json_decode method and set it to true if you wish to transform JSON into an associative array rather than an object. https://t.co/HPhYze2Xy5"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1595525084688564224",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FiRxnG8WQAAIM-W.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1595525092028604427",
            "edit_history_tweet_ids": [
                "1595525115411849227"
            ],
            "attachments": {
                "media_keys": [
                    "3_1595525077868634115"
                ]
            },
            "id": "1595525115411849227",
            "text": "Use the \"json_decode\" method to convert JSON data back into a PHP object. https://t.co/Tws9z92STk"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1595525077868634115",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FiRxmtiWYAMVnYR.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1595525092028604427",
            "attachments": {
                "media_keys": [
                    "3_1595525072319569940"
                ]
            },
            "text": "The same function makes it simple to convert PHP arrays into JSON. https://t.co/Ztp0v611KX",
            "edit_history_tweet_ids": [
                "1595525110269624322"
            ],
            "id": "1595525110269624322"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1595525072319569940",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FiRxmY3WYBQ4-JF.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1595525092028604427",
            "attachments": {
                "media_keys": [
                    "3_1595525063859642369"
                ]
            },
            "text": "Use the built-in PHP function \"json_encode\" to transform this PHP object into JSON. https://t.co/S7zH8gWfJK",
            "edit_history_tweet_ids": [
                "1595525105135804436"
            ],
            "id": "1595525105135804436"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1595525063859642369",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FiRxl5WWIAEEmDS.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "id": "1595525100090130432",
            "attachments": {
                "media_keys": [
                    "3_1595525056817422379"
                ]
            },
            "text": "The most common way to use JSON in PHP is to transform ordinary PHP objects or arrays into JSON data.\n\nLet's make a PHP object. https://t.co/kGxpWNzl4B",
            "edit_history_tweet_ids": [
                "1595525100090130432"
            ],
            "conversation_id": "1595525092028604427"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1595525056817422379",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FiRxlfHWYCs6uQR.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1595525092028604427",
            "edit_history_tweet_ids": [
                "1595525096004804626"
            ],
            "text": "JSON (JavaScript Object Notation) is a lightweight data-interchange format. \n\nHumans can read and write it with ease.\n\nMachines can quickly parse and generate it.\n\nJSON is a text format that is completely language-independent.",
            "id": "1595525096004804626"
        }
    },
    {
        "data": {
            "conversation_id": "1595525092028604427",
            "id": "1595525092028604427",
            "edit_history_tweet_ids": [
                "1595525092028604427"
            ],
            "text": "How to work with JSON in PHP\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "text": "Thanks for reading! \ud83d\udc19\n\nFollow @Rapid_API for more exclusive content.\n\nIf you\u2019d like to discover 40,000 more APIs, visit RapidAPI Hub (https://t.co/2tM1EEz5zs)",
            "id": "1595485114049253377",
            "edit_history_tweet_ids": [
                "1595485114049253377"
            ],
            "conversation_id": "1595485076325908491"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1595485109758705703"
            ],
            "text": "8\ufe0f\u20e3 Recipe Search and Diet API\n\nSearch this recipe database and filter by diet, allergy restrictions, calories, and more.\n\nhttps://t.co/YmXdh6cEMV",
            "id": "1595485109758705703",
            "conversation_id": "1595485076325908491"
        }
    },
    {
        "data": {
            "conversation_id": "1595485076325908491",
            "text": "7\ufe0f\u20e3 Fitness Calculator API\n\nFind BMI, ideal weight, and calorie requirements with this API.\n\nhttps://t.co/rFZ4co4BCg",
            "edit_history_tweet_ids": [
                "1595485105719492608"
            ],
            "id": "1595485105719492608"
        }
    },
    {
        "data": {
            "text": "6\ufe0f\u20e3 Diagnoses API\n\nProvides data for medical symptoms, categories, and more that can help implement a symptom checker.\n\nhttps://t.co/wlil38NSmC",
            "id": "1595485101655298049",
            "edit_history_tweet_ids": [
                "1595485101655298049"
            ],
            "conversation_id": "1595485076325908491"
        }
    },
    {
        "data": {
            "id": "1595485097364537348",
            "text": "5\ufe0f\u20e3 Mega Fitness Calculator API\n\nSeven fitness calculators in one API. Find BMI, TDEE, BMR, body fat percentage, and more.\n\nhttps://t.co/N8ouHgvMqr",
            "edit_history_tweet_ids": [
                "1595485097364537348"
            ],
            "conversation_id": "1595485076325908491"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1595485093115543552"
            ],
            "text": "4\ufe0f\u20e3 mental-health-info-api\n\nProvides key URLs from top newspapers and articles around the world on topics about mental health.\n\nhttps://t.co/a4rl0lKQao",
            "id": "1595485093115543552",
            "conversation_id": "1595485076325908491"
        }
    },
    {
        "data": {
            "conversation_id": "1595485076325908491",
            "edit_history_tweet_ids": [
                "1595485088841711632"
            ],
            "id": "1595485088841711632",
            "text": "3\ufe0f\u20e3 ExerciseAPI\n\nSearch a database of over 200 exercises. Search by name, primary muscle, secondary muscle, etc. \n\nhttps://t.co/UiC9MovTLH"
        }
    },
    {
        "data": {
            "conversation_id": "1595485076325908491",
            "edit_history_tweet_ids": [
                "1595485084735488025"
            ],
            "text": "2\ufe0f\u20e3 Body Mass Index (BMI) Calculator API\n\nCalculates the BMI of an individual based on their height and weight.\n\nhttps://t.co/mIKxbtkauz",
            "id": "1595485084735488025"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1595485080255963137"
            ],
            "conversation_id": "1595485076325908491",
            "id": "1595485080255963137",
            "text": "1\ufe0f\u20e3 Exercises by API-Ninjas\n\nProvides workout exercises for every muscle group.\n\nhttps://t.co/BNLy7D5S0Q"
        }
    },
    {
        "data": {
            "id": "1595485076325908491",
            "edit_history_tweet_ids": [
                "1595485076325908491"
            ],
            "text": "Health and Fitness APIs for your next project.\n\nA thread \ud83e\uddf5\ud83d\udc47",
            "conversation_id": "1595485076325908491"
        }
    },
    {
        "data": {
            "id": "1595416897524154373",
            "edit_history_tweet_ids": [
                "1595416897524154373"
            ],
            "conversation_id": "1595416870588407809",
            "text": "That\u2019s all for now!\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19"
        }
    },
    {
        "data": {
            "text": "3\ufe0f\u20e3 Categorizing Data\n\nTo ensure that you are not sending sensitive data, you can also categorize your data as admin, personal, or sensitive information.",
            "id": "1595416893225058304",
            "edit_history_tweet_ids": [
                "1595416893225058304"
            ],
            "conversation_id": "1595416870588407809"
        }
    },
    {
        "data": {
            "conversation_id": "1595416870588407809",
            "id": "1595416888787419138",
            "edit_history_tweet_ids": [
                "1595416888787419138"
            ],
            "text": "2\ufe0f\u20e3 Send only the Necessary Information\n\nYou can also ensure that only the data the client has requested is sent to them. You are not sending any unnecessary information."
        }
    },
    {
        "data": {
            "text": "\ud83d\udccc Prevention techniques\n\n1\ufe0f\u20e3 Data Filtering\n\nInstead of relying on the client side to filter the data, this operation should be performed on the server before sending the data.",
            "conversation_id": "1595416870588407809",
            "edit_history_tweet_ids": [
                "1595416884174020608"
            ],
            "id": "1595416884174020608"
        }
    },
    {
        "data": {
            "text": "The man-in-the-middle is the most common attack that can exploit this information, as unwanted personnel can intercept the data in transit.",
            "id": "1595416879509942273",
            "edit_history_tweet_ids": [
                "1595416879509942273"
            ],
            "conversation_id": "1595416870588407809"
        }
    },
    {
        "data": {
            "conversation_id": "1595416870588407809",
            "id": "1595416874820542465",
            "edit_history_tweet_ids": [
                "1595416874820542465"
            ],
            "text": "\ud83d\udccc Excessive Data Exposure\n\nThe API developer sends more data than required to the client. The client side has to filter the information to show it to the user, thus leaving a lot of unused data. \n\nThis remaining data can fall prey to potential data leaks."
        }
    },
    {
        "data": {
            "conversation_id": "1595416870588407809",
            "edit_history_tweet_ids": [
                "1595416870588407809"
            ],
            "id": "1595416870588407809",
            "text": "Excessive Data Exposure. What is it?\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "conversation_id": "1595207525309087744",
            "edit_history_tweet_ids": [
                "1595207550039134208"
            ],
            "id": "1595207550039134208",
            "text": "Of course, you can then monetize these APIs by publishing them on  @Rapid_API Hub (https://t.co/2tM1EEReNA)."
        }
    },
    {
        "data": {
            "id": "1595207545815470080",
            "text": "5\ufe0f\u20e3 Password Generator\n\nThis API would generate strong passwords based on the input\n\n- lowercase/uppercase\n- numbers/alpha/special characters\n- min. length\n- calculate password strength score\n- check against the DB for weak passwords",
            "edit_history_tweet_ids": [
                "1595207545815470080"
            ],
            "conversation_id": "1595207525309087744"
        }
    },
    {
        "data": {
            "id": "1595207541591449602",
            "edit_history_tweet_ids": [
                "1595207541591449602"
            ],
            "text": "4\ufe0f\u20e3 Meme API powered by AI\n\nThis API would use GPT-3 to create unique memes.\n\nYou provide a template, and the API will do the rest and generate a meme.",
            "conversation_id": "1595207525309087744"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1595207537455931393"
            ],
            "id": "1595207537455931393",
            "text": "3\ufe0f\u20e3 Summary social media metrics API\n\nImagine an API that will return special data about users e.g., on Twitter.\n\n- most popular tweets of the user for the last week/month\n- most engaged followers\n- most active time",
            "conversation_id": "1595207525309087744"
        }
    },
    {
        "data": {
            "conversation_id": "1595207525309087744",
            "id": "1595207533416787968",
            "edit_history_tweet_ids": [
                "1595207533416787968"
            ],
            "text": "2\ufe0f\u20e3 Domain name generator API\n\nThis API would generate domains based on keywords.\n\nYou can use a combination of prefixes and suffixes with different common keywords.\n\nYou can also implement the functionality to check whether the domain is available."
        }
    },
    {
        "data": {
            "conversation_id": "1595207525309087744",
            "id": "1595207529306406912",
            "edit_history_tweet_ids": [
                "1595207529306406912"
            ],
            "text": "1\ufe0f\u20e3 Tweet ideas API.\n\nA lot of people need help with ideas about what to tweet.\n\nThis API would offer them random tweet ideas."
        }
    },
    {
        "data": {
            "conversation_id": "1595207525309087744",
            "id": "1595207525309087744",
            "edit_history_tweet_ids": [
                "1595207525309087744"
            ],
            "text": "5 API ideas you can build and monetize\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "text": "Thanks for reading! \ud83d\udc19\n\nFollow @Rapid_API for more exclusive content.",
            "id": "1595167744932352000",
            "edit_history_tweet_ids": [
                "1595167744932352000"
            ],
            "conversation_id": "1595167707703672832"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1595167740599275520"
            ],
            "text": "Today SOA applications are uncommon as it's an older architecture that may not be suitable for modern cloud-based applications. \n\nHowever, microservices were developed for the cloud-native movement, and most developers prefer the versatility of service independence they offer.",
            "conversation_id": "1595167707703672832",
            "id": "1595167740599275520"
        }
    },
    {
        "data": {
            "conversation_id": "1595167707703672832",
            "edit_history_tweet_ids": [
                "1595167736455462913"
            ],
            "id": "1595167736455462913",
            "text": "On the other hand, services within a microservice are entirely independent. If one fails, the rest of the services remain functional. \n\nOverall, Microservices are more error tolerant."
        }
    },
    {
        "data": {
            "conversation_id": "1595167707703672832",
            "id": "1595167732416544768",
            "edit_history_tweet_ids": [
                "1595167732416544768"
            ],
            "text": "Another significant difference is how both architectures communicate.\n\nEvery service in SOA communicates through an ESB. If this ESB fails, it compromises functionality across all services."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1595167728280735779"
            ],
            "id": "1595167728280735779",
            "text": "Each service within a microservices generally has one specific purpose, whereas components in SOA have more complex business purposes and functionality and are often implemented as subsystems.\n\nSOA is therefore suited to larger enterprise application environments.",
            "conversation_id": "1595167707703672832"
        }
    },
    {
        "data": {
            "conversation_id": "1595167707703672832",
            "edit_history_tweet_ids": [
                "1595167724019519488"
            ],
            "id": "1595167724019519488",
            "text": "\ud83d\udccc Comparison\n\nAlthough SOA and Microservices seem similar, they are still two different architecture types. Microservices are like a more fine-grained evolution of SOA.\n\nOne of their main differences is scope. Microservices are suited to smaller modern web services."
        }
    },
    {
        "data": {
            "id": "1595167719699222529",
            "edit_history_tweet_ids": [
                "1595167719699222529"
            ],
            "text": "\ud83d\udccc What is a microservice?\n\nOn the other hand, a microservice is an architectural style that focuses on maintaining several independent services that work collectively to create an application.\n\nEach individual service within a microservice uses internal APIs to communicate.",
            "conversation_id": "1595167707703672832"
        }
    },
    {
        "data": {
            "id": "1595167715727183875",
            "edit_history_tweet_ids": [
                "1595167715727183875"
            ],
            "conversation_id": "1595167707703672832",
            "text": "In SOA applications, each service is independent and provides its own business purposes but can communicate with others across various platforms and languages.\n\nSOA components are loosely coupled and use a central Enterprise Service Bus (ESB) to communicate."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1595167711713234989"
            ],
            "id": "1595167711713234989",
            "text": "\ud83d\udccc What is Service-Oriented Architecture?\n\nService-Oriented Architecture (SOA) is a software architectural style that structures an application by breaking it down into multiple components called services.\n\nEach service represents a functional business domain.",
            "conversation_id": "1595167707703672832"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1595167707703672832"
            ],
            "id": "1595167707703672832",
            "text": "An overview of Microservices and Service-Oriented Architecture (SOA).\n\nA thread \ud83e\uddf5\ud83d\udc47",
            "conversation_id": "1595167707703672832"
        }
    },
    {
        "data": {
            "conversation_id": "1595039236637413376",
            "id": "1595039242908205056",
            "edit_history_tweet_ids": [
                "1595039242908205056"
            ],
            "text": "What is the State of API?\n\n\ud83d\udd39 Most exhaustive API survey\n\ud83d\udd39 Insight into API trends and industry\n\ud83d\udd39 2200 participated last year\n\nPlease take a moment to fill out the survey below\n\u21b3 https://t.co/RyKpTqy1Ft"
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "16_1595039170350694400"
                ]
            },
            "conversation_id": "1595039236637413376",
            "id": "1595039236637413376",
            "edit_history_tweet_ids": [
                "1595039236637413376"
            ],
            "text": "State of APIs Developer Survey! \ud83d\udc19\n\n\ud83d\udce3 Calling all API developers to participate in the world's largest API survey. \n\n\ud83d\udd25 Remember the fun interactive website from last year? We are bringing it back this year with all the new API trends.\n\n\ud83d\udd17 https://t.co/RyKpTqfSrl https://t.co/hDTIESu58c"
        },
        "includes": {
            "media": [
                {
                    "media_key": "16_1595039170350694400",
                    "type": "animated_gif"
                }
            ]
        }
    },
    {
        "data": {
            "text": "You can find these APIs and 40,000 more at RapidAPI Hub(https://t.co/qR0f3BrLmA).\n\nFollow us @Rapid_API for more exclusive content. \ud83d\udc19\ud83d\udc99",
            "conversation_id": "1594794534356934657",
            "edit_history_tweet_ids": [
                "1594794568397905920"
            ],
            "id": "1594794568397905920"
        }
    },
    {
        "data": {
            "conversation_id": "1594794534356934657",
            "edit_history_tweet_ids": [
                "1594794564124311553"
            ],
            "id": "1594794564124311553",
            "text": "7\ufe0f\u20e3 TennisAPI\n\nGet access to data on events, players, live scores, and tournaments around the world.\n\nhttps://t.co/7tSrs2UR3z"
        }
    },
    {
        "data": {
            "id": "1594794559938109445",
            "edit_history_tweet_ids": [
                "1594794559938109445"
            ],
            "conversation_id": "1594794534356934657",
            "text": "6\ufe0f\u20e3 API-FORMULA-1\n\nProvides all data on Formula 1 circuits, drivers, teams, and rankings.\n\nhttps://t.co/doMy6xLlY0"
        }
    },
    {
        "data": {
            "conversation_id": "1594794534356934657",
            "id": "1594794555722768384",
            "edit_history_tweet_ids": [
                "1594794555722768384"
            ],
            "text": "5\ufe0f\u20e3 API-BASKETBALL\n\nMore than 380 basketball leagues and cups with data on live scores, odds, seasons, historical data, and more.\n\nhttps://t.co/hA11joEmVv"
        }
    },
    {
        "data": {
            "text": "4\ufe0f\u20e3 TheRundown\n\nThe fastest and most accurate stats and real-time odds from major sportsbooks.\n\nhttps://t.co/q1X6Ck59lh",
            "conversation_id": "1594794534356934657",
            "edit_history_tweet_ids": [
                "1594794551331651584"
            ],
            "id": "1594794551331651584"
        }
    },
    {
        "data": {
            "id": "1594794547149676554",
            "text": "3\ufe0f\u20e3 API-NBA\n\nLive data on all NBA statistics, games, standings, players, etc.\n\nhttps://t.co/Xqvixt38No",
            "edit_history_tweet_ids": [
                "1594794547149676554"
            ],
            "conversation_id": "1594794534356934657"
        }
    },
    {
        "data": {
            "id": "1594794542901100544",
            "text": "2\ufe0f\u20e3 API-FOOTBALL\n\nLive statistics on over 940 football leagues and cups, such as live and pre-match predictions, players, top scorers, transfers, and more.\n\nhttps://t.co/CLHrh6zWjm",
            "edit_history_tweet_ids": [
                "1594794542901100544"
            ],
            "conversation_id": "1594794534356934657"
        }
    },
    {
        "data": {
            "id": "1594794538588962816",
            "text": "1\ufe0f\u20e3 LiveScore API\n\nProvides live match data for football, cricket, basketball, and more.\n\nhttps://t.co/uB2kIZU4QZ",
            "edit_history_tweet_ids": [
                "1594794538588962816"
            ],
            "conversation_id": "1594794534356934657"
        }
    },
    {
        "data": {
            "conversation_id": "1594794534356934657",
            "id": "1594794534356934657",
            "text": "Who\u2019s ready for the World Cup? \n\nHere are the top Sports APIs you can use to create experiences around it. \ud83e\uddf5\ud83d\udc47",
            "edit_history_tweet_ids": [
                "1594794534356934657"
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1594676979013484546",
            "edit_history_tweet_ids": [
                "1594677004632297472"
            ],
            "id": "1594677004632297472",
            "text": "Hope you enjoyed this thread.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99"
        }
    },
    {
        "data": {
            "id": "1594677000136163328",
            "edit_history_tweet_ids": [
                "1594677000136163328"
            ],
            "conversation_id": "1594676979013484546",
            "text": "The backend service (some API) where the request will be processed is necessary to consume the webhook.\n\nAn XML or JSON format is used to send the webhook POST payload.\n\nAlternatively, it might be delivered as form data, using an encoding like `multipart/form-data`."
        }
    },
    {
        "data": {
            "conversation_id": "1594676979013484546",
            "id": "1594676995790602243",
            "edit_history_tweet_ids": [
                "1594676995790602243"
            ],
            "text": "Webhooks are typically used to send real-time data, while APIs retrieve data on demand.\n\nThe key distinction between APIs and Webhooks is that APIs enable two-way communication, while Webhooks allow one-way data sharing triggered by events."
        }
    },
    {
        "data": {
            "conversation_id": "1594676979013484546",
            "id": "1594676991588012034",
            "edit_history_tweet_ids": [
                "1594676991588012034"
            ],
            "text": "That request typically contains event data, allowing the destination site to take appropriate action.\n\nWe can see differences here \ud83d\udc47"
        }
    },
    {
        "data": {
            "text": "On the other hand, a webhook is a user-defined callback over HTTP, usually triggered by an event. \n\nWhen that event occurs, the source site makes an HTTP request to the URL configured for the webhook.",
            "id": "1594676987355856898",
            "edit_history_tweet_ids": [
                "1594676987355856898"
            ],
            "conversation_id": "1594676979013484546"
        }
    },
    {
        "data": {
            "conversation_id": "1594676979013484546",
            "edit_history_tweet_ids": [
                "1594676983174254593"
            ],
            "id": "1594676983174254593",
            "text": "An API is a set of programming instructions and standards for accessing a web-based software application or web tool. \n\nIn other words, an API serves as a communication channel between two software pieces."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1594676979013484546"
            ],
            "conversation_id": "1594676979013484546",
            "id": "1594676979013484546",
            "text": "Difference between API and Webhook\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1593793668275929088"
            ],
            "id": "1593793668275929088",
            "text": "We hope you found this helpful! \n\nFollow @Rapid_API for more of our exclusive content. \ud83d\udc19",
            "conversation_id": "1593793647308218369"
        }
    },
    {
        "data": {
            "text": "4\ufe0f\u20e3 Finance \n\nFinance and stock market applications handle tremendous amounts of data.\n\nManaging this amount of data without APIs is impossible, and this is where APIs come in.\n\n \ud83d\udd17 Find finance APIs (https://t.co/t2rP6NGfSU)",
            "conversation_id": "1593793647308218369",
            "edit_history_tweet_ids": [
                "1593793663942926337"
            ],
            "id": "1593793663942926337"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1593793659836801024"
            ],
            "conversation_id": "1593793647308218369",
            "id": "1593793659836801024",
            "text": "3\ufe0f\u20e3 SMS Verification\n\nMany applications use SMS-based verification to implement two-factor authentication. \n\nHandling this verification is not simple. So, most applications use APIs to implement it.\n\n \ud83d\udd17 Find verification APIs (https://t.co/pSJIHrPUh8)"
        }
    },
    {
        "data": {
            "id": "1593793655701229568",
            "edit_history_tweet_ids": [
                "1593793655701229568"
            ],
            "conversation_id": "1593793647308218369",
            "text": "2\ufe0f\u20e3 Maps\n\nOnline maps and navigation like Google Maps provide millions of devices with detailed and custom location data.\n\nThey rely on APIs to offer this data to different platforms and devices.\n\n\ud83d\udd17 Find maps APIs (https://t.co/21dvEA3T1Q)"
        }
    },
    {
        "data": {
            "conversation_id": "1593793647308218369",
            "id": "1593793651506700288",
            "edit_history_tweet_ids": [
                "1593793651506700288"
            ],
            "text": "1\ufe0f\u20e3 Weather\n\nHave you ever wondered how you get the latest weather information on your devices? You guessed it, APIs.\n\nYour devices use dedicated weather APIs to get the latest weather information.\n\n\ud83d\udd17 Find weather APIs (https://t.co/2q1ooH0OYs)"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1593793647308218369"
            ],
            "conversation_id": "1593793647308218369",
            "id": "1593793647308218369",
            "text": "Did you know we interact with many APIs every day?\n\nHere are some APIs we utilize daily \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1593759204363456513"
            ],
            "text": "Thanks for reading! \ud83d\udc19\n\nFollow @Rapid_API for more exclusive content.",
            "conversation_id": "1593759175573524480",
            "id": "1593759204363456513"
        }
    },
    {
        "data": {
            "id": "1593759200337096704",
            "edit_history_tweet_ids": [
                "1593759200337096704"
            ],
            "text": "5\ufe0f\u20e3 JSON is also the best tool for data sharing because it uses arrays to store data. \n\nSharing video files, audio files, and files of any size can be done effectively with JSON. \n\nFor this reason and those above, it is considered a universal data format.",
            "conversation_id": "1593759175573524480"
        }
    },
    {
        "data": {
            "text": "4\ufe0f\u20e3 JSON is language and platform-independent. It, therefore, has extensive browser support, and almost all programming languages have functions or libraries to parse JSON.",
            "id": "1593759196142501891",
            "edit_history_tweet_ids": [
                "1593759196142501891"
            ],
            "conversation_id": "1593759175573524480"
        }
    },
    {
        "data": {
            "text": "3\ufe0f\u20e3 JSON is known as self-describing language. This means that, unlike XML, it does not require any extra documentation to be used or understood.",
            "id": "1593759192149622786",
            "edit_history_tweet_ids": [
                "1593759192149622786"
            ],
            "conversation_id": "1593759175573524480"
        }
    },
    {
        "data": {
            "id": "1593759188001652736",
            "text": "2\ufe0f\u20e3 Because of its lightweight syntax, JSON is easily parsed. \n\nThis makes it fast, meaning more data traffic can be handled per second. This is why it's a suitable choice for APIs.",
            "edit_history_tweet_ids": [
                "1593759188001652736"
            ],
            "conversation_id": "1593759175573524480"
        }
    },
    {
        "data": {
            "id": "1593759183806996482",
            "edit_history_tweet_ids": [
                "1593759183806996482"
            ],
            "text": "1\ufe0f\u20e3 JSON is based on the object notation of JavaScript. It is in text format, so it is language-independent and does not require JavaScript to be read.\n\nIt has a familiar syntax and is human-readable, making it incredibly versatile.",
            "conversation_id": "1593759175573524480"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1593759179616944129"
            ],
            "id": "1593759179616944129",
            "text": "JSON (JavaScript Object Notation) is the most well-known and used data exchange format.\n\nThere are many benefits to using JSON instead of other data formats such as XML. Let's look at the advantages. \ud83d\udc47",
            "conversation_id": "1593759175573524480"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1593759175573524480"
            ],
            "text": "The advantages of using JSON for your API.\n\nA thread \ud83e\uddf5\ud83d\udc47",
            "conversation_id": "1593759175573524480",
            "id": "1593759175573524480"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1593598651661688834"
            ],
            "id": "1593598651661688834",
            "text": "We hope you'll continue to learn and grow with us! \ud83d\udc19\n\nFollow @Rapid_API for more fantastic content (we got big plans).",
            "conversation_id": "1593598635148808193"
        }
    },
    {
        "data": {
            "text": "What do you like most about Rapid?\n\n\ud83d\udd39 RapidAPI Client extension for VSCode \u2728\n\ud83d\udd39 RapidAPI Hub\n\ud83d\udd39 RapidAPI for Mac\n\ud83d\udd39 RapidAPI Testing\n\nWe'd love to know. https://t.co/Y5JQhdLF8t",
            "id": "1593598646033211393",
            "edit_history_tweet_ids": [
                "1593598646033211393"
            ],
            "attachments": {
                "media_keys": [
                    "3_1593598629977235456"
                ]
            },
            "conversation_id": "1593598635148808193"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1593598629977235456",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fh2Zgr5XoAAM0_y.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1593598635148808193",
            "id": "1593598640307986432",
            "edit_history_tweet_ids": [
                "1593598640307986432"
            ],
            "attachments": {
                "media_keys": [
                    "3_1593598624272973825"
                ]
            },
            "text": "As on of the biggest and most engaged API Developers community we'd like to say \"Thank You\" to everyone for trusting us on building excellent developer tools. \ud83d\udc4a https://t.co/tE0HMag2xm"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1593598624272973825",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fh2ZgWpXgAEcesN.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1593598635148808193",
            "edit_history_tweet_ids": [
                "1593598635148808193"
            ],
            "attachments": {
                "media_keys": [
                    "3_1593598618841321473"
                ]
            },
            "id": "1593598635148808193",
            "text": "Holy Octopus! Our Dev Community is 100K strong! \ud83e\udd73 https://t.co/dExM1JaID3"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1593598618841321473",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fh2ZgCaXEAEX8an.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1593391411038023680",
            "edit_history_tweet_ids": [
                "1593391444592848897"
            ],
            "id": "1593391444592848897",
            "text": "Hope you enjoyed this thread.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1593391440390160384"
            ],
            "text": "5\ufe0f\u20e3 Inspire Developers\n\nGo one step further by inspiring developers to use your API.\n\nMake guides and tutorials about building real-world applications with your API.",
            "conversation_id": "1593391411038023680",
            "id": "1593391440390160384"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1593391436145123328"
            ],
            "id": "1593391436145123328",
            "text": "4\ufe0f\u20e3 Pricing and Limitations\n\nComplicated pricing and limitations can deter developers.\n\nOffer multiple plans instead of one or two. \n\nCommunicate the usage quotas and rate limits clearly for each plan.",
            "conversation_id": "1593391411038023680"
        }
    },
    {
        "data": {
            "conversation_id": "1593391411038023680",
            "id": "1593391431661473792",
            "edit_history_tweet_ids": [
                "1593391431661473792"
            ],
            "text": "3\ufe0f\u20e3 Interactive console\n\nAdd a playground where developers can test your API.\n\nIt will allow them to test its endpoints and see if it fits their requirements."
        }
    },
    {
        "data": {
            "conversation_id": "1593391411038023680",
            "text": "2\ufe0f\u20e3 Documentation\n\nDevelopers need to understand what an API offers before adopting it.\n\nPresent them with proper, explanatory documentation.\n\nYou can use this guide to improve your documentation.\n\nhttps://t.co/VZzaaBRuOI",
            "edit_history_tweet_ids": [
                "1593391427341324288"
            ],
            "id": "1593391427341324288"
        }
    },
    {
        "data": {
            "conversation_id": "1593391411038023680",
            "edit_history_tweet_ids": [
                "1593391423193317380"
            ],
            "id": "1593391423193317380",
            "text": "Improve this onboarding step by providing quick start guides.\n\nThese guides should have code samples and steps to integrate the API.\n\nIf the API requires a key, communicate it clearly in the guide."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1593391419196162049"
            ],
            "text": "1\ufe0f\u20e3 Time to first call\n\nWhen developers discover your API, their first step is to set up and call your API.\n\nTheir first interaction with your API should be as fast and smooth as possible.",
            "conversation_id": "1593391411038023680",
            "id": "1593391419196162049"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1593391415119208449"
            ],
            "conversation_id": "1593391411038023680",
            "id": "1593391415119208449",
            "text": "Developers are the end-users of your API. So a good developer experience is a deciding factor in its growth and adoption.\n\nHere are a few pointers that can improve your API's developer experience."
        }
    },
    {
        "data": {
            "id": "1593391411038023680",
            "edit_history_tweet_ids": [
                "1593391411038023680"
            ],
            "conversation_id": "1593391411038023680",
            "text": "How to improve the developer experience of your API?\n\nA thread \ud83d\udc47\ud83e\uddf5"
        }
    },
    {
        "data": {
            "conversation_id": "1593289079814180865",
            "id": "1593289108595802113",
            "text": "Thanks for reading! \n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19",
            "edit_history_tweet_ids": [
                "1593289108595802113"
            ]
        }
    },
    {
        "data": {
            "id": "1593289104472641537",
            "text": "3. Code and documentation generation\n\nMany popular specifications provide tools to generate tests and documentation, which are necessary when building an API of industry standards.\n\nThis also speeds up the development process meaning your API gets to market quicker.",
            "edit_history_tweet_ids": [
                "1593289104472641537"
            ],
            "conversation_id": "1593289079814180865"
        }
    },
    {
        "data": {
            "conversation_id": "1593289079814180865",
            "edit_history_tweet_ids": [
                "1593289100496445444"
            ],
            "id": "1593289100496445444",
            "text": "2. Consistent development and alignment\n\nFollowing a specification, you design, build and manage your API according to a universal standard. \n\nThe idea is that your API maximizes accessibility and discoverability and allows for an excellent developer and consumer experience."
        }
    },
    {
        "data": {
            "conversation_id": "1593289079814180865",
            "edit_history_tweet_ids": [
                "1593289096478220288"
            ],
            "id": "1593289096478220288",
            "text": "\ud83d\udccc Benefits of API specifications\n\n1. Human and machine-readable\n\nMost specifications are in JSON or YAML format, both of which are easily read by humans and machines used to produce and consume APIs.\n\nThis creates accessibility for other teams like product management."
        }
    },
    {
        "data": {
            "id": "1593289092472733697",
            "edit_history_tweet_ids": [
                "1593289092472733697"
            ],
            "conversation_id": "1593289079814180865",
            "text": "The most well-known API spec is the OpenAPI (OAS), which is used to define standards for HTTP-based APIs, which are the most widely used across the web.\n\nGraphQL Schema, WSDL (Web Services Description Language), and RAML (RESTful API Modelling Language) are other examples."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1593289088458686473"
            ],
            "conversation_id": "1593289079814180865",
            "id": "1593289088458686473",
            "text": "When building an API, following a specification is a highly recommended best practice to know and plan how your API should be structured and to avoid design flaws. \n\nThere are different specifications for different types of APIs, for example, REST, GraphQL, and SOAP."
        }
    },
    {
        "data": {
            "id": "1593289084411138048",
            "text": "API specifications are documents that outline how an API should work to standardize them for use across various platforms and different programming languages. \n\nYou can think of API specifications as blueprints for constructing an API.",
            "edit_history_tweet_ids": [
                "1593289084411138048"
            ],
            "conversation_id": "1593289079814180865"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1593289079814180865"
            ],
            "text": "What exactly are API specifications, and what are the benefits of using them?\n\nA Thread \ud83e\uddf5\ud83d\udc47",
            "id": "1593289079814180865",
            "conversation_id": "1593289079814180865"
        }
    },
    {
        "data": {
            "conversation_id": "1593227674981658625",
            "id": "1593227707625652224",
            "edit_history_tweet_ids": [
                "1593227707625652224"
            ],
            "text": "We hope you found this helpful! \n\nFollow us @Rapid_API for more exclusive content. \ud83d\udc19"
        }
    },
    {
        "data": {
            "text": "7\ufe0f\u20e3 Include versioning\n\nMake sure you create a new version of your API if you're making major changes that could break it.\n\nThis is usually indicated in endpoints by adding the version at the start of the endpoint. For example:\n\nhttps://example .com/api/v2/articles",
            "conversation_id": "1593227674981658625",
            "edit_history_tweet_ids": [
                "1593227703481679873"
            ],
            "id": "1593227703481679873"
        }
    },
    {
        "data": {
            "id": "1593227699488784390",
            "edit_history_tweet_ids": [
                "1593227699488784390"
            ],
            "conversation_id": "1593227674981658625",
            "text": "6\ufe0f\u20e3 Never use file extensions\n\nThere is no purpose in using file extensions in URIs. They are unnecessary and only make it harder to read clearly.\n\n\u274c https:// example .com/api/profiles.xml"
        }
    },
    {
        "data": {
            "conversation_id": "1593227674981658625",
            "id": "1593227695491633152",
            "edit_history_tweet_ids": [
                "1593227695491633152"
            ],
            "text": "5\ufe0f\u20e3 Use hyphens to separate words\n\nWhen chaining words together, hyphens are the most user-friendly way and are a better choice than underscores. For example:\n\nhttps:// example .com/api/profiles/227/first-name"
        }
    },
    {
        "data": {
            "conversation_id": "1593227674981658625",
            "text": "4\ufe0f\u20e3 Lower case letters\n\nAs a standard, URLs are typed in lowercase. The same applies to API URIs.",
            "edit_history_tweet_ids": [
                "1593227691565662208"
            ],
            "id": "1593227691565662208"
        }
    },
    {
        "data": {
            "conversation_id": "1593227674981658625",
            "id": "1593227687459704832",
            "edit_history_tweet_ids": [
                "1593227687459704832"
            ],
            "text": "3\ufe0f\u20e3 Use plural nouns\n\nThis makes it clear that there is more than one resource within a collection. Using singular nouns can be confusing. For example:\n\n\u274c https:// example .com/api/profile/21\n\u2705 http:// example .com/api/profiles/21"
        }
    },
    {
        "data": {
            "conversation_id": "1593227674981658625",
            "text": "2\ufe0f\u20e3 Use nouns, not verbs\n\nWhen naming the URIs, you should use nouns to describe what the resource is and not what it does. For example:\n\n\u274c https:// example .com/api/getProfiles\n\u2705 http:// example .com/api/profiles",
            "edit_history_tweet_ids": [
                "1593227683198308352"
            ],
            "id": "1593227683198308352"
        }
    },
    {
        "data": {
            "conversation_id": "1593227674981658625",
            "id": "1593227679045763074",
            "edit_history_tweet_ids": [
                "1593227679045763074"
            ],
            "text": "1\ufe0f\u20e3 Use forward slash\n\nUse forward slashes for resource hierarchy and to separate URI resources.\n\nExample: https:// example .com/articles/authors"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1593227674981658625"
            ],
            "conversation_id": "1593227674981658625",
            "id": "1593227674981658625",
            "text": "API endpoint naming best practices.\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1593041334368993280"
            ],
            "text": "I hope you enjoyed this thread.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99",
            "conversation_id": "1593041305629777921",
            "id": "1593041334368993280"
        }
    },
    {
        "data": {
            "id": "1593041329927254016",
            "edit_history_tweet_ids": [
                "1593041329927254016"
            ],
            "conversation_id": "1593041305629777921",
            "text": "6\ufe0f\u20e3 Efficiency\n\nAPIs provide more effective data distribution when content is automatically published and made accessible on different channels at once."
        }
    },
    {
        "data": {
            "conversation_id": "1593041305629777921",
            "edit_history_tweet_ids": [
                "1593041325829529600"
            ],
            "id": "1593041325829529600",
            "text": "5\ufe0f\u20e3 Analysis\n\nYou can get insightful data and important information via APIs.\n\nYou can use this data to promote or improve products."
        }
    },
    {
        "data": {
            "text": "3\ufe0f\u20e3 Greater Value\n\nBy developing APIs, companies make their systems accessible to outsiders.\n\nBy incorporating these 3rd party APIs into their goods, others can increase the value of their products.",
            "conversation_id": "1593041305629777921",
            "edit_history_tweet_ids": [
                "1593041317805936640"
            ],
            "id": "1593041317805936640"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1593041313825447942"
            ],
            "text": "2\ufe0f\u20e3 Increased productivity\n\nIt requires a lot of time and work to create an app from scratch. It is also expensive.\n\nIntegrating functionality into your product is significantly more straightforward and affordable if an API with that capability is already on the market.",
            "conversation_id": "1593041305629777921",
            "id": "1593041313825447942"
        }
    },
    {
        "data": {
            "conversation_id": "1593041305629777921",
            "id": "1593041309761093633",
            "edit_history_tweet_ids": [
                "1593041309761093633"
            ],
            "text": "1\ufe0f\u20e3 Automation\n\nThanks to APIs, you can build fully automated systems that communicate with one another without involving any human beings."
        }
    },
    {
        "data": {
            "text": "Advantages of using API\n\nThread \ud83e\uddf5\ud83d\udc47",
            "id": "1593041305629777921",
            "edit_history_tweet_ids": [
                "1593041305629777921"
            ],
            "conversation_id": "1593041305629777921"
        }
    },
    {
        "data": {
            "conversation_id": "1592955742805442562",
            "id": "1592955768520728576",
            "edit_history_tweet_ids": [
                "1592955768520728576"
            ],
            "text": "That\u2019s all for now!\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19"
        }
    },
    {
        "data": {
            "conversation_id": "1592955742805442562",
            "id": "1592955764439670784",
            "edit_history_tweet_ids": [
                "1592955764439670784"
            ],
            "text": "5\ufe0f\u20e3 Quotes App\n\nUse a quotes API to build a random quote generator application.\n\nAPI \u2192 https://t.co/gOb4vbeBP3"
        }
    },
    {
        "data": {
            "text": "4\ufe0f\u20e3 Weather App\n\nUse a weather API to build a simple weather app that takes a location from the user and provides the weather details.\n\nAPI \u2192 https://t.co/DhU4Rz7Ijc",
            "id": "1592955760241147908",
            "edit_history_tweet_ids": [
                "1592955760241147908"
            ],
            "conversation_id": "1592955742805442562"
        }
    },
    {
        "data": {
            "conversation_id": "1592955742805442562",
            "edit_history_tweet_ids": [
                "1592955755820306433"
            ],
            "id": "1592955755820306433",
            "text": "3\ufe0f\u20e3 Text Case App\n\nUse a title case API to build a text case app that takes a heading and change it according to the set title case style.\n\nAPI \u2192 https://t.co/iLx0oFLuB1"
        }
    },
    {
        "data": {
            "id": "1592955751513067522",
            "edit_history_tweet_ids": [
                "1592955751513067522"
            ],
            "conversation_id": "1592955742805442562",
            "text": "2\ufe0f\u20e3 Language Detection App\n\nUse a text API to develop a language detection app that lets the user know the language of the provided text.\n\nAPI \u2192 https://t.co/U210Fe1H23"
        }
    },
    {
        "data": {
            "conversation_id": "1592955742805442562",
            "id": "1592955747184234496",
            "edit_history_tweet_ids": [
                "1592955747184234496"
            ],
            "text": "1\ufe0f\u20e3 Email Validation App\n\nUse an email validation API to build an app that takes an email and lets you know if it is valid or not. \n\nAPI \u2192 https://t.co/y7dTvESzwy"
        }
    },
    {
        "data": {
            "text": "Five Web App Ideas that use APIs.\n\nThread \ud83e\uddf5\ud83d\udc47",
            "conversation_id": "1592955742805442562",
            "edit_history_tweet_ids": [
                "1592955742805442562"
            ],
            "id": "1592955742805442562"
        }
    },
    {
        "data": {
            "conversation_id": "1592865283697704961",
            "id": "1592865315150761986",
            "edit_history_tweet_ids": [
                "1592865315150761986"
            ],
            "text": "That\u2019s all for now!\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19"
        }
    },
    {
        "data": {
            "conversation_id": "1592865283697704961",
            "edit_history_tweet_ids": [
                "1592865310796906496"
            ],
            "id": "1592865310796906496",
            "text": "You can read more about it in this piece. (https://t.co/LUgdKi8v9O)"
        }
    },
    {
        "data": {
            "conversation_id": "1592865283697704961",
            "id": "1592865306342739968",
            "edit_history_tweet_ids": [
                "1592865306342739968"
            ],
            "text": "4\ufe0f\u20e3 You should also explicitly define the request body and query parameters you expect from an API request."
        }
    },
    {
        "data": {
            "conversation_id": "1592865283697704961",
            "id": "1592865301703446530",
            "text": "2\ufe0f\u20e3 Write a schema to define all the types and patterns you will accept in the request and then implement it on runtime.\n\n3\ufe0f\u20e3 You should set the read-only property to true for all the fields that can be retrieved from the API request body but should not be modified by the user.",
            "edit_history_tweet_ids": [
                "1592865301703446530"
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1592865283697704961",
            "id": "1592865297421275139",
            "text": "\ud83d\udccc How to prevent it?\n\nYou can prevent it in multiple ways:\n\n1\ufe0f\u20e3 You should not explicitly bind incoming data and internet objects because the user can send more data than required.",
            "edit_history_tweet_ids": [
                "1592865297421275139"
            ]
        }
    },
    {
        "data": {
            "text": "An appropriate way to save data would be to create a new object on the server by extracting only the fields you need from the request body and saving that object.",
            "id": "1592865292925161472",
            "edit_history_tweet_ids": [
                "1592865292925161472"
            ],
            "conversation_id": "1592865283697704961"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1592865288282083329"
            ],
            "conversation_id": "1592865283697704961",
            "id": "1592865288282083329",
            "text": "API Mass Assignment Vulnerability is a severe API threat that arises when you save the request body as it is on the server instead of extracting values from it one by one.\n\nIt allows the user to initialize or overwrite server-side variables that the application does not intend."
        }
    },
    {
        "data": {
            "text": "API Mass Assignment Vulnerability\n\nThread \ud83e\uddf5\ud83d\udc47",
            "conversation_id": "1592865283697704961",
            "edit_history_tweet_ids": [
                "1592865283697704961"
            ],
            "id": "1592865283697704961"
        }
    },
    {
        "data": {
            "conversation_id": "1592631749124710401",
            "edit_history_tweet_ids": [
                "1592631765771767810"
            ],
            "text": "\u2728 Take a look at our blog post where we have shared all the details \n\nhttps://t.co/aNlKk4wCMn",
            "id": "1592631765771767810"
        }
    },
    {
        "data": {
            "conversation_id": "1592631749124710401",
            "edit_history_tweet_ids": [
                "1592631761603002369"
            ],
            "id": "1592631761603002369",
            "text": "If you have previously purchased a license, we are extending you credits that you can use across RapidAPI. More value for you. \n\nYou can use these credits to subscribe to APIs, try out RapidAPI testing, and more!"
        }
    },
    {
        "data": {
            "id": "1592631757307670528",
            "edit_history_tweet_ids": [
                "1592631757307670528"
            ],
            "conversation_id": "1592631749124710401",
            "text": "We are also excited to share that we are making RapidAPI for Mac free for individual users and teams of up to 5! \ud83e\udd73\n\nYou can now use it for API testing, even for your side hustles, without needing to buy a license. We hope to win developer hearts. \ud83d\udc99"
        }
    },
    {
        "data": {
            "conversation_id": "1592631749124710401",
            "id": "1592631753121964032",
            "edit_history_tweet_ids": [
                "1592631753121964032"
            ],
            "text": "We are thrilled to announce that today, Paw is fully becoming a part of Rapid.\n\nWe are doubling down on the performance with a new name, color scheme, and additional features to smoothen the API testing process. \ud83d\udd25"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1592631749124710401"
            ],
            "text": "Exciting news: Paw is now RapidAPI for Mac, and we are making it free! \ud83e\udd73",
            "conversation_id": "1592631749124710401",
            "id": "1592631749124710401"
        }
    },
    {
        "data": {
            "conversation_id": "1592558303649071104",
            "id": "1592558334342680576",
            "edit_history_tweet_ids": [
                "1592558334342680576"
            ],
            "text": "We hope you enjoyed this short tutorial.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1592558330014302218"
            ],
            "text": "4\ufe0f\u20e3 Nested groups\n\nYou can even create nested groups.\n\nJust drag and drop the group under the required group. https://t.co/s5XJjsBIfF",
            "attachments": {
                "media_keys": [
                    "3_1592558300628918276"
                ]
            },
            "conversation_id": "1592558303649071104",
            "id": "1592558330014302218"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1592558300628918276",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhnnVjEWIAQHHp8.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "text": "3\ufe0f\u20e3 Reorganize groups\n \nYou can reorganize requests and move them into different groups by drag and drop. https://t.co/w35yV6TzQo",
            "id": "1592558325358817281",
            "edit_history_tweet_ids": [
                "1592558325358817281"
            ],
            "attachments": {
                "media_keys": [
                    "3_1592558297642663936"
                ]
            },
            "conversation_id": "1592558303649071104"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1592558297642663936",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhnnVX8XgAAVw-I.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1592558294127755267"
                ]
            },
            "conversation_id": "1592558303649071104",
            "edit_history_tweet_ids": [
                "1592558320853843970"
            ],
            "id": "1592558320853843970",
            "text": "2\ufe0f\u20e3 Rename groups\n\nYou can rename the group whenever you want.\n\n1. Click three dots icon next to the group name\n\n2. Click \"Rename\" in the popup menu. https://t.co/40XX85RfoK"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1592558294127755267",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhnnVK2WQAMRwzH.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1592558316181655552"
            ],
            "text": "The new group will be created for you including the sample request. https://t.co/quKdbGeTbo",
            "attachments": {
                "media_keys": [
                    "3_1592558290722070533"
                ]
            },
            "conversation_id": "1592558303649071104",
            "id": "1592558316181655552"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1592558290722070533",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhnnU-KXoAUcRhL.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1592558303649071104",
            "edit_history_tweet_ids": [
                "1592558311764856833"
            ],
            "attachments": {
                "media_keys": [
                    "3_1592558287299526656"
                ]
            },
            "id": "1592558311764856833",
            "text": "1. To create group click the three dots icon next to the \"Requests\" label.\n\n2. In the popup menu click \"New Group\" https://t.co/L06AVmjGEQ"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1592558287299526656",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhnnUxaXwAAOuW_.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1592558303649071104",
            "edit_history_tweet_ids": [
                "1592558307692236801"
            ],
            "id": "1592558307692236801",
            "text": "1\ufe0f\u20e3 Create group\n\nRapidAPI client for VS Code supports groups. It's the best way to organize your requests.\n\nLet's say we have an API for eShop that manipulates clients, products, and orders.\n\nWe can place all API requests into the appropriate group."
        }
    },
    {
        "data": {
            "conversation_id": "1592558303649071104",
            "id": "1592558303649071104",
            "edit_history_tweet_ids": [
                "1592558303649071104"
            ],
            "text": "How to organize requests in RapidAPI Client for VSCode?\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "conversation_id": "1592502720656592896",
            "edit_history_tweet_ids": [
                "1592502752780857345"
            ],
            "id": "1592502752780857345",
            "text": "That\u2019s all for now!\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19"
        }
    },
    {
        "data": {
            "text": "We have talked about these trends extensively in one of our guides that you can find here. \u2192 https://t.co/PYjALOxcCp",
            "conversation_id": "1592502720656592896",
            "edit_history_tweet_ids": [
                "1592502748670468096"
            ],
            "id": "1592502748670468096"
        }
    },
    {
        "data": {
            "id": "1592502744602091521",
            "edit_history_tweet_ids": [
                "1592502744602091521"
            ],
            "conversation_id": "1592502720656592896",
            "text": "Technologies like computer vision, facial recognition, data extraction, and natural language processing provide market-dominating features and vastly improve the user experience.\n\nAI and ML APIs allow companies to abstract advanced AI/ML features through APIs."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1592502740629995520"
            ],
            "id": "1592502740629995520",
            "text": "5\ufe0f\u20e3  AI/ML Comes To APIs\n\nArtificial Intelligence (AI) and Machine Learning (ML) continue to slide into the API industry, and outcomes are nothing short of amazing.",
            "conversation_id": "1592502720656592896"
        }
    },
    {
        "data": {
            "id": "1592502736670674944",
            "text": "4\ufe0f\u20e3 Newer API Architectures Grow\n\nRest APIs remain the most popular, but their usage has somewhat declined as newer architectures like GraphQL, AsyncAPI, and gRPC are growing in terms of familiarity and use.",
            "edit_history_tweet_ids": [
                "1592502736670674944"
            ],
            "conversation_id": "1592502720656592896"
        }
    },
    {
        "data": {
            "conversation_id": "1592502720656592896",
            "text": "3\ufe0f\u20e3 Developer Experience As The Prime Focus\n\nThe focus on developer experience (DX) continues to rise in importance.\n\nIt involves a developer-friendly API design, easy onboarding, reusability, and tackling other developer problems.",
            "edit_history_tweet_ids": [
                "1592502732715442187"
            ],
            "id": "1592502732715442187"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1592502728697298945"
            ],
            "id": "1592502728697298945",
            "text": "2\ufe0f\u20e3 Rise In Partner And Third-Party APIs\n\nThis trend directly relates to the increase in API products, as more companies are using external APIs to abstract everything from authentication and geolocation to payments.",
            "conversation_id": "1592502720656592896"
        }
    },
    {
        "data": {
            "conversation_id": "1592502720656592896",
            "edit_history_tweet_ids": [
                "1592502724700012544"
            ],
            "id": "1592502724700012544",
            "text": "1\ufe0f\u20e3 More API as a product\n\nAPI-as-a-Product is like the Software-as-a-Service model, but APIs take center stage here. \n\nMore and more businesses are offering APIs as products to monetize the services they expose through the APIs."
        }
    },
    {
        "data": {
            "conversation_id": "1592502720656592896",
            "text": "Five key API trends to watch out\n\nThread \ud83e\uddf5\ud83d\udc47",
            "edit_history_tweet_ids": [
                "1592502720656592896"
            ],
            "id": "1592502720656592896"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1592270906939801600"
            ],
            "text": "We hope you enjoyed this thread.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99",
            "conversation_id": "1592270865999110145",
            "id": "1592270906939801600"
        }
    },
    {
        "data": {
            "text": "The typical response formats for REST are XML, JSON, and YAML.\n\nJSON is the response format for GraphQL.",
            "conversation_id": "1592270865999110145",
            "edit_history_tweet_ids": [
                "1592270902896766976"
            ],
            "id": "1592270902896766976"
        }
    },
    {
        "data": {
            "conversation_id": "1592270865999110145",
            "id": "1592270898584764424",
            "edit_history_tweet_ids": [
                "1592270898584764424"
            ],
            "text": "Versioning is not necessary for GraphQL.\n\nVersioning is necessary for REST. Usually, it is done as follows:\n\n- `https://t.co/4TAtmaaAxs`\n- `https://t.co/ho0slGLydL`"
        }
    },
    {
        "data": {
            "conversation_id": "1592270865999110145",
            "id": "1592270894533312512",
            "edit_history_tweet_ids": [
                "1592270894533312512"
            ],
            "text": "More knowledge is needed to construct GraphQL than to build a REST API.\n\nREST scales easier and is also easier to migrate to different servers."
        }
    },
    {
        "data": {
            "conversation_id": "1592270865999110145",
            "edit_history_tweet_ids": [
                "1592270890431139840"
            ],
            "id": "1592270890431139840",
            "text": "Client-driven architecture is used with GraphQL.\n\nWhat data are needed can be specified by the client.\n\nREST employs a server-driven architecture in which all data filtering is done on the server."
        }
    },
    {
        "data": {
            "conversation_id": "1592270865999110145",
            "id": "1592270886421372928",
            "edit_history_tweet_ids": [
                "1592270886421372928"
            ],
            "text": "REST API uses multiple HTTP endpoints instead.\n\nEach endpoint's purpose and specifications must be clearly defined, like its HTTP method and required input parameters."
        }
    },
    {
        "data": {
            "id": "1592270882432507909",
            "edit_history_tweet_ids": [
                "1592270882432507909"
            ],
            "text": "GraphQL uses a hierarchical schema to describe the organization of the API.\n\nBecause of this, the GraphQL documentation is automatically generated and updated as needed.",
            "conversation_id": "1592270865999110145"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1592270878498226176"
            ],
            "id": "1592270878498226176",
            "text": "REST utilizes multiple HTTP endpoints for various purposes (CRUD operations)\n\nGraphQL uses a single HTTP endpoint only.",
            "conversation_id": "1592270865999110145"
        }
    },
    {
        "data": {
            "conversation_id": "1592270865999110145",
            "edit_history_tweet_ids": [
                "1592270874471989249"
            ],
            "text": "REST is an architectural concept for network-based software, whereas GraphQL is a query language based on specifications.\n\nAnother difference is that REST is weakly typed, but GraphQL is strongly typed.",
            "id": "1592270874471989249"
        }
    },
    {
        "data": {
            "text": "REST API refers to an application programming interface (API) that uses HTTP requests to GET, PUT, POST, and DELETE data.\n\nGraphQL is a query language for your API and a server-side runtime for executing queries using a type system you define for your data.",
            "id": "1592270870252122113",
            "edit_history_tweet_ids": [
                "1592270870252122113"
            ],
            "conversation_id": "1592270865999110145"
        }
    },
    {
        "data": {
            "conversation_id": "1592270865999110145",
            "edit_history_tweet_ids": [
                "1592270865999110145"
            ],
            "id": "1592270865999110145",
            "text": "Differences between REST and GraphQL\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "id": "1592235918106439682",
            "text": "That\u2019s all for now!\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19",
            "edit_history_tweet_ids": [
                "1592235918106439682"
            ],
            "conversation_id": "1592235884820271104"
        }
    },
    {
        "data": {
            "text": "We have discussed it in detail in one of our pieces that you can find here. \u2192 https://t.co/QE2TmrZH5R",
            "conversation_id": "1592235884820271104",
            "edit_history_tweet_ids": [
                "1592235913744158720"
            ],
            "id": "1592235913744158720"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1592235909545697280"
            ],
            "id": "1592235909545697280",
            "text": "\ud83d\udccc node-fetch\n\nIt is a lightweight npm package that lets you use fetch API in Node.js. You can use promise-chaining and async functions to work with it.",
            "conversation_id": "1592235884820271104"
        }
    },
    {
        "data": {
            "conversation_id": "1592235884820271104",
            "id": "1592235905301229568",
            "text": "\ud83d\udccc Got\n\nGot is a lighter, human-friendly powerful HTTP request library explicitly designed to work with Node.js. It supports pagination, RFC-compliant caching, makes an API request again if it fails, supports cookies out of the box, and more.",
            "edit_history_tweet_ids": [
                "1592235905301229568"
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1592235901219995648"
            ],
            "conversation_id": "1592235884820271104",
            "id": "1592235901219995648",
            "text": "\ud83d\udccc Axios\n\nAxios is an open-source, promise-based HTTP client. It uses JavaScript\u2019s promises to send HTTP requests and manage their responses."
        }
    },
    {
        "data": {
            "conversation_id": "1592235884820271104",
            "id": "1592235896975380481",
            "text": "\ud83d\udccc XMLHttpRequest\n\nIt\u2019s another Web API that lets you communicate with the server via a REST API endpoint to fetch data and then show it to the user without refreshing the page.\n\nDespite its name, the XMLHttpRequest API is not limited to XML and works with JSON data too.",
            "edit_history_tweet_ids": [
                "1592235896975380481"
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1592235892772687873"
            ],
            "text": "\ud83d\udccc fetch API\n\nIt is an asynchronous web API that comes with native JavaScript and returns the data in the form of promises.",
            "conversation_id": "1592235884820271104",
            "id": "1592235892772687873"
        }
    },
    {
        "data": {
            "conversation_id": "1592235884820271104",
            "id": "1592235888758722562",
            "text": "There are multiple ways to call APIs in JavaScript.\n\n\ud83d\udc49 fetch API\n\ud83d\udc49 XMLHttpRequest \n\ud83d\udc49 Axios\n\ud83d\udc49 Got\n\ud83d\udc49 node-fetch",
            "edit_history_tweet_ids": [
                "1592235888758722562"
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1592235884820271104",
            "edit_history_tweet_ids": [
                "1592235884820271104"
            ],
            "id": "1592235884820271104",
            "text": "Different ways to call API in JavaScript\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "conversation_id": "1592140256781815808",
            "edit_history_tweet_ids": [
                "1592140298502578176"
            ],
            "id": "1592140298502578176",
            "text": "That\u2019s all for now! Check out RapidAPI Studio (https://t.co/DkvKLVn2aw)\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19"
        }
    },
    {
        "data": {
            "conversation_id": "1592140256781815808",
            "edit_history_tweet_ids": [
                "1592140294270902272"
            ],
            "id": "1592140294270902272",
            "text": "Take a look at this piece to learn more about how RapidAPI helps users to test APIs. (https://t.co/0MuYYrfv92)"
        }
    },
    {
        "data": {
            "id": "1592140290147639298",
            "text": "7\ufe0f\u20e3 One-click request from the clipboard\n\nRapidAPI Client for VS Code lets you create an API request from the clipboard. \n\nCopy an API, select \u201cCreate new requests from clipboard\u201d from the VS Code command palette, and a request will be generated.",
            "edit_history_tweet_ids": [
                "1592140290147639298"
            ],
            "conversation_id": "1592140256781815808"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1592140285940834304"
            ],
            "id": "1592140285940834304",
            "text": "6\ufe0f\u20e3 API testing inside VS Code\n\nSometimes, we need to test and debug our APIs quickly while building them. \n\nWith RapidAPI Client for VS Code, you can test your APIs in the same place you code them.",
            "conversation_id": "1592140256781815808"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1592140281809629185"
            ],
            "id": "1592140281809629185",
            "text": "5\ufe0f\u20e3 Set up Real-time Alerts\n\nYou can also set up real-time alerts inside the Tests feature of RapidAPI Studio. \n\nThis way, if any of your scheduled tests have failed, you are notified immediately.",
            "conversation_id": "1592140256781815808"
        }
    },
    {
        "data": {
            "conversation_id": "1592140256781815808",
            "id": "1592140277468233729",
            "edit_history_tweet_ids": [
                "1592140277468233729"
            ],
            "text": "4\ufe0f\u20e3 Schedule API Tests\n\nRapidAPI Studio lets you schedule tests for your API. \n\nBy scheduling tests, you can look at the RapidAPI Studio dashboard later to check if any scheduled test has failed."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1592140273403908096"
            ],
            "text": "3\ufe0f\u20e3 Automatic API Test Generation\n\nYou can utilize the automatic test generation feature of RapidAPI Studio if you are not sure how to write an API test. \n\nAll you will need to do is call the API with the help of the user interface and click on the Add to test button.",
            "conversation_id": "1592140256781815808",
            "id": "1592140273403908096"
        }
    },
    {
        "data": {
            "conversation_id": "1592140256781815808",
            "edit_history_tweet_ids": [
                "1592140269188567040"
            ],
            "id": "1592140269188567040",
            "text": "2\ufe0f\u20e3 Write API tests by drag and drop\n\nRapidAPI Studio provides a visual editor that lets you drag and drop testing steps into your API test. \n\nWhen the test runs, each step is executed one after another."
        }
    },
    {
        "data": {
            "conversation_id": "1592140256781815808",
            "id": "1592140265002778624",
            "edit_history_tweet_ids": [
                "1592140265002778624"
            ],
            "text": "1\ufe0f\u20e3 Execute API tests globally\n\nWith RapidAPI Studio, you can quickly run API tests on nine different data centers. \n\nThis way, you can see the API test execution in different geographical locations."
        }
    },
    {
        "data": {
            "conversation_id": "1592140256781815808",
            "id": "1592140260846325762",
            "edit_history_tweet_ids": [
                "1592140260846325762"
            ],
            "text": "RapidAPI offers two products to help you test your APIs.\n\n\ud83d\udc49 RapidAPI Studio (https://t.co/DkvKLVEDz6)\n\ud83d\udc49 RapidAPI Client for VS Code (https://t.co/En66s2boMr)\n\nLet\u2019s look at how we can test our APIs using them."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1592140256781815808"
            ],
            "conversation_id": "1592140256781815808",
            "id": "1592140256781815808",
            "text": "Test Your APIs using RapidAPI\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "text": "Hope you enjoyed this thread.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99",
            "id": "1591229853742907393",
            "edit_history_tweet_ids": [
                "1591229853742907393"
            ],
            "conversation_id": "1591229825393491968"
        }
    },
    {
        "data": {
            "id": "1591229849716285442",
            "text": "- It provides the authorization workflow for mobile, desktop, and web apps.\n\n- It gives users more control over their data.\n\n- OAuth2 relies on SSL (Secure Sockets Layer) to ensure data between the web server and browsers remain private.",
            "edit_history_tweet_ids": [
                "1591229849716285442"
            ],
            "conversation_id": "1591229825393491968"
        }
    },
    {
        "data": {
            "id": "1591229845731778561",
            "edit_history_tweet_ids": [
                "1591229845731778561"
            ],
            "conversation_id": "1591229825393491968",
            "text": "2\ufe0f\u20e3 Features and advantages of OAuth2\n\n- You can use it to read user data from another application.\n\n- It is a server-side web application that does not interact with user credentials.\n\n- It is easier to implement and provides stronger authentication"
        }
    },
    {
        "data": {
            "id": "1591229841608613888",
            "edit_history_tweet_ids": [
                "1591229841608613888"
            ],
            "text": "When the OAuth2 provider verifies your identity, it issues an access token.\n\nThis token is then used to access the 3rd party application.\n\nThe token usually has an expiration time.\n\nIt means the application must request a new token when the old one expires.",
            "conversation_id": "1591229825393491968"
        }
    },
    {
        "data": {
            "conversation_id": "1591229825393491968",
            "id": "1591229837376569344",
            "text": "1\ufe0f\u20e3 How does it work?\n\nOAuth2 works by delegating user authentication to the service that hosts the user account and authorizing third-party applications to access the user account.\n\nYou log in to the OAuth2 provider with your login and password.",
            "edit_history_tweet_ids": [
                "1591229837376569344"
            ]
        }
    },
    {
        "data": {
            "id": "1591229833253625858",
            "edit_history_tweet_ids": [
                "1591229833253625858"
            ],
            "conversation_id": "1591229825393491968",
            "text": "OAuth2 provides a standard, secure method for these interactions.\n\nFor instance, you can tell Twitter that you agree that the site on the domain example. com is allowed to access your profile information (like name and email) without sharing your password with example. com."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1591229829332058113"
            ],
            "text": "OAuth2 is an authentication protocol that allows you to authorize applications to access your data.\n\nIt is the successor to the OAuth 1.0 protocol and is designed to provide a more secure and efficient way to authorize applications.",
            "id": "1591229829332058113",
            "conversation_id": "1591229825393491968"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1591229825393491968"
            ],
            "text": "OAuth2, features, and advantages.\n\nThread \ud83e\uddf5\ud83d\udc47",
            "id": "1591229825393491968",
            "conversation_id": "1591229825393491968"
        }
    },
    {
        "data": {
            "text": "We hope you enjoyed this thread.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99",
            "id": "1591167696086990862",
            "edit_history_tweet_ids": [
                "1591167696086990862"
            ],
            "conversation_id": "1591167663165898754"
        }
    },
    {
        "data": {
            "conversation_id": "1591167663165898754",
            "id": "1591167692060655616",
            "text": "5\ufe0f\u20e3 Use Asynchronous logging\n\nAsynchronous logging refers to the practice of not timing the logging process to the event that is being recorded.\n\nIf the event and the log entry are in a different order, this can help with performance, but it can also cause issues.",
            "edit_history_tweet_ids": [
                "1591167692060655616"
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1591167663165898754",
            "id": "1591167687882932226",
            "text": "Applications that often contact the database may experience improved performance due to connection pooling, which can dramatically lower the overhead of initiating and closing database connections.",
            "edit_history_tweet_ids": [
                "1591167687882932226"
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1591167663165898754",
            "id": "1591167683860594688",
            "text": "4\ufe0f\u20e3 Use connection pooling\n\n Connection pooling is a technique used to increase the performance of database applications by reusing active database connections rather than creating new ones.",
            "edit_history_tweet_ids": [
                "1591167683860594688"
            ]
        }
    },
    {
        "data": {
            "id": "1591167679821680640",
            "edit_history_tweet_ids": [
                "1591167679821680640"
            ],
            "conversation_id": "1591167663165898754",
            "text": "3\ufe0f\u20e3 Include caching\n\nYour API's performance can be considerably increased with a cache.\n\nImplement a cache frequently if the data stay the same."
        }
    },
    {
        "data": {
            "conversation_id": "1591167663165898754",
            "text": "2\ufe0f\u20e3 Utilize pagination\n\nImplement pagination instead of returning massive datasets.\n\nBoth bandwidth and response time can be improved by it.",
            "edit_history_tweet_ids": [
                "1591167675698642944"
            ],
            "id": "1591167675698642944"
        }
    },
    {
        "data": {
            "conversation_id": "1591167663165898754",
            "id": "1591167671483400193",
            "edit_history_tweet_ids": [
                "1591167671483400193"
            ],
            "text": "1\ufe0f\u20e3 Respond with the necessary data\n\nOnly the necessary information should be included in the response.\n\nThis affects the bandwidth as well as the speed of the response."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1591167667276505089"
            ],
            "text": "For any business that depends on APIs, API performance is crucial.\n\nA slow or unreliable API may harm the financial health of the business.\n\nHere's how you can improve the performance of your API.",
            "id": "1591167667276505089",
            "conversation_id": "1591167663165898754"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1591167663165898754"
            ],
            "conversation_id": "1591167663165898754",
            "id": "1591167663165898754",
            "text": "How to increase API performance?\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "conversation_id": "1591075743727222785",
            "edit_history_tweet_ids": [
                "1591075769219837952"
            ],
            "id": "1591075769219837952",
            "text": "You can find all these fantastic APIs and 40,000 more at RapidAPI Hub.\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19\ud83d\ude80"
        }
    },
    {
        "data": {
            "conversation_id": "1591075743727222785",
            "text": "5\ufe0f\u20e3 Breach Directory API\n\nIt is another interesting API that can tell whether an email, username, password, or phone number was compromised in a data breach. \n\n\ud83d\udd17 https://t.co/Qt7Oi8Xtxi",
            "edit_history_tweet_ids": [
                "1591075764962836481"
            ],
            "id": "1591075764962836481"
        }
    },
    {
        "data": {
            "conversation_id": "1591075743727222785",
            "id": "1591075760793845761",
            "text": "4\ufe0f\u20e3 OOPSpam Filter API\n\nThis API uses machine learning to check text contents for potential spam. It can help filter spam in your contact forms, comments, chat, and whatnot.\n\n\ud83d\udd17 https://t.co/Z2LUhtXJkr",
            "edit_history_tweet_ids": [
                "1591075760793845761"
            ]
        }
    },
    {
        "data": {
            "id": "1591075756343406594",
            "edit_history_tweet_ids": [
                "1591075756343406594"
            ],
            "text": "3\ufe0f\u20e3 IP Geolocation API\n\nIt looks up the IP addresses of visitors and provides their geolocation information. The information includes country, city, latitude, longitude, timezone, and other security data.\n\n\ud83d\udd17 https://t.co/SEePTQjVqo",
            "conversation_id": "1591075743727222785"
        }
    },
    {
        "data": {
            "conversation_id": "1591075743727222785",
            "id": "1591075752019116033",
            "text": "2\ufe0f\u20e3 ZeroBounce API\n\nIt is a comprehensive email validation API that allows you to check the validity of Emails by verifying their domains.\n\n\ud83d\udd17 https://t.co/cHh0yc3neG",
            "edit_history_tweet_ids": [
                "1591075752019116033"
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1591075743727222785",
            "edit_history_tweet_ids": [
                "1591075747900588036"
            ],
            "id": "1591075747900588036",
            "text": "1\ufe0f\u20e3 D7SMS API\n\nIt allows you to add phone-based verification and two-factor authentication to your application by sending codes via text.\n\n\ud83d\udd17 https://t.co/OEi4gzwEP0"
        }
    },
    {
        "data": {
            "id": "1591075743727222785",
            "text": "Five APIs that can enhance your application's security. \n\nA thread \ud83d\udc47\ud83e\uddf5",
            "edit_history_tweet_ids": [
                "1591075743727222785"
            ],
            "conversation_id": "1591075743727222785"
        }
    },
    {
        "data": {
            "conversation_id": "1590867875413336065",
            "edit_history_tweet_ids": [
                "1590867916504719361"
            ],
            "id": "1590867916504719361",
            "text": "We hope you found this helpful! \n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19\ud83d\ude80"
        }
    },
    {
        "data": {
            "id": "1590867912302407680",
            "edit_history_tweet_ids": [
                "1590867912302407680"
            ],
            "conversation_id": "1590867875413336065",
            "text": "In short, it acts as a routing service that sends requests to the appropriate service. ESBs can also transform requests into an appropriate format for the underlying platform of a service."
        }
    },
    {
        "data": {
            "id": "1590867908066181120",
            "edit_history_tweet_ids": [
                "1590867908066181120"
            ],
            "text": "SOA also uses a centralized service called an Enterprise Service Bus (ESB), which establishes communication between services and consumers regardless of the technology used.",
            "conversation_id": "1590867875413336065"
        }
    },
    {
        "data": {
            "conversation_id": "1590867875413336065",
            "text": "\ud83d\udccc How does SOA work?\n\nServices communicate using standardized protocols to transmit data over a network in a request and response format. Commonly one or more of the following is used:\n\n1. SOAP\n2. RESTful HTTP\n3. Apache Thrift",
            "edit_history_tweet_ids": [
                "1590867903934521347"
            ],
            "id": "1590867903934521347"
        }
    },
    {
        "data": {
            "id": "1590867899883061248",
            "edit_history_tweet_ids": [
                "1590867899883061248"
            ],
            "conversation_id": "1590867875413336065",
            "text": "4. Abstraction - Clients do not need to know a service\u2019s underlying technology or code. Each service hides its logic, and clients get any information they need from service documents or contacts."
        }
    },
    {
        "data": {
            "conversation_id": "1590867875413336065",
            "id": "1590867895747231745",
            "edit_history_tweet_ids": [
                "1590867895747231745"
            ],
            "text": "2. Interoperability - Any client should be able to run a service regardless of the underlying platform and programming language being used.\n\n3. Reusability - Needs of the application are divided into services with the aim of maximizing reusability."
        }
    },
    {
        "data": {
            "conversation_id": "1590867875413336065",
            "edit_history_tweet_ids": [
                "1590867891758530561"
            ],
            "id": "1590867891758530561",
            "text": "\ud83d\udccc Principles of SOA\n\n1. Loose coupling - Each service should have a low dependency on external resources. They should also be stateless and not retain any data from past sessions."
        }
    },
    {
        "data": {
            "conversation_id": "1590867875413336065",
            "id": "1590867887702835200",
            "edit_history_tweet_ids": [
                "1590867887702835200"
            ],
            "text": "\ud83d\udccc Benefits of SOA\n\nWith SOA, developers can reuse services in different systems. This means less time spent developing and faster time to market. \n\nIt is also easier to scale and improve individual services. Modifying one service will not affect the whole application."
        }
    },
    {
        "data": {
            "conversation_id": "1590867875413336065",
            "edit_history_tweet_ids": [
                "1590867883550294016"
            ],
            "id": "1590867883550294016",
            "text": "In SOA applications, each service is independent and provides its own business purposes but can communicate with others across various platforms and languages."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1590867879519727616"
            ],
            "text": "Service-oriented architecture (SOA) is a software architectural style that structures an application by breaking it down into multiple components called services.",
            "id": "1590867879519727616",
            "conversation_id": "1590867875413336065"
        }
    },
    {
        "data": {
            "conversation_id": "1590867875413336065",
            "edit_history_tweet_ids": [
                "1590867875413336065"
            ],
            "id": "1590867875413336065",
            "text": "What exactly is service-oriented architecture?\n\nA Thread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1590777567614681088"
            ],
            "text": "Thanks for reading! \ud83d\udc19\n\nFollow @Rapid_API for more exclusive content.",
            "id": "1590777567614681088",
            "conversation_id": "1590777530021281793"
        }
    },
    {
        "data": {
            "id": "1590777563399573504",
            "text": "\ud83d\udccc Apply rate-limiting\n\nRate-limiting controls the requests your API receives in a given period.\n\nLimiting traffic to your API can prevent potential attackers from launching a DDoS attack and other unexpected request influxes. It also improves scalability.",
            "edit_history_tweet_ids": [
                "1590777563399573504"
            ],
            "conversation_id": "1590777530021281793"
        }
    },
    {
        "data": {
            "text": "\ud83d\udccc Use the UTF-8 Standard\n\nUnicode is the world standard for consistently encoding and handling texts in global writing systems. Using the UTF-8 Standard for character sets ensures texts will remain stable when stored and exchanged.",
            "id": "1590777559335440384",
            "edit_history_tweet_ids": [
                "1590777559335440384"
            ],
            "conversation_id": "1590777530021281793"
        }
    },
    {
        "data": {
            "id": "1590777555149328398",
            "edit_history_tweet_ids": [
                "1590777555149328398"
            ],
            "text": "\ud83d\udccc Documentation\n\nGenerating documentation alongside the design and building process is a good idea.\n\nAlways include a getting started section, a description of what your API does, task-based guidance, code snippet examples, and a common errors section.",
            "conversation_id": "1590777530021281793"
        }
    },
    {
        "data": {
            "text": "Application-level authorization means controlling which applications can access your API without limiting who can access them. This may be less suitable for APIs using sensitive data.",
            "id": "1590777551018160128",
            "edit_history_tweet_ids": [
                "1590777551018160128"
            ],
            "conversation_id": "1590777530021281793"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1590777546718662658"
            ],
            "id": "1590777546718662658",
            "text": "\ud83d\udccc Consider authorization control\n\nConsider both user-level authorization and application-level authorization.\n\nUser-level authorization is for access control and auditing. It controls who can access your API, which is vital if your API deals with sensitive data.",
            "conversation_id": "1590777530021281793"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1590777542348111872"
            ],
            "id": "1590777542348111872",
            "text": "For guidance, read the official JSON specification: JSON data exchange standard (https://t.co/2zVmojbetq), and use a response format specified by your organization or one made specifically for API responses (e.g., https://t.co/e5xfEZ8Acj)",
            "conversation_id": "1590777530021281793"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1590777538099302403"
            ],
            "conversation_id": "1590777530021281793",
            "id": "1590777538099302403",
            "text": "\ud83d\udccc Use JSON response formats\n\nJSON is the most widely used data exchange format. There are various JSON response formats used today."
        }
    },
    {
        "data": {
            "id": "1590777534010036239",
            "edit_history_tweet_ids": [
                "1590777534010036239"
            ],
            "conversation_id": "1590777530021281793",
            "text": "\ud83d\udccc Name resources consistently\n\nInconsistent naming makes your API more challenging to use. Users should be able to assume names for your resources. \n\nFor example, \u2018id_user\u2019 and \u2018user_name\u2019 is inconsistent. Using a consistent format would be \u2018user_id\u2019 and \u2018user_name.\u2019"
        }
    },
    {
        "data": {
            "conversation_id": "1590777530021281793",
            "text": "Tips when building a REST API.\n\nA Thread \ud83e\uddf5\ud83d\udc47",
            "edit_history_tweet_ids": [
                "1590777530021281793"
            ],
            "id": "1590777530021281793"
        }
    },
    {
        "data": {
            "conversation_id": "1590690709299929090",
            "edit_history_tweet_ids": [
                "1590690757697888257"
            ],
            "id": "1590690757697888257",
            "text": "We hope you found this helpful! Follow @Rapid_API for more exclusive content. \ud83d\udc19\ud83d\ude80"
        }
    },
    {
        "data": {
            "text": "\ud83d\udd1f Host\n\nA request header that specifies the host (domain name) and port number of the server being requested.",
            "id": "1590690753348501510",
            "edit_history_tweet_ids": [
                "1590690753348501510"
            ],
            "conversation_id": "1590690709299929090"
        }
    },
    {
        "data": {
            "conversation_id": "1590690709299929090",
            "edit_history_tweet_ids": [
                "1590690749158498305"
            ],
            "text": "9\ufe0f\u20e3 Cache-Control\n\nThis server and client-side header communicates how the cache should be controlled using directives and values.\n\nSome examples of the various directives:\n\n- Cache-Control: no-store\n- Cache-Control: max-age\n- Cache-control: public",
            "id": "1590690749158498305"
        }
    },
    {
        "data": {
            "id": "1590690745010339845",
            "edit_history_tweet_ids": [
                "1590690745010339845"
            ],
            "conversation_id": "1590690709299929090",
            "text": "8\ufe0f\u20e3 Content-Length\n\nIndicates the size of the message body in bytes and can be used in either requests or responses."
        }
    },
    {
        "data": {
            "conversation_id": "1590690709299929090",
            "id": "1590690740480286721",
            "edit_history_tweet_ids": [
                "1590690740480286721"
            ],
            "text": "7\ufe0f\u20e3 Accept-Language\n\nUsed to state which human language or languages are understood by the client so that the user can choose their preferred."
        }
    },
    {
        "data": {
            "id": "1590690735887888384",
            "edit_history_tweet_ids": [
                "1590690735887888384"
            ],
            "conversation_id": "1590690709299929090",
            "text": "6\ufe0f\u20e3 Access-Control-Allow-Methods\n\nA cross-origin resource sharing (CORS) header that indicates which HTTP methods are allowed to access the resource."
        }
    },
    {
        "data": {
            "conversation_id": "1590690709299929090",
            "id": "1590690731236110336",
            "edit_history_tweet_ids": [
                "1590690731236110336"
            ],
            "text": "5\ufe0f\u20e3 Access-Control-Allow-Origin\n\nA server-side header that lists the server\u2019s accepted web addresses, with which it only expects to interact.\n\nAny client-side errors referencing \u2018cross-origin-request\u2019 (CORS) may be linked to this header."
        }
    },
    {
        "data": {
            "conversation_id": "1590690709299929090",
            "id": "1590690726958039041",
            "text": "4\ufe0f\u20e3 Accept-Encoding\n\nTells the server which encoding method the client can understand. This refers to how the data is compressed in transfer.",
            "edit_history_tweet_ids": [
                "1590690726958039041"
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1590690722763636736"
            ],
            "text": "3\ufe0f\u20e3 Content-Type\n\nSpecifies the type of content the server returns, e.g., JSON, text, form-data, etc.",
            "id": "1590690722763636736",
            "conversation_id": "1590690709299929090"
        }
    },
    {
        "data": {
            "id": "1590690718258909184",
            "edit_history_tweet_ids": [
                "1590690718258909184"
            ],
            "text": "2\ufe0f\u20e3 Authorization\n\nA client-side header that passes the credentials to the server.\n\nThis is not the same as authentication. The server can only authenticate the user after it checks the authorization credentials.",
            "conversation_id": "1590690709299929090"
        }
    },
    {
        "data": {
            "text": "1\ufe0f\u20e3 Accept\n\nA client-side header that defines the type of data the client expects from the server.\n\nThis means the server won\u2019t waste time returning a data type the client cannot use.",
            "conversation_id": "1590690709299929090",
            "edit_history_tweet_ids": [
                "1590690713670660096"
            ],
            "id": "1590690713670660096"
        }
    },
    {
        "data": {
            "id": "1590690709299929090",
            "text": "HTTP headers that developers should be aware of.\n\nThread\ud83e\uddf5\ud83d\udc47",
            "edit_history_tweet_ids": [
                "1590690709299929090"
            ],
            "conversation_id": "1590690709299929090"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1590501768554766337"
            ],
            "conversation_id": "1590501740041805824",
            "id": "1590501768554766337",
            "text": "Follow @Rapid_API for more tips about RapidAPI Studio."
        }
    },
    {
        "data": {
            "text": "3\ufe0f\u20e3 You can switch between sessions\n\nYou can switch between sessions by selecting one from the combo box.\n\nThis feature can be helpful if you want to simulate different users or different client conditions. https://t.co/ISTUpDYrkM",
            "id": "1590501763794468864",
            "edit_history_tweet_ids": [
                "1590501763794468864"
            ],
            "attachments": {
                "media_keys": [
                    "3_1590501735990272000"
                ]
            },
            "conversation_id": "1590501740041805824"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1590501735990272000",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhKY5uxXoAAYbSO.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1590501740041805824",
            "edit_history_tweet_ids": [
                "1590501758962634752"
            ],
            "id": "1590501758962634752",
            "attachments": {
                "media_keys": [
                    "3_1590501731753934848"
                ]
            },
            "text": "To remove the session altogether, use the \"Remove\" button in the bottom left corner. https://t.co/2sk334oCjQ"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1590501731753934848",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhKY5e_WQAA2O5V.png"
                }
            ]
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1590501726427168774"
                ]
            },
            "edit_history_tweet_ids": [
                "1590501753383899136"
            ],
            "conversation_id": "1590501740041805824",
            "id": "1590501753383899136",
            "text": "2\ufe0f\u20e3 The following modal will appear when you can:\n\n1. Add a new session\n\n2. Define/Delete cookies\n\n3. Rename the session https://t.co/YzMtZtd8Iw"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1590501726427168774",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhKY5LJWQAYrlxD.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1590501748342652928"
            ],
            "text": "1\ufe0f\u20e3 To create a new session, click the settings icon in the Sessions group. https://t.co/5Llimc8q0g",
            "id": "1590501748342652928",
            "conversation_id": "1590501740041805824",
            "attachments": {
                "media_keys": [
                    "3_1590501722602045440"
                ]
            }
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1590501722602045440",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhKY485XgAAhhXj.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1590501740041805824",
            "edit_history_tweet_ids": [
                "1590501744219406339"
            ],
            "id": "1590501744219406339",
            "text": "RapidAPI Studio allows you to define different sessions with different cookies you want to send to your API."
        }
    },
    {
        "data": {
            "conversation_id": "1590501740041805824",
            "edit_history_tweet_ids": [
                "1590501740041805824"
            ],
            "id": "1590501740041805824",
            "text": "RapidAPI Studio sessions\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "conversation_id": "1590418415310835712",
            "edit_history_tweet_ids": [
                "1590418448655474688"
            ],
            "id": "1590418448655474688",
            "text": "That\u2019s all for now!\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19"
        }
    },
    {
        "data": {
            "conversation_id": "1590418415310835712",
            "id": "1590418444628942849",
            "edit_history_tweet_ids": [
                "1590418444628942849"
            ],
            "text": "If you want to learn more about API Management, we have also written a piece about it. (https://t.co/haDfpV0L5M)"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1590418440573042689"
            ],
            "id": "1590418440573042689",
            "text": "4\ufe0f\u20e3 API Security\n\nYou also need to ensure that the APIs are secure; otherwise, your data will be vulnerable to outside threats. \n\nYou can use techniques like rate-limiting, authentication, input validation, and a fail-safe to add an additional security layer within your API.",
            "conversation_id": "1590418415310835712"
        }
    },
    {
        "data": {
            "conversation_id": "1590418415310835712",
            "edit_history_tweet_ids": [
                "1590418436475310084"
            ],
            "id": "1590418436475310084",
            "text": "3\ufe0f\u20e3 Provide Reliability\n\nYour APIs must be reliable; otherwise, no one will use them. \n\nYou can do this by ensuring you are pulling the data from reliable sources or providing an endpoint that does not crash as the traffic increases."
        }
    },
    {
        "data": {
            "conversation_id": "1590418415310835712",
            "id": "1590418432326979585",
            "edit_history_tweet_ids": [
                "1590418432326979585"
            ],
            "text": "2\ufe0f\u20e3 Provide API Support\n\nOne of the essential API management practices is providing quality support for your APIs to developers. \n\nYou should also provide as many options as possible so developers can fully utilize the power of your API."
        }
    },
    {
        "data": {
            "conversation_id": "1590418415310835712",
            "text": "\ud83d\udccc Best Practices\n\n1\ufe0f\u20e3 API availability\n\nYou need to ensure that your API is available at all times and see as little downtime as reasonably possible. It is because if your API goes down, your whole business can go down with it.",
            "edit_history_tweet_ids": [
                "1590418428011040769"
            ],
            "id": "1590418428011040769"
        }
    },
    {
        "data": {
            "conversation_id": "1590418415310835712",
            "id": "1590418423762542592",
            "edit_history_tweet_ids": [
                "1590418423762542592"
            ],
            "text": "It includes but is not limited to:\n\n\ud83d\udc49 making them accessible to all users\n\ud83d\udc49 monitoring and analyzing their usage\n\ud83d\udc49 reporting performance metrics\n\ud83d\udc49 securing access so only authenticated users can use them."
        }
    },
    {
        "data": {
            "conversation_id": "1590418415310835712",
            "edit_history_tweet_ids": [
                "1590418419492753408"
            ],
            "id": "1590418419492753408",
            "text": "\ud83d\udccc What is API management?\n\nAPI management is the process of distributing, controlling, and analyzing the APIs.\n\nIt is a practice of overseeing all aspects of your enterprise's APIs."
        }
    },
    {
        "data": {
            "id": "1590418415310835712",
            "edit_history_tweet_ids": [
                "1590418415310835712"
            ],
            "conversation_id": "1590418415310835712",
            "text": "API Management Best Practices.\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1590406250071629825",
                    "3_1590406250092634113",
                    "3_1590406250084192256",
                    "3_1590406250092634112"
                ]
            },
            "edit_history_tweet_ids": [
                "1590406259333042176"
            ],
            "conversation_id": "1590374048919617537",
            "id": "1590406259333042176",
            "text": "RapidAPI at #GitHubUniverse https://t.co/1G2YyesoQ8"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1590406250071629825",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhJCDuAUoAE9bt1.jpg"
                },
                {
                    "media_key": "3_1590406250092634113",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhJCDuFVIAEx_GW.jpg"
                },
                {
                    "media_key": "3_1590406250084192256",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhJCDuDUUAALPA9.jpg"
                },
                {
                    "media_key": "3_1590406250092634112",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhJCDuFVIAALaUE.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1590374048919617537"
            ],
            "text": "RapidAPI is at #GitHubUniverse; find our VP of DevRel @MrAhmadAwais and come say Hi. \ud83d\udc4b\ud83d\udc4b\ud83d\udc4b https://t.co/UfwShirqgr",
            "id": "1590374048919617537",
            "conversation_id": "1590374048919617537",
            "attachments": {
                "media_keys": [
                    "3_1590372507000807425",
                    "3_1590372666044620803",
                    "3_1590372797460582402",
                    "3_1590372980084772865"
                ]
            }
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1590372507000807425",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhIjXnRUoAEWICM.jpg"
                },
                {
                    "media_key": "3_1590372666044620803",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhIjg3wUoAM__7V.jpg"
                },
                {
                    "media_key": "3_1590372797460582402",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhIjohUVEAILpje.jpg"
                },
                {
                    "media_key": "3_1590372980084772865",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhIjzJpVEAEXraV.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1590328327922802689",
            "text": "And don't forget. You can then monetize these APIs on RapidAPI Hub (https://t.co/olbzlG0Ci6).\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99\n\nHappy building \ud83d\ude09",
            "edit_history_tweet_ids": [
                "1590328354317938689"
            ],
            "id": "1590328354317938689"
        }
    },
    {
        "data": {
            "id": "1590328349993345026",
            "edit_history_tweet_ids": [
                "1590328349993345026"
            ],
            "conversation_id": "1590328327922802689",
            "text": "5\ufe0f\u20e3 Tweet generator API\n\nThis idea can help content creators.\n\nImagine an API based on OpenAI that generates tweets on different topics."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1590328345396477952"
            ],
            "conversation_id": "1590328327922802689",
            "id": "1590328345396477952",
            "text": "4\ufe0f\u20e3 Color schemes API\n\nThere are numerous palette generators on the web.\n\nYou can create an API that will send a color palette based on the primary color sent in the payload.\n\n- primary color\n- customizable number of colors in the palette\n- optional color shades"
        }
    },
    {
        "data": {
            "conversation_id": "1590328327922802689",
            "id": "1590328341193695237",
            "edit_history_tweet_ids": [
                "1590328341193695237"
            ],
            "text": "3\ufe0f\u20e3 Web screenshot API\n\nAPI that generates screenshots of web pages.\n\nHere you can implement several additional features:\n\n- background (solid, gradient)\n- watermark\n- rounded corners\n- different sizes generated"
        }
    },
    {
        "data": {
            "conversation_id": "1590328327922802689",
            "id": "1590328336999399425",
            "edit_history_tweet_ids": [
                "1590328336999399425"
            ],
            "text": "2\ufe0f\u20e3 Invoice API\n\nThis API will create invoices with multiple items.\n\nYou need to implement at least the following:\n\n- invoice number\n- client contact information\n- invoice contact information\n- invoice items (name, description, quantity, price)\n- total price\n- notes"
        }
    },
    {
        "data": {
            "id": "1590328332503040000",
            "edit_history_tweet_ids": [
                "1590328332503040000"
            ],
            "text": "1\ufe0f\u20e3 Notes API\n\nThis API will implement a whole CRUD system for managing notes.\n\n- list notes\n- create notes\n- edit notes\n- delete notes\n- create note categories\n- move notes between categories",
            "conversation_id": "1590328327922802689"
        }
    },
    {
        "data": {
            "conversation_id": "1590328327922802689",
            "edit_history_tweet_ids": [
                "1590328327922802689"
            ],
            "id": "1590328327922802689",
            "text": "5 API ideas you can build and monetize.\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "conversation_id": "1590036158867968000",
            "edit_history_tweet_ids": [
                "1590036178660913154"
            ],
            "id": "1590036178660913154",
            "attachments": {
                "media_keys": [
                    "3_1590035520633311236"
                ]
            },
            "text": "And while this new brand is an important milestone for the company, one thing remains an unshakeable foundation of our company \u2013 we are developers building software for developers first and foremost.\n\n\u2728 Introducing Our New Brand: Rapid by @IddoGino \n\u21b3 https://t.co/T7PHZfz1He https://t.co/hyTsgO0Se1"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1590035520633311236",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhDw4bOaEAQEuYa.png"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1590036158867968000",
            "attachments": {
                "media_keys": [
                    "3_1590034730422259712"
                ]
            },
            "text": "Today, we take another major step forward with the evolution of our brand \u2013 updating our visual language and renaming RapidAPI to Rapid. https://t.co/0ZljVZzCCx",
            "edit_history_tweet_ids": [
                "1590036173749354497"
            ],
            "id": "1590036173749354497"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1590034730422259712",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhDwKbdaUAAEd4Q.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "text": "As many of you have likely noticed over the past year, we have radically expanded the types of software, services, and support we provide to you \u2013 our developer community. Did you check out RapidAPI Client extension for VSCode. \ud83d\udc99 https://t.co/rLHQ8suUTr",
            "id": "1590036169693487104",
            "edit_history_tweet_ids": [
                "1590036169693487104"
            ],
            "attachments": {
                "media_keys": [
                    "3_1590034571428769793"
                ]
            },
            "conversation_id": "1590036158867968000"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1590034571428769793",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhDwBLKaMAEd3bg.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1590036158867968000",
            "edit_history_tweet_ids": [
                "1590036164874240001"
            ],
            "attachments": {
                "media_keys": [
                    "3_1590035862032875520"
                ]
            },
            "id": "1590036164874240001",
            "text": "We are excited to introduce our refreshed Rapid brand, which includes a new name, logo, and colors that reflect our exciting growth as we focus on delivering the next-generation platform to power the API economy.\n\nWoohoo! \ud83e\udd73\ud83e\udd73\ud83e\udd73 https://t.co/Hia7rMcD4P"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1590035862032875520",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhDxMTCaAAAfcIU.png"
                }
            ]
        }
    },
    {
        "data": {
            "text": "RapidAPI is now Rapid. \ud83e\udd73\n\nWe are stoked to launch the refreshed Rapid brand! https://t.co/Jb7qzmAYoe",
            "id": "1590036158867968000",
            "edit_history_tweet_ids": [
                "1590036158867968000"
            ],
            "attachments": {
                "media_keys": [
                    "3_1590034189692596224"
                ]
            },
            "conversation_id": "1590036158867968000"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1590034189692596224",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhDvq9FacAAjpjm.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "id": "1590013804762599424",
            "edit_history_tweet_ids": [
                "1590013804762599424"
            ],
            "text": "Thanks for reading! Follow @Rapid_API for more exclusive content. \ud83d\udc19\ud83d\udc99",
            "conversation_id": "1590013759610822656"
        }
    },
    {
        "data": {
            "id": "1590013800631087104",
            "text": "\ud83d\udccc 500 Internal Server Error\n\nThe request is valid, but there is an unexpected and unknown server-side problem, and the request cannot be completed.",
            "edit_history_tweet_ids": [
                "1590013800631087104"
            ],
            "conversation_id": "1590013759610822656"
        }
    },
    {
        "data": {
            "conversation_id": "1590013759610822656",
            "text": "\ud83d\udccc 404 Not Found\n\nThe request is valid, but the resource is not found on the server.\n\nIn an API, this means the endpoint is valid, but the resource does not exist. In the browser, it means the URL is not recognized.",
            "edit_history_tweet_ids": [
                "1590013796306731008"
            ],
            "id": "1590013796306731008"
        }
    },
    {
        "data": {
            "id": "1590013792192184323",
            "edit_history_tweet_ids": [
                "1590013792192184323"
            ],
            "text": "\ud83d\udccc 403 Forbidden\n\nThe client's identity is known to the server, but they do not have permission to access the resource.",
            "conversation_id": "1590013759610822656"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1590013788178288641"
            ],
            "conversation_id": "1590013759610822656",
            "id": "1590013788178288641",
            "text": "\ud83d\udccc 401 Unauthorized\n\nThe client cannot access the resource because they are not authenticated."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1590013784080674816"
            ],
            "text": "\ud83d\udccc 400 Bad Request\n\nThe request can not be fulfilled due to a client error. Examples that cause this status code are invalid formatting, a request syntax error, or missing data.",
            "conversation_id": "1590013759610822656",
            "id": "1590013784080674816"
        }
    },
    {
        "data": {
            "id": "1590013779856826370",
            "text": "\ud83d\udccc 304 Not Modified\n\nThis code is for caching purposes. If the resource has not been modified, this code is returned to let the client know they can continue using the same cached version.",
            "edit_history_tweet_ids": [
                "1590013779856826370"
            ],
            "conversation_id": "1590013759610822656"
        }
    },
    {
        "data": {
            "conversation_id": "1590013759610822656",
            "edit_history_tweet_ids": [
                "1590013775821692928"
            ],
            "text": "\ud83d\udccc 301 Permanent Redirect\n\nThe requested resource has been permanently moved to a new URL indicated in the \u2018Location\u2019 response header.",
            "id": "1590013775821692928"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1590013771682045959"
            ],
            "text": "\ud83d\udccc 204 No Content\n\nThe request was successful, but no new information needed to be returned. This is typical of DELETE requests.",
            "id": "1590013771682045959",
            "conversation_id": "1590013759610822656"
        }
    },
    {
        "data": {
            "conversation_id": "1590013759610822656",
            "id": "1590013767689318400",
            "edit_history_tweet_ids": [
                "1590013767689318400"
            ],
            "text": "\ud83d\udccc 201 Created\n\nThe request was successful, and a new resource was created. This is typical of successful PUT and POST requests."
        }
    },
    {
        "data": {
            "id": "1590013763616481283",
            "edit_history_tweet_ids": [
                "1590013763616481283"
            ],
            "text": "\ud83d\udccc 200 OK\n\nThe standard \u2018OK\u2019 status code means an HTTP request was successful, and the resource was delivered.",
            "conversation_id": "1590013759610822656"
        }
    },
    {
        "data": {
            "conversation_id": "1590013759610822656",
            "edit_history_tweet_ids": [
                "1590013759610822656"
            ],
            "id": "1590013759610822656",
            "text": "10 HTTP status codes all developers should recognize.\n\nThread\ud83e\uddf5"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1589981579786551296"
            ],
            "id": "1589981579786551296",
            "text": "Thanks for reading! Follow @Rapid_API for more exclusive content. \ud83d\udc19\ud83d\udc99",
            "conversation_id": "1589981542293512192"
        }
    },
    {
        "data": {
            "conversation_id": "1589981542293512192",
            "edit_history_tweet_ids": [
                "1589981575642767360"
            ],
            "id": "1589981575642767360",
            "text": "4. Resource Server\n\nThis is where protected resources are located. \n\nResource servers receive client access requests, validate their access token, and deliver the resource needed."
        }
    },
    {
        "data": {
            "text": "3. Authorization Server\n\nThis server issues access tokens to clients who request access to a resource.\n\nAccess tokens are issued after successful authentication and consent by the resource owner.",
            "id": "1589981571330736129",
            "edit_history_tweet_ids": [
                "1589981571330736129"
            ],
            "conversation_id": "1589981542293512192"
        }
    },
    {
        "data": {
            "conversation_id": "1589981542293512192",
            "edit_history_tweet_ids": [
                "1589981567358746626"
            ],
            "id": "1589981567358746626",
            "text": "2. Client\n\nThe system that is requesting access to the protected resource. The client must provide the appropriate token to gain access."
        }
    },
    {
        "data": {
            "id": "1589981563248254978",
            "edit_history_tweet_ids": [
                "1589981563248254978"
            ],
            "conversation_id": "1589981542293512192",
            "text": "1. Resource Owner\n\nThis is the user or system that owns the protected resource and can grant access to it using the OAuth 2.0 authorization standards."
        }
    },
    {
        "data": {
            "id": "1589981558957805569",
            "text": "OAuth 2.0 defines roles which are core components of its specification. There are four roles, each being an essential part of the framework.\n\nLet\u2019s look at each role \ud83d\udc47",
            "edit_history_tweet_ids": [
                "1589981558957805569"
            ],
            "conversation_id": "1589981542293512192"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1589981554578595840"
            ],
            "id": "1589981554578595840",
            "text": "OAuth 2.0 does not define a particular access token format, but JSON Web Tokens (JWTs) are commonly used.\n\nThese tokens contain authorization information representing a user's access to a specific resource.",
            "conversation_id": "1589981542293512192"
        }
    },
    {
        "data": {
            "conversation_id": "1589981542293512192",
            "id": "1589981550397083649",
            "text": "An example is logging in to an app via your Google or Facebook account.\n\nYour credentials are used without being disclosed to another app. This is achieved using access tokens.",
            "edit_history_tweet_ids": [
                "1589981550397083649"
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1589981542293512192",
            "edit_history_tweet_ids": [
                "1589981546370535424"
            ],
            "text": "OAuth (Open Authorization) is an authorization standard that allows applications to access resources hosted by other web applications on behalf of the user.",
            "id": "1589981546370535424"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1589981542293512192"
            ],
            "id": "1589981542293512192",
            "text": "An introduction to OAuth 2.0.\n\nThread \ud83e\uddf5\ud83d\udc47",
            "conversation_id": "1589981542293512192"
        }
    },
    {
        "data": {
            "conversation_id": "1589777747622051841",
            "id": "1589777777435238400",
            "text": "Hope you enjoyed this thread.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99",
            "edit_history_tweet_ids": [
                "1589777777435238400"
            ]
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1589777743696248832"
                ]
            },
            "text": "If you want to use the different cache times for specific routes, you can do so with the code you can see below. https://t.co/87CRf1gzoT",
            "conversation_id": "1589777747622051841",
            "edit_history_tweet_ids": [
                "1589777773077356545"
            ],
            "id": "1589777773077356545"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1589777743696248832",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhAGb1TWQAAY2lr.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1589777747622051841",
            "id": "1589777769029844993",
            "edit_history_tweet_ids": [
                "1589777769029844993"
            ],
            "text": "We pass the actual number of minutes we want to cache the results.\n\nIn our case, it's 2 minutes.\n\nDuration is in the following format \"[length][unit],\", e.g. \"12 minutes,\" or \"1 day\""
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1589777764269244417"
            ],
            "attachments": {
                "media_keys": [
                    "3_1589777737899728899"
                ]
            },
            "id": "1589777764269244417",
            "text": "How to utilize the package is demonstrated in the code below.\n\n1\ufe0f\u20e3 First, require the package.\n\n2\ufe0f\u20e3  We create a variable called cache, which holds the configured apicache middleware.\n\n3\ufe0f\u20e3 To use the middleware, use the express function \"app.use\".\n\nIt'll be applied to every route. https://t.co/rvKgTs9K1E",
            "conversation_id": "1589777747622051841"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1589777737899728899",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FhAGbftWYAM-mrs.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "text": "For this, we'll make use of the \"apicache\" package.\n\nInstall the package first by running the following command in your terminal.\n\nnpm i apicache",
            "id": "1589777760091885569",
            "edit_history_tweet_ids": [
                "1589777760091885569"
            ],
            "conversation_id": "1589777747622051841"
        }
    },
    {
        "data": {
            "conversation_id": "1589777747622051841",
            "edit_history_tweet_ids": [
                "1589777756077826055"
            ],
            "id": "1589777756077826055",
            "text": "Let's demonstrate how caching may be added to the NodeJs Express API application."
        }
    },
    {
        "data": {
            "conversation_id": "1589777747622051841",
            "text": "Caching is a technique that is used to speed up the API by storing frequently accessed data in a temporary storage area.\n\nWhen the data is needed again, it can be retrieved from the cache instead of being fetched from its original location.",
            "edit_history_tweet_ids": [
                "1589777751858327552"
            ],
            "id": "1589777751858327552"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1589777747622051841"
            ],
            "text": "How to cache API requests in Express.\n\nThread \ud83e\uddf5\ud83d\udc47",
            "id": "1589777747622051841",
            "conversation_id": "1589777747622051841"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1589707040070533120"
            ],
            "id": "1589707040070533120",
            "text": "That\u2019s all for now!\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19",
            "conversation_id": "1589707011264069633"
        }
    },
    {
        "data": {
            "text": "We have discussed API injections in detail on RapidAPI Guides. (https://t.co/DXEFzGVE0V)",
            "id": "1589707036014612480",
            "edit_history_tweet_ids": [
                "1589707036014612480"
            ],
            "conversation_id": "1589707011264069633"
        }
    },
    {
        "data": {
            "id": "1589707031836954624",
            "text": "\ud83d\udccc Prevention techniques\n\n- The user input should be sanitized properly both on the client and server sides. \n- We can encode special characters and change their meaning. This way interpreter will treat them as data rather than special characters.",
            "edit_history_tweet_ids": [
                "1589707031836954624"
            ],
            "conversation_id": "1589707011264069633"
        }
    },
    {
        "data": {
            "conversation_id": "1589707011264069633",
            "id": "1589707027617554432",
            "edit_history_tweet_ids": [
                "1589707027617554432"
            ],
            "text": "\ud83d\udccc API Injection impact\n\nAPI injection can affect your API in the following ways:\n\n- Database leak\n- Authentication issues\n- Full take-over of the system\n- Denial of service (DoS)\n- Attackers may carry out remote code execution\n- Attackers may also create new functionality"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1589707023507066881"
            ],
            "text": "\ud83d\udccc Example\n\nA simple example is when you want to view the uploaded file. The API will take the file id to the server to retrieve it. If the user sends a malicious code along with the file id, it will be executed on the server.",
            "conversation_id": "1589707011264069633",
            "id": "1589707023507066881"
        }
    },
    {
        "data": {
            "conversation_id": "1589707011264069633",
            "id": "1589707019300347906",
            "edit_history_tweet_ids": [
                "1589707019300347906"
            ],
            "text": "\ud83d\udccc Command Injections\n\nWhen an API injection brings a system command to the server, it turns into a Command injection.\n\nThe command, if executed, can delete site directories or the entire site from the server."
        }
    },
    {
        "data": {
            "conversation_id": "1589707011264069633",
            "text": "API injection occurs when the user sends malicious code with the API request as part of the request body or query parameter. \n\nMost of the time, the code is a database query that executes and corrupts the database.",
            "edit_history_tweet_ids": [
                "1589707015282167811"
            ],
            "id": "1589707015282167811"
        }
    },
    {
        "data": {
            "text": "API Injections. What is it?\n\nThread \ud83e\uddf5\ud83d\udc47",
            "id": "1589707011264069633",
            "edit_history_tweet_ids": [
                "1589707011264069633"
            ],
            "conversation_id": "1589707011264069633"
        }
    },
    {
        "data": {
            "conversation_id": "1589618642110611458",
            "id": "1589618687291670528",
            "edit_history_tweet_ids": [
                "1589618687291670528"
            ],
            "text": "That's all, thanks for reading! \n\nFollow @Rapid_API for more exclusive content.\n\nVisit RapidAPI Hub (https://t.co/2tM1EEQGY2) and play around with 40,000 more APIs. \ud83d\udc19\ud83d\udc99"
        }
    },
    {
        "data": {
            "id": "1589618683088879617",
            "edit_history_tweet_ids": [
                "1589618683088879617"
            ],
            "conversation_id": "1589618642110611458",
            "text": "\ud83d\udd1f MOON API\n\nAccess all lunar data, including lunar phases, illumination, and distance.\n\nhttps://t.co/gJB0Ttdb8S"
        }
    },
    {
        "data": {
            "text": "9\ufe0f\u20e3 Diagnosis API\n\nProvides data on medical symptoms and lab test analysis allowing you to create an intelligent symptom checker.\n\nhttps://t.co/wlil38NSmC",
            "id": "1589618678915600384",
            "edit_history_tweet_ids": [
                "1589618678915600384"
            ],
            "conversation_id": "1589618642110611458"
        }
    },
    {
        "data": {
            "id": "1589618674847154177",
            "edit_history_tweet_ids": [
                "1589618674847154177"
            ],
            "conversation_id": "1589618642110611458",
            "text": "8\ufe0f\u20e3 Brightest Stars API\n\nProvides a list of the brightest stars and their details.\n\nhttps://t.co/BuSZpClJFH"
        }
    },
    {
        "data": {
            "id": "1589618670707347457",
            "edit_history_tweet_ids": [
                "1589618670707347457"
            ],
            "conversation_id": "1589618642110611458",
            "text": "7\ufe0f\u20e3 Melted polar ice cap API\n\nProvides the average monthly Arctic sea ice extent each September since 1979 from satellite observations.\n\nhttps://t.co/4DAqhB0PGY"
        }
    },
    {
        "data": {
            "id": "1589618666634711042",
            "edit_history_tweet_ids": [
                "1589618666634711042"
            ],
            "conversation_id": "1589618642110611458",
            "text": "6\ufe0f\u20e3 Planets by API-Ninjas\n\nGet statistics on thousands of planets in the known universe.\n\nhttps://t.co/bVjN6HMcGb"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1589618662545178627"
            ],
            "text": "5\ufe0f\u20e3 periodicTable API\n\nProvides details on elements of the periodic table.\n\nhttps://t.co/sQOIDUeOMo",
            "conversation_id": "1589618642110611458",
            "id": "1589618662545178627"
        }
    },
    {
        "data": {
            "text": "4\ufe0f\u20e3 CarbonFootprint API\n\nCalculates carbon footprint in various situations, including flights, public transit, and hydro usage.\n\nhttps://t.co/3Bz8qfMuph",
            "conversation_id": "1589618642110611458",
            "edit_history_tweet_ids": [
                "1589618658443251713"
            ],
            "id": "1589618658443251713"
        }
    },
    {
        "data": {
            "conversation_id": "1589618642110611458",
            "edit_history_tweet_ids": [
                "1589618654227976193"
            ],
            "text": "3\ufe0f\u20e3 EveryEarthquake API\n\nGet every earthquake and every other event that registers on the Richter scale cataloged by the USGS, with detailed location details.\n\nhttps://t.co/J1obTpk9Uw",
            "id": "1589618654227976193"
        }
    },
    {
        "data": {
            "conversation_id": "1589618642110611458",
            "edit_history_tweet_ids": [
                "1589618650096476166"
            ],
            "id": "1589618650096476166",
            "text": "2\ufe0f\u20e3 Molecular Data API\n\nProvides quantum chemical calculations, molecular mechanics, molecular orbital diagrams, and more for a large number of molecules.\n\nhttps://t.co/lm1YR0ZLUD"
        }
    },
    {
        "data": {
            "conversation_id": "1589618642110611458",
            "id": "1589618646132867072",
            "edit_history_tweet_ids": [
                "1589618646132867072"
            ],
            "text": "1\ufe0f\u20e3 UPHERESPACE API\n\nReal-time satellite tracking API. Track orbits, launch sites, and more.\n\nhttps://t.co/H3XtbLgkhR"
        }
    },
    {
        "data": {
            "text": "Top 10 Science APIs.\n\nA thread \ud83e\uddf5\ud83d\udc47",
            "id": "1589618642110611458",
            "edit_history_tweet_ids": [
                "1589618642110611458"
            ],
            "conversation_id": "1589618642110611458"
        }
    },
    {
        "data": {
            "conversation_id": "1588645740552880131",
            "text": "We hope you found this helpful. Follow @Rapid_API for more of our exclusive content. \ud83d\udc19",
            "edit_history_tweet_ids": [
                "1588645768528699392"
            ],
            "id": "1588645768528699392"
        }
    },
    {
        "data": {
            "id": "1588645764296806401",
            "edit_history_tweet_ids": [
                "1588645764296806401"
            ],
            "conversation_id": "1588645740552880131",
            "text": "So if you are consuming a GraphQL API, look at its schema to see how you can write mutations.\n\nFor a deeper dive, check out our interactive guide on GraphQL mutations.\n\nhttps://t.co/9U3uN7Duhe"
        }
    },
    {
        "data": {
            "id": "1588645758127017992",
            "attachments": {
                "media_keys": [
                    "3_1588645736450777089"
                ]
            },
            "edit_history_tweet_ids": [
                "1588645758127017992"
            ],
            "conversation_id": "1588645740552880131",
            "text": "Every mutation must be defined in the GraphQL API\u2019s schema. \n\nThe `createUser` mutation above can be defined in the schema like this. https://t.co/7kUM4Na5hC"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1588645736450777089",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FgwA4VsWYAEIYke.png"
                }
            ]
        }
    },
    {
        "data": {
            "id": "1588645752624091139",
            "edit_history_tweet_ids": [
                "1588645752624091139"
            ],
            "attachments": {
                "media_keys": [
                    "3_1588645731597967364"
                ]
            },
            "text": "\ud83d\udccc Example\n\nThe following mutation will create a new user from the given input user data.\n\nThen, it will return the id and name of the created user. https://t.co/AiVZeJZ2Rt",
            "conversation_id": "1588645740552880131"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1588645731597967364",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FgwA4DnWYAQwhOY.png"
                }
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1588645748551438343"
            ],
            "id": "1588645748551438343",
            "text": "We use the `mutation` keyword instead of `query` when sending the request.\n\nOnce a mutation is successful, it returns the new data specified in the fields.",
            "conversation_id": "1588645740552880131"
        }
    },
    {
        "data": {
            "id": "1588645744524894217",
            "text": "\ud83d\udccc GraphQL mutations\n\nWhile GraphQL queries are used for requesting data, GraphQL mutations are used for sending or modifying server-side data. \n\nWe use mutation instead of query whenever we add, update, or delete data using a GraphQL API.",
            "edit_history_tweet_ids": [
                "1588645744524894217"
            ],
            "conversation_id": "1588645740552880131"
        }
    },
    {
        "data": {
            "conversation_id": "1588645740552880131",
            "id": "1588645740552880131",
            "edit_history_tweet_ids": [
                "1588645740552880131"
            ],
            "text": "What are GraphQL mutations?\n\nA thread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1588614132986777602"
            ],
            "text": "Thanks for reading!\n\nFollow @Rapid_API for more of our exclusive content. \ud83d\udc19",
            "conversation_id": "1588614096630550537",
            "id": "1588614132986777602"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1588614128951762949"
            ],
            "id": "1588614128951762949",
            "text": "5\ufe0f\u20e3 Hosting\n\nConsider how you will securely host an API and manage it over its lifecycle. You will also need to host your API docs.\n\nIf your API is public, the domain name should be clear and precise to allow your audience to discover it easily. As always, only use HTTPS.",
            "conversation_id": "1588614096630550537"
        }
    },
    {
        "data": {
            "conversation_id": "1588614096630550537",
            "text": "External APIs are available to wider audiences and developers to develop a community or gain customers.\n\nPartner APIs are only exposed to strategic business partners. They are not publicly available and require specific authorization to be accessed.",
            "edit_history_tweet_ids": [
                "1588614124925341697"
            ],
            "id": "1588614124925341697"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1588614120751898624"
            ],
            "id": "1588614120751898624",
            "text": "4\ufe0f\u20e3 Level of accessibility\n\nConsider whether your API should be internal, external, or a partner API.\n\nInternal APIs remain within a company and provide access to backend data. They are not available publicly and often manage private data.",
            "conversation_id": "1588614096630550537"
        }
    },
    {
        "data": {
            "conversation_id": "1588614096630550537",
            "text": "Researching the top API security risks and preventative measures via the OWASP Foundation and implementing them is considered a best practice when securing APIs.",
            "edit_history_tweet_ids": [
                "1588614116712792064"
            ],
            "id": "1588614116712792064"
        }
    },
    {
        "data": {
            "id": "1588614112661147650",
            "edit_history_tweet_ids": [
                "1588614112661147650"
            ],
            "conversation_id": "1588614096630550537",
            "text": "3\ufe0f\u20e3 Security\n\nAPI security is critical and should be considered on these 3 levels:\n\n1. Data level security - users only have access to data they are authorized to see.\n\n2. Application level security - only authorized users have API access.\n\n3. Auditing - monitoring API usage."
        }
    },
    {
        "data": {
            "conversation_id": "1588614096630550537",
            "id": "1588614108638765061",
            "edit_history_tweet_ids": [
                "1588614108638765061"
            ],
            "text": "API-first is considered a good practice. It improves modularity and code reuse because you do not need to customize your API to fit existing software, which speeds up development and integration."
        }
    },
    {
        "data": {
            "conversation_id": "1588614096630550537",
            "edit_history_tweet_ids": [
                "1588614104612225024"
            ],
            "id": "1588614104612225024",
            "text": "2\ufe0f\u20e3 API-first design\n\nAPI-first means prioritizing the API as the first interface to your data and building the rest of your platform around it."
        }
    },
    {
        "data": {
            "conversation_id": "1588614096630550537",
            "edit_history_tweet_ids": [
                "1588614100577386510"
            ],
            "id": "1588614100577386510",
            "text": "1\ufe0f\u20e3 Standards\n\nStandards describe a common format that should be followed to produce consistently built and accessible APIs.\n\nA popular standard is the OpenAPI specification (OAS) which defines a standardized structure and syntax for REST APIs."
        }
    },
    {
        "data": {
            "text": "Five things to consider when designing an API.\n\nA thread \ud83e\uddf5\ud83d\udc47",
            "id": "1588614096630550537",
            "edit_history_tweet_ids": [
                "1588614096630550537"
            ],
            "conversation_id": "1588614096630550537"
        }
    },
    {
        "data": {
            "text": "We hope you enjoyed this RapidAPI Comic! \n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19\n\nCheck out RapidAPI Hub to discover over 40,000 APIs! (https://t.co/2tM1EEQGY2)",
            "id": "1588516184823136257",
            "edit_history_tweet_ids": [
                "1588516184823136257"
            ],
            "conversation_id": "1588516159279828994"
        }
    },
    {
        "data": {
            "id": "1588516179739557888",
            "attachments": {
                "media_keys": [
                    "3_1588516154447896577"
                ]
            },
            "text": "{ 5 / 5 } https://t.co/M4lkkaUm8V",
            "edit_history_tweet_ids": [
                "1588516179739557888"
            ],
            "conversation_id": "1588516159279828994"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1588516154447896577",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FguLBrHWIAEcvDB.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "id": "1588516174597332992",
            "attachments": {
                "media_keys": [
                    "3_1588516149582614529"
                ]
            },
            "edit_history_tweet_ids": [
                "1588516174597332992"
            ],
            "conversation_id": "1588516159279828994",
            "text": "{ 4 / 5 } https://t.co/wYfddUVDqR"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1588516149582614529",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FguLBY_X0AEqV1s.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1588516144918536193"
                ]
            },
            "edit_history_tweet_ids": [
                "1588516169459310592"
            ],
            "conversation_id": "1588516159279828994",
            "id": "1588516169459310592",
            "text": "{ 3 / 5 } https://t.co/aq2n642SFK"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1588516144918536193",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FguLBHnXoAEngF0.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1588516159279828994",
            "attachments": {
                "media_keys": [
                    "3_1588516139604348931"
                ]
            },
            "text": "{ 2 / 5 } https://t.co/FjuKm0ljqg",
            "edit_history_tweet_ids": [
                "1588516164375814146"
            ],
            "id": "1588516164375814146"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1588516139604348931",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FguLAz0XkAM4O4N.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1588516159279828994"
            ],
            "text": "Learn about CORS in this week's RapidAPI Comic \ud83d\udc47\n\n{ 1 / 5 } https://t.co/jPxxuSQSo6",
            "attachments": {
                "media_keys": [
                    "3_1588516132503289858"
                ]
            },
            "conversation_id": "1588516159279828994",
            "id": "1588516159279828994"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1588516132503289858",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FguLAZXWAAInjJU.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "id": "1588319364226359296",
            "edit_history_tweet_ids": [
                "1588319364226359296"
            ],
            "conversation_id": "1588319339698085889",
            "text": "That\u2019s all for now!\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19"
        }
    },
    {
        "data": {
            "conversation_id": "1588319339698085889",
            "edit_history_tweet_ids": [
                "1588319360082481152"
            ],
            "id": "1588319360082481152",
            "text": "5\ufe0f\u20e3 Booking API\n\nThe API allows you to find all hotels, view prices, get at hotel pictures, rent a car, etc.\n\nAPI link \u2192 https://t.co/MDBufTUPDC"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1588319355959484418"
            ],
            "text": "4\ufe0f\u20e3 Tripadvisor API\n\nTripadvisor API helps to query real-time hotels search, flight prices, restaurants, attracting locations, etc., to create a traveling site.\n\nAPI link \u2192 https://t.co/iIfArbmO7G",
            "id": "1588319355959484418",
            "conversation_id": "1588319339698085889"
        }
    },
    {
        "data": {
            "text": "3\ufe0f\u20e3 Priceline Provider API\n\nThis API lets you search hotels, cars for rent, and flights.\n\nAPI link \u2192 https://t.co/UMFb8y9fhU",
            "id": "1588319351869939712",
            "edit_history_tweet_ids": [
                "1588319351869939712"
            ],
            "conversation_id": "1588319339698085889"
        }
    },
    {
        "data": {
            "conversation_id": "1588319339698085889",
            "id": "1588319347759632386",
            "text": "2\ufe0f\u20e3 Airbnb API\n\nAirbnb API allows users to search accommodations by location, place name, and GEO coordinates to find a place to rent.\n\nAPI link \u2192 https://t.co/Ztr52k80Yy",
            "edit_history_tweet_ids": [
                "1588319347759632386"
            ]
        }
    },
    {
        "data": {
            "id": "1588319343674376200",
            "edit_history_tweet_ids": [
                "1588319343674376200"
            ],
            "conversation_id": "1588319339698085889",
            "text": "1\ufe0f\u20e3 Hotels API\n\nThis API helps to query rooms, prices, facilities, etc., information from many hotels around the world to create a traveling site/application.\n\nAPI link \u2192 https://t.co/OmtVDYgmwT"
        }
    },
    {
        "data": {
            "conversation_id": "1588319339698085889",
            "id": "1588319339698085889",
            "edit_history_tweet_ids": [
                "1588319339698085889"
            ],
            "text": "Let\u2019s discuss the top five travel APIs you can use in your apps.\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "id": "1588245716203233280",
            "edit_history_tweet_ids": [
                "1588245716203233280"
            ],
            "text": "Hope you enjoyed this short tutorial.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99",
            "conversation_id": "1588245671336824832"
        }
    },
    {
        "data": {
            "conversation_id": "1588245671336824832",
            "edit_history_tweet_ids": [
                "1588245711975772160"
            ],
            "text": "When it comes to the response codes, we should use either:\n\n1. CREATE/PUT requests\n\n200, 204 should imply \"resource updated/created successfully.\" \n\n201 if the request created a new resource.\n\n2. DELETE requests\n\n200 or 204 should imply \"resource deleted successfully.\"",
            "id": "1588245711975772160"
        }
    },
    {
        "data": {
            "text": "4\ufe0f\u20e3 Delete\n\nWe use this operation is used to delete a specific user.\n\nFor this operation DELETE HTTP method is used.\n\nDELETE https://example .com/api/users/1",
            "id": "1588245707705970688",
            "edit_history_tweet_ids": [
                "1588245707705970688"
            ],
            "conversation_id": "1588245671336824832"
        }
    },
    {
        "data": {
            "conversation_id": "1588245671336824832",
            "attachments": {
                "media_keys": [
                    "3_1588245667318726656"
                ]
            },
            "text": "3\ufe0f\u20e3 Update\n\nWe use this operation to update data for a specific user.\n\nFor this operation PUT HTTP method is used.\n\nPUT https://example .com/api/users/1\n\nWe use the same payload as we used for CREATE action.\n\nIn the example payload, we changed the age and country of the user. https://t.co/D0P1YyYUhj",
            "edit_history_tweet_ids": [
                "1588245702488252417"
            ],
            "id": "1588245702488252417"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1588245667318726656",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FgqVBQCWAAAsjrz.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "text": "Index (addition)\n\nWhen we wish to retrieve data for multiple users at once, we use the following path.\n\nGET https://example .com/api/users/\n\nYou can see a sample of the retrieved data below. https://t.co/firfmk65Wg",
            "id": "1588245693202038784",
            "edit_history_tweet_ids": [
                "1588245693202038784"
            ],
            "attachments": {
                "media_keys": [
                    "3_1588245656795242497"
                ]
            },
            "conversation_id": "1588245671336824832"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1588245656795242497",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FgqVAo1WYAEI8QP.png"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1588245671336824832",
            "id": "1588245688965820416",
            "text": "2\ufe0f\u20e3 Read\n\nThis operation is used to read data for a specific user.\n\nThe user ID is usually part of the URL if the GET HTTP method is used.\n\nThe sample path may look like this:\n\nGET https://example .com/api/users/1  where 1 is the ID of the user.",
            "edit_history_tweet_ids": [
                "1588245688965820416"
            ]
        }
    },
    {
        "data": {
            "id": "1588245683957796864",
            "edit_history_tweet_ids": [
                "1588245683957796864"
            ],
            "conversation_id": "1588245671336824832",
            "text": "1\ufe0f\u20e3 Create\n\nWe'll call this function when we want to create/add a new user to the database.\n\nWe'll use the HTTP POST method.\n\nPOST https://example .com/api/users/\n\nBelow you can see a sample JSON payload. https://t.co/pPM2H9AJgL",
            "attachments": {
                "media_keys": [
                    "3_1588245652491960320"
                ]
            }
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1588245652491960320",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FgqVAYzXgAAQRTV.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1588245671336824832",
            "text": "In the following example, we will explain CRUD operations on an API that manipulates user data.",
            "edit_history_tweet_ids": [
                "1588245679746428929"
            ],
            "id": "1588245679746428929"
        }
    },
    {
        "data": {
            "conversation_id": "1588245671336824832",
            "text": "CRUD is an acronym for \"Application Programming Interface - Create, Read, Update, Delete.\" \n\nCRUD refers to the four basic operations performed on data using an API. \n\nThese four operations are commonly referred to as CRUD operations.",
            "edit_history_tweet_ids": [
                "1588245675523047424"
            ],
            "id": "1588245675523047424"
        }
    },
    {
        "data": {
            "id": "1588245671336824832",
            "edit_history_tweet_ids": [
                "1588245671336824832"
            ],
            "conversation_id": "1588245671336824832",
            "text": "Let\u2019s talk about CRUD operations.\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "conversation_id": "1588154002113429505",
            "id": "1588154028252356616",
            "edit_history_tweet_ids": [
                "1588154028252356616"
            ],
            "text": "You can find all these fantastic APIs and 40,000 more at RapidAPI Hub (https://t.co/2tM1EEQGY2).\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19\ud83d\ude80"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1588154024032964608"
            ],
            "conversation_id": "1588154002113429505",
            "id": "1588154024032964608",
            "text": "\ud83c\udfb5 Music discovery app\n\nCreate an app that identifies music by matching an input.\n\nAPI \u2192 Shazam (https://t.co/pKrqM5poTq)"
        }
    },
    {
        "data": {
            "conversation_id": "1588154002113429505",
            "text": "\u2709\ufe0f Messaging app\n\nBuild a communication app where you can send SMS and more.\n\nAPI \u2192 sms77io (https://t.co/AN9lvaBWtp)",
            "edit_history_tweet_ids": [
                "1588154019817611265"
            ],
            "id": "1588154019817611265"
        }
    },
    {
        "data": {
            "id": "1588154015212257280",
            "edit_history_tweet_ids": [
                "1588154015212257280"
            ],
            "conversation_id": "1588154002113429505",
            "text": "\ud83d\udd17 URL shortener app\n\nCreate an app that turns long, complicated links into shorter, more memorable ones.\n\nAPI \u2192 URL Shortener Service (https://t.co/cKyQwSRYHZ)"
        }
    },
    {
        "data": {
            "conversation_id": "1588154002113429505",
            "edit_history_tweet_ids": [
                "1588154010598576129"
            ],
            "id": "1588154010598576129",
            "text": "\ud83c\udf24\ufe0f Weather app\n\nBuild an app that shows the current weather and forecast for any location.\n\nAPI \u2192 Dark Sky Weather API (https://t.co/qxoMiIgYoC)"
        }
    },
    {
        "data": {
            "text": "\ud83d\udd24 Translation app\n\nCreate an app that dynamically translates texts into over 100 languages.\n\nAPI \u2192 Google Translate API (https://t.co/1wELwijL5D)",
            "id": "1588154006089732096",
            "edit_history_tweet_ids": [
                "1588154006089732096"
            ],
            "conversation_id": "1588154002113429505"
        }
    },
    {
        "data": {
            "conversation_id": "1588154002113429505",
            "id": "1588154002113429505",
            "text": "Here are 5 API-based projects and the APIs you can use to build them.\n\nThread \ud83e\uddf5\ud83d\udc47",
            "edit_history_tweet_ids": [
                "1588154002113429505"
            ]
        }
    },
    {
        "data": {
            "text": "We hope you found this helpful! \n\nFollow @Rapid_API for more of our exclusive content. \ud83d\udc19",
            "id": "1587942131125059584",
            "edit_history_tweet_ids": [
                "1587942131125059584"
            ],
            "conversation_id": "1587942103002349575"
        }
    },
    {
        "data": {
            "id": "1587942127119523841",
            "edit_history_tweet_ids": [
                "1587942127119523841"
            ],
            "conversation_id": "1587942103002349575",
            "text": "\ud83d\udccc Examples of Asynchronous APIs\n\nNewer API architectures like gRPC support asynchronous communication.\n\nGraphQL subscriptions are also asynchronous."
        }
    },
    {
        "data": {
            "conversation_id": "1587942103002349575",
            "text": "\ud83d\udccc Disadvantages of Asynchronous APIs\n\n- They are relatively difficult to design and manage.\n\n- Rate limiting, analytics, and throttling them can be complex.",
            "edit_history_tweet_ids": [
                "1587942123101380608"
            ],
            "id": "1587942123101380608"
        }
    },
    {
        "data": {
            "id": "1587942119079137284",
            "edit_history_tweet_ids": [
                "1587942119079137284"
            ],
            "conversation_id": "1587942103002349575",
            "text": "\ud83d\udccc Advantages of Asynchronous APIs\n\n- They can send multiple responses for a single request.\n\n- They offer great performance at scale.\n\n- They are efficient in terms of bandwidth usage."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587942115048407040"
            ],
            "text": "\ud83d\udccc Asynchronous APIs\n\nAsynchronous APIs can process multiple requests at the same time. \n\nThey allow time-consuming requests to be processed in the background while minor requests are serviced immediately.",
            "conversation_id": "1587942103002349575",
            "id": "1587942115048407040"
        }
    },
    {
        "data": {
            "id": "1587942111047041027",
            "text": "\ud83d\udccc Examples of Synchronous APIs\n\nConventional API architectures are mostly synchronous.\n\nREST and SOAP APIs are synchronous APIs.\n\nGraphQL queries and mutations are also synchronous.",
            "edit_history_tweet_ids": [
                "1587942111047041027"
            ],
            "conversation_id": "1587942103002349575"
        }
    },
    {
        "data": {
            "text": "\ud83d\udccc Synchronous APIs\n\nThese APIs handle requests synchronously, and users have to wait for the response from the API before they can continue.\n\nThey can only process one request at a time. \n\nTherefore, they can bottleneck performance if a request takes too long.",
            "id": "1587942106999541765",
            "edit_history_tweet_ids": [
                "1587942106999541765"
            ],
            "conversation_id": "1587942103002349575"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587942103002349575"
            ],
            "id": "1587942103002349575",
            "text": "Synchronous vs. Asynchronous APIs\n\nA thread \ud83e\uddf5\ud83d\udc47",
            "conversation_id": "1587942103002349575"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587874180099444736"
            ],
            "conversation_id": "1587874163087245314",
            "id": "1587874180099444736",
            "text": "We hope you enjoyed this short tutorial.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99"
        }
    },
    {
        "data": {
            "conversation_id": "1587874163087245314",
            "edit_history_tweet_ids": [
                "1587874175645016066"
            ],
            "id": "1587874175645016066",
            "attachments": {
                "media_keys": [
                    "3_1587874159501234177"
                ]
            },
            "text": "2\ufe0f\u20e3 Now, enter the actual variable name and the value.\n\nYou'll be able to access the environment variables in the different parts of the client, such as the request header. https://t.co/MMnXia5HWr"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1587874159501234177",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FglDIpkX0AEyB9U.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587874171358437379"
            ],
            "text": "To rename the group, you can hover next to the group name and click the three dots icon. https://t.co/8xOvP2C2C2",
            "id": "1587874171358437379",
            "conversation_id": "1587874163087245314",
            "attachments": {
                "media_keys": [
                    "3_1587874155982209031"
                ]
            }
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1587874155982209031",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FglDIcdXwAcPer9.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1587874163087245314",
            "id": "1587874167029960705",
            "text": "1\ufe0f\u20e3 Create group\n\nTo use environment variables, you have to create an environment group.\n\nClick the plus icon next to the group. The new group will be automatically created for you. https://t.co/fyoANamUWW",
            "attachments": {
                "media_keys": [
                    "3_1587874151955578881"
                ]
            },
            "edit_history_tweet_ids": [
                "1587874167029960705"
            ]
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1587874151955578881",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FglDINdWQAEXWLy.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1587874163087245314",
            "edit_history_tweet_ids": [
                "1587874163087245314"
            ],
            "id": "1587874163087245314",
            "text": "How to add environment variables into the RapidAPI client for VS Code\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "conversation_id": "1587791717339643910",
            "id": "1587791745810661377",
            "edit_history_tweet_ids": [
                "1587791745810661377"
            ],
            "text": "That\u2019s all for now! \n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19"
        }
    },
    {
        "data": {
            "conversation_id": "1587791717339643910",
            "edit_history_tweet_ids": [
                "1587791741792526336"
            ],
            "id": "1587791741792526336",
            "text": "You can read this guide to learn more about REST an GraphQL APIs (https://t.co/YFhhqcGXv8)."
        }
    },
    {
        "data": {
            "id": "1587791737774379008",
            "edit_history_tweet_ids": [
                "1587791737774379008"
            ],
            "conversation_id": "1587791717339643910",
            "text": "5\ufe0f\u20e3 Language\n\nREST API is an API type that lets you perform CRUD operations between client and server.\n\nGraphQL is a query language that allows you to read and mutate the data in APIs."
        }
    },
    {
        "data": {
            "id": "1587791733743575049",
            "edit_history_tweet_ids": [
                "1587791733743575049"
            ],
            "text": "4\ufe0f\u20e3 Cache\n\nREST API leverages the caching feature. The different operations, like the GET, POST, etc., can be cached and stay in the browser history.\n\nGraphQL doesn't follow the HTTP specs and uses a single endpoint. It is up to developers to ensure that caching is implemented.",
            "conversation_id": "1587791717339643910"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587791729700257793"
            ],
            "text": "3\ufe0f\u20e3 Endpoints\n\nREST API leads to fetching different data from multiple endpoints.\n\nGraphQL provides a single endpoint from where you can read and manipulate data.",
            "id": "1587791729700257793",
            "conversation_id": "1587791717339643910"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587791725686362119"
            ],
            "text": "2\ufe0f\u20e3 Overfetching and under fetching\n\nWith REST API, you either often fetch an unnecessary amount of data or fetch data in multiple API calls.\n\nWith GraphQL, you only get the data that you have requested.",
            "conversation_id": "1587791717339643910",
            "id": "1587791725686362119"
        }
    },
    {
        "data": {
            "conversation_id": "1587791717339643910",
            "edit_history_tweet_ids": [
                "1587791721550598144"
            ],
            "id": "1587791721550598144",
            "text": "1\ufe0f\u20e3 Method to perform data operations\n\nWith RESTful APIs, you have different HTTP methods to perform CRUD operations.\n\nWhereas with GraphQL, you use queries and mutations to perform data operations."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587791717339643910"
            ],
            "conversation_id": "1587791717339643910",
            "id": "1587791717339643910",
            "text": "REST and GraphQL APIs. What are the differences between them?\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "id": "1587547031655968768",
            "edit_history_tweet_ids": [
                "1587547031655968768"
            ],
            "conversation_id": "1587547003210326016",
            "text": "That\u2019s all for now!\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19"
        }
    },
    {
        "data": {
            "conversation_id": "1587547003210326016",
            "edit_history_tweet_ids": [
                "1587547027453247488"
            ],
            "text": "Cookies are primarily used in three places:\n\n\ud83d\udc49 Session management\n\ud83d\udc49 Personalization\n\ud83d\udc49 Tracking",
            "id": "1587547027453247488"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587547023275958272"
            ],
            "id": "1587547023275958272",
            "text": "4\ufe0f\u20e3 Cookie API\n\nA cookie is data from a specific website stored on the client\u2019s computer while they browse the Internet.\n\nThe HTTP cookie or the web or browser cookies saves the data that is sent by the server to the web browser.",
            "conversation_id": "1587547003210326016"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587547019261927424"
            ],
            "text": "3\ufe0f\u20e3 IndexedDB API\n\nIt is a Web API that provides you with a non-relational database inside your browser. \n\nIt has object stores that can be used to store almost anything from JavaScript objects to files to blobs, etc.\n\nYou can also perform transactions on IndexedDB.",
            "conversation_id": "1587547003210326016",
            "id": "1587547019261927424"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587547015201832963"
            ],
            "text": "2\ufe0f\u20e3 Session Storage API\n\nIt is another type of storage that temporarily saves data in the web browser. The application data you save here gets cleared out after closing the browser or the tab.",
            "id": "1587547015201832963",
            "conversation_id": "1587547003210326016"
        }
    },
    {
        "data": {
            "text": "Although there is no expiration date with the local storage, it only stores strings.\n\nIf you are saving objects, arrays, etc., in the local storage, you will need to convert them to strings using the JSON.stringify() function.",
            "conversation_id": "1587547003210326016",
            "edit_history_tweet_ids": [
                "1587547011183792130"
            ],
            "id": "1587547011183792130"
        }
    },
    {
        "data": {
            "text": "1\ufe0f\u20e3 Local Storage API\n\nIt is a form of Web Storage API that lets you store data for longer durations. If an application\u2019s local storage is not cleared, it can stay in your browser forever.",
            "id": "1587547007144660998",
            "edit_history_tweet_ids": [
                "1587547007144660998"
            ],
            "conversation_id": "1587547003210326016"
        }
    },
    {
        "data": {
            "id": "1587547003210326016",
            "edit_history_tweet_ids": [
                "1587547003210326016"
            ],
            "text": "Let\u2019s discuss a few Storage Web APIs.\n\nThread \ud83e\uddf5\ud83d\udc47",
            "conversation_id": "1587547003210326016"
        }
    },
    {
        "data": {
            "id": "1587503492834418688",
            "edit_history_tweet_ids": [
                "1587503492834418688"
            ],
            "text": "We hope you liked this thread!\n\nFollow @Rapid_API for more of our exclusive content. \ud83d\udc19\ud83d\ude80",
            "conversation_id": "1587503456482377732"
        }
    },
    {
        "data": {
            "id": "1587503488816365568",
            "edit_history_tweet_ids": [
                "1587503488816365568"
            ],
            "text": "\ud83d\udccc Access-Control-Allow-Headers\n\nUsed in response to a preflight request that contains \u2018Access-Control-Request-Headers.\u2019 It indicates which HTTP headers can be used in the actual request.",
            "conversation_id": "1587503456482377732"
        }
    },
    {
        "data": {
            "conversation_id": "1587503456482377732",
            "edit_history_tweet_ids": [
                "1587503484844253185"
            ],
            "id": "1587503484844253185",
            "text": "\ud83d\udccc Access-Control-Allow-Methods\n\nThis method defines one or more methods allowed to access the cross-origin resource and is sent in response to a preflight request. For example:\n\nAccess-Control-Allow-Methods: POST, OPTIONS"
        }
    },
    {
        "data": {
            "conversation_id": "1587503456482377732",
            "edit_history_tweet_ids": [
                "1587503480859758592"
            ],
            "id": "1587503480859758592",
            "text": "\ud83d\udccc Access-Control-Max-Age\n\nThis header is used to state how long the results of a preflight request can be cached in seconds."
        }
    },
    {
        "data": {
            "id": "1587503476845813766",
            "edit_history_tweet_ids": [
                "1587503476845813766"
            ],
            "conversation_id": "1587503456482377732",
            "text": "\ud83d\udccc Access-Control-Allow-Credentials\n\nThis header is used in preflight requests to indicate whether a request can be made with credentials (cookies, TLS client certificates, or authorization headers). Its only valid value is \u2018true.\u2019"
        }
    },
    {
        "data": {
            "conversation_id": "1587503456482377732",
            "edit_history_tweet_ids": [
                "1587503472668090368"
            ],
            "id": "1587503472668090368",
            "text": "Now let's move on to HTTP response headers:\n\n\ud83d\udccc Access-Control-Allow-Origin\n\nThis header defines the domain from which requests are accepted. If the value for this header is an asterisk(*), it indicates requests from any domain are accepted."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587503468452929538"
            ],
            "conversation_id": "1587503456482377732",
            "id": "1587503468452929538",
            "text": "\ud83d\udccc Access-Control-Request-Headers\n\nThis header is used when issuing a preflight request. \n\nIt is sent by the browser and defines the different HTTP headers the actual request might contain.\n\nThe server answers in a corresponding \u2018Access-Control-Allow-Headers\u2019 response header."
        }
    },
    {
        "data": {
            "text": "\ud83d\udccc Access-Control-Request-Method\n\nSpecific CORS requests that affect user data will initiate with a preflight request. This header is added to the preflight to indicate the method used in the main request. For example:\n\nAccess-Control-Request-Method: PUT",
            "id": "1587503464401321991",
            "edit_history_tweet_ids": [
                "1587503464401321991"
            ],
            "conversation_id": "1587503456482377732"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587503460437590016"
            ],
            "text": "Let's start with HTTP request headers:\n\n\ud83d\udccc Origin\n\nThe browser adds this header to CORS requests to indicate the origin domain.",
            "conversation_id": "1587503456482377732",
            "id": "1587503460437590016"
        }
    },
    {
        "data": {
            "id": "1587503456482377732",
            "edit_history_tweet_ids": [
                "1587503456482377732"
            ],
            "conversation_id": "1587503456482377732",
            "text": "HTTP headers for CORS explained.\n\nA thread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "conversation_id": "1587429212230762497",
            "id": "1587429245336395776",
            "edit_history_tweet_ids": [
                "1587429245336395776"
            ],
            "text": "That\u2019s all for now! \n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19"
        }
    },
    {
        "data": {
            "conversation_id": "1587429212230762497",
            "edit_history_tweet_ids": [
                "1587429241146179586"
            ],
            "id": "1587429241146179586",
            "text": "Take a look at this guide for a more detailed explanation of API Caching techniques (https://t.co/JDjtQqS5PG)."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587429236951973890"
            ],
            "text": "\ud83d\udccc API Caching security measures\n\nCare must be taken while caching APIs because not everything that can be cached should be cached. \n\nAPI keys, tokens, and other credentials can be a security hazard if cached improperly.",
            "conversation_id": "1587429212230762497",
            "id": "1587429236951973890"
        }
    },
    {
        "data": {
            "conversation_id": "1587429212230762497",
            "edit_history_tweet_ids": [
                "1587429232757596161"
            ],
            "id": "1587429232757596161",
            "text": "2\ufe0f\u20e3 Server Caching\n\nServer Caching reduces the load on the server by storing repeated calls in a cache. As a result, the server does not have to process these requests.\n\nThe client cache caches the response on the browser level. The server cache does the same but on the server."
        }
    },
    {
        "data": {
            "id": "1587429228563382273",
            "edit_history_tweet_ids": [
                "1587429228563382273"
            ],
            "conversation_id": "1587429212230762497",
            "text": "Caching API responses on the client level improves both client and server efficiency.\n\nWe can store client-side caches in Cache Storage, Local Storage, Session Storage, IndexedDB, or Cookies depending on the type of data."
        }
    },
    {
        "data": {
            "text": "1\ufe0f\u20e3 Client Caching\n\nIf you take a good look at your API calls, you may notice several redundant requests that are called with every page load or when components are re-rendered. \n\nBesides slowing down your app, these redundant calls also put a load on the server.",
            "id": "1587429224368971777",
            "edit_history_tweet_ids": [
                "1587429224368971777"
            ],
            "conversation_id": "1587429212230762497"
        }
    },
    {
        "data": {
            "conversation_id": "1587429212230762497",
            "id": "1587429220292218883",
            "edit_history_tweet_ids": [
                "1587429220292218883"
            ],
            "text": "There are two techniques of caching based on where you keep the cache.\n\n\ud83d\udc49 Client Caching\n\ud83d\udc49 Server Caching"
        }
    },
    {
        "data": {
            "conversation_id": "1587429212230762497",
            "id": "1587429216290742272",
            "text": "\ud83d\udccc What is API Caching?\n\nCaching enables us to store copies of frequently accessed data in several places along the request-response path. \n\nToday, APIs use caching extensively, which is also one of the architectural constraints of REST APIs.",
            "edit_history_tweet_ids": [
                "1587429216290742272"
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587429212230762497"
            ],
            "id": "1587429212230762497",
            "text": "API Caching Techniques to improve performance.\n\nThread \ud83e\uddf5\ud83d\udc47",
            "conversation_id": "1587429212230762497"
        }
    },
    {
        "data": {
            "conversation_id": "1587186864842313733",
            "edit_history_tweet_ids": [
                "1587186885432057857"
            ],
            "text": "That\u2019s all for now!\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19",
            "id": "1587186885432057857"
        }
    },
    {
        "data": {
            "conversation_id": "1587186864842313733",
            "id": "1587186881246236675",
            "text": "4\ufe0f\u20e3 Use TLS\n\nAPI keys and authentication parameters may be compromised during server-client communication. Therefore, it is critical to use Transport layer Security (TLS) which protects the information by encrypting it.",
            "edit_history_tweet_ids": [
                "1587186881246236675"
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587186877060235266"
            ],
            "conversation_id": "1587186864842313733",
            "id": "1587186877060235266",
            "text": "3\ufe0f\u20e3 Implement an Auth Standard\n\nOAuth 2.0 (Open Authorization) is a standard developed to allow a user access to resources from a third-party application.\n\nIt is an authorization protocol designed only to grant access to resources, and it works by using access tokens."
        }
    },
    {
        "data": {
            "text": "2\ufe0f\u20e3 Store API Keys Securely\n\nYou cannot rely on API keys alone for identifying the client\u2019s identity, as anyone can use them to access the service.\n\nTherefore, the client and the API provider must keep API keys secure to avoid them being compromised.",
            "id": "1587186872857534465",
            "edit_history_tweet_ids": [
                "1587186872857534465"
            ],
            "conversation_id": "1587186864842313733"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587186868789067777"
            ],
            "text": "1\ufe0f\u20e3 Use API keys\n\nUsing secret keys is a suitable way to control access to your APIs.\n\nWith API key authentication, you can verify the identity of each app or user and mitigate the risks of unauthorized access.",
            "conversation_id": "1587186864842313733",
            "id": "1587186868789067777"
        }
    },
    {
        "data": {
            "text": "Let\u2019s discuss some API Authentication best practices.\n\nThread \ud83e\uddf5\ud83d\udc47",
            "id": "1587186864842313733",
            "edit_history_tweet_ids": [
                "1587186864842313733"
            ],
            "conversation_id": "1587186864842313733"
        }
    },
    {
        "data": {
            "conversation_id": "1587129253497298949",
            "id": "1587129280315768832",
            "edit_history_tweet_ids": [
                "1587129280315768832"
            ],
            "text": "We hope you enjoyed this short tutorial.\n\nIf you found this thread useful, follow @Rapid_API \ud83d\udc19\ud83d\udc99"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587129275618041863"
            ],
            "text": "To select the actual environment variable, click on the \"Environment Variable\" tag you specified in the previous step.\n\nAnother popup menu will appear with all the environment variables defined.\n\nSelect \"x-rapid-api\" key. https://t.co/VIFTTI1dbL",
            "attachments": {
                "media_keys": [
                    "3_1587129249877692418"
                ]
            },
            "conversation_id": "1587129253497298949",
            "id": "1587129275618041863"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1587129249877692418",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FgadpM-XkAId2FA.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587129271511928832"
            ],
            "conversation_id": "1587129253497298949",
            "id": "1587129271511928832",
            "text": "To enter the environment variable, you have two options:\n\n1. Enter \"{\" into the Header value field.\n\n2. Right-click into the Header value field.\n\nIn both cases, the popup menu will appear.\n\nFrom the list, select \"Environment Variable.\u201d"
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1587129245893107713"
                ]
            },
            "conversation_id": "1587129253497298949",
            "edit_history_tweet_ids": [
                "1587129266831085570"
            ],
            "id": "1587129266831085570",
            "text": "Let me show you how to use it.\n \n1\ufe0f\u20e3 Click \"Headers\" in the middle panel\n \n2\ufe0f\u20e3 For the header name, enter \"x-rapidapi-key\" https://t.co/uVpaVsJlNC"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1587129245893107713",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/Fgado-IXoAEHTuN.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1587129253497298949",
            "attachments": {
                "media_keys": [
                    "3_1587129241879052291"
                ]
            },
            "id": "1587129261999108096",
            "edit_history_tweet_ids": [
                "1587129261999108096"
            ],
            "text": "Of course, the environment variable must be defined before you can use it.\n\nHere is the example of the \"x-rapidapi-key\" environment variable defined. https://t.co/mNnNf7KFCm"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1587129241879052291",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FgadovLWAAMuyfX.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587129257590784000"
            ],
            "text": "The following small tutorial will show you how to associate an environment variable (RapidAPI API key) with the variable used in the HTTP header.",
            "conversation_id": "1587129253497298949",
            "id": "1587129257590784000"
        }
    },
    {
        "data": {
            "text": "How to set environment variables into the header inside RapidAPI Client for VS Code?\n\nThread \ud83e\uddf5\ud83d\udc47",
            "id": "1587129253497298949",
            "edit_history_tweet_ids": [
                "1587129253497298949"
            ],
            "conversation_id": "1587129253497298949"
        }
    },
    {
        "data": {
            "conversation_id": "1587067101898018822",
            "id": "1587067138270969857",
            "text": "That\u2019s all for now!\n\nFollow @Rapid_API for more exclusive content. \ud83d\udc19",
            "edit_history_tweet_ids": [
                "1587067138270969857"
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1587067101898018822",
            "id": "1587067134248632324",
            "edit_history_tweet_ids": [
                "1587067134248632324"
            ],
            "text": "Take a look at this article to learn how to use RapidAPI Studio and Client to secure your REST APIs. (https://t.co/WSHtlatdyu)"
        }
    },
    {
        "data": {
            "conversation_id": "1587067101898018822",
            "id": "1587067130159185921",
            "text": "7\ufe0f\u20e3 Limit request size\n\nA user can send a huge payload to the server via your API. This can lead to slowing down your API or, worst case, crashing it.\n\nYou can prevent this by limiting the request size of your API.",
            "edit_history_tweet_ids": [
                "1587067130159185921"
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1587067101898018822",
            "text": "6\ufe0f\u20e3 Implementing API Authentication\n\nAPI authentication is a good way to secure your API against several security threats. It acts as an API gateway and provides an extra layer of security.",
            "edit_history_tweet_ids": [
                "1587067126086598660"
            ],
            "id": "1587067126086598660"
        }
    },
    {
        "data": {
            "conversation_id": "1587067101898018822",
            "id": "1587067122047483906",
            "edit_history_tweet_ids": [
                "1587067122047483906"
            ],
            "text": "5\ufe0f\u20e3 Prevention against API injections\n\nUsers can send executable commands in the request body to the server that can cause significant damage.\n\nYou can prevent it by filtering the API response against a regex to ensure there is no command or executable code in the request body."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587067117983203332"
            ],
            "text": "4\ufe0f\u20e3 Limit excessive data exposure\n\nSometimes, the API returns more data to the client-side application than it needs. This additional data can be exploited by the man-in-the-middle attack.\n\nSo, when building REST APIs, ensure that only the required data is sent to the server.",
            "id": "1587067117983203332",
            "conversation_id": "1587067101898018822"
        }
    },
    {
        "data": {
            "conversation_id": "1587067101898018822",
            "edit_history_tweet_ids": [
                "1587067113939898372"
            ],
            "id": "1587067113939898372",
            "text": "3\ufe0f\u20e3 Protection against DDoS attack\n\nIf a REST API gets too many requests simultaneously, it can overload and crash.\n\nYou can prevent it by implementing rate limiting. It is the process through which you limit the number of requests coming to your API in a certain amount of time."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1587067109909078018"
            ],
            "text": "2\ufe0f\u20e3 Confirm user identity before giving access\n\nYour REST API should confirm the user\u2019s auth level before giving them access to any data.\n\nOne way to take care of it is to extract the ID from an auth token rather than using the ID sent by the client.",
            "id": "1587067109909078018",
            "conversation_id": "1587067101898018822"
        }
    },
    {
        "data": {
            "conversation_id": "1587067101898018822",
            "edit_history_tweet_ids": [
                "1587067105861591040"
            ],
            "text": "1\ufe0f\u20e3 Request Schema Validation\n\nA user can send more data than expected by altering the request object before sending it to the server.\n\nSo when you develop a REST API, ensure that you take out each value from the request object and save the new object in the database.",
            "id": "1587067105861591040"
        }
    },
    {
        "data": {
            "id": "1587067101898018822",
            "edit_history_tweet_ids": [
                "1587067101898018822"
            ],
            "conversation_id": "1587067101898018822",
            "text": "How to secure a RESTful API?\n\nThread \ud83e\uddf5\ud83d\udc47"
        }
    },
    {
        "data": {
            "conversation_id": "1586449019659866113",
            "edit_history_tweet_ids": [
                "1586449052086018048"
            ],
            "text": "Thanks for reading! Follow @Rapid_API for more of our exclusive content. \ud83d\udc19",
            "id": "1586449052086018048"
        }
    },
    {
        "data": {
            "id": "1586449047950397446",
            "edit_history_tweet_ids": [
                "1586449047950397446"
            ],
            "conversation_id": "1586449019659866113",
            "text": "With stateful requests, previous calls can impact further calls. Because of this, stateful apps use the same servers for each request, and memory allocation is needed to store data.\n\nStateful apps also require higher security because sensitive session data is maintained."
        }
    },
    {
        "data": {
            "conversation_id": "1586449019659866113",
            "id": "1586449043890266113",
            "edit_history_tweet_ids": [
                "1586449043890266113"
            ],
            "text": "\ud83d\udccc Stateful\n\nStateful protocols require the server to save status and session information, such as an authentication session. \n\nThis is achieved with heavy and complicated server-side software that is difficult to scale.\n\nStateful protocol examples are FTP and SOAP."
        }
    },
    {
        "data": {
            "conversation_id": "1586449019659866113",
            "text": "However, HTTP Cookies can be created using HTTP Headers to create sessions by storing resource data in the browser.\n\nTherefore HTTP by default is still stateless but not always sessionless.",
            "edit_history_tweet_ids": [
                "1586449039838613505"
            ],
            "id": "1586449039838613505"
        }
    },
    {
        "data": {
            "conversation_id": "1586449019659866113",
            "edit_history_tweet_ids": [
                "1586449035833090048"
            ],
            "id": "1586449035833090048",
            "text": "By default, HTTP is stateless, making statelessness one of the principles of REST architecture and REST APIs.\n\nIf three HTTP calls are made to the server in succession, three separate connections are opened and closed one after the other."
        }
    },
    {
        "data": {
            "id": "1586449031752024067",
            "edit_history_tweet_ids": [
                "1586449031752024067"
            ],
            "conversation_id": "1586449019659866113",
            "text": "Each stateless call to the server is independent of the previous and the next. Every call contains all the data it needs to be fully processed and executed independently.\n\nIf there is an error or system crash, there is no dependency on retrieving data because it is never stored."
        }
    },
    {
        "data": {
            "text": "\ud83d\udcccStateless\n\nStateless protocols do not retain information on the server, removing the issue of server-side state synchronization and data storage.\n\nBecause of this, they are scalable and can process requests fast.",
            "conversation_id": "1586449019659866113",
            "edit_history_tweet_ids": [
                "1586449027687669762"
            ],
            "id": "1586449027687669762"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1586449023686385665"
            ],
            "text": "All network protocols for web browsers can be categorized into stateful and stateless.\n\nState refers to the server\u2019s ability to maintain session information. Let's look into both state types\ud83d\udc47",
            "id": "1586449023686385665",
            "conversation_id": "1586449019659866113"
        }
    },
    {
        "data": {
            "id": "1586449019659866113",
            "text": "What's the difference between stateless and stateful protocols?\n\nA thread \ud83e\uddf5",
            "edit_history_tweet_ids": [
                "1586449019659866113"
            ],
            "conversation_id": "1586449019659866113"
        }
    },
    {
        "data": {
            "conversation_id": "1586114802828673024",
            "id": "1586114827105325058",
            "edit_history_tweet_ids": [
                "1586114827105325058"
            ],
            "text": "We hope you found this helpful! \n\nFollow @Rapid_API for more of our exclusive content. \ud83d\udc19"
        }
    },
    {
        "data": {
            "conversation_id": "1586114802828673024",
            "edit_history_tweet_ids": [
                "1586114823061905411"
            ],
            "id": "1586114823061905411",
            "text": "\ud83d\udccc Parameters\n\nInclude relevant parameters in the error response.\n\nIf the error is parameter-related, it will help the developers get more context about the problem."
        }
    },
    {
        "data": {
            "conversation_id": "1586114802828673024",
            "id": "1586114818980847621",
            "edit_history_tweet_ids": [
                "1586114818980847621"
            ],
            "text": "\ud83d\udccc Documentation reference\n\nInclude a link to a help page in your API documentation referring to the error.\n\nIt will allow developers to fix the error quickly, massively improving the developer experience of your API."
        }
    },
    {
        "data": {
            "id": "1586114814912462849",
            "edit_history_tweet_ids": [
                "1586114814912462849"
            ],
            "conversation_id": "1586114802828673024",
            "text": "\ud83d\udccc Human-readable messages\n\nOnly a status code is not enough to clarify the error.\n\nA clear, human-readable message goes a long way to pinpoint the actual cause of the error.\n\nFor example, \"400 Bad Request - Your request is missing the following required parameters.\""
        }
    },
    {
        "data": {
            "conversation_id": "1586114802828673024",
            "id": "1586114810835599361",
            "edit_history_tweet_ids": [
                "1586114810835599361"
            ],
            "text": "\ud83d\udccc Status code\n\nThe 4xx and 5xx HTTP status codes show the error category.\n\nIncluding an appropriate status code helps developers understand the error and where it occurred.\n\nFor example, a 500 code shows the error is on the server end."
        }
    },
    {
        "data": {
            "id": "1586114806792290310",
            "edit_history_tweet_ids": [
                "1586114806792290310"
            ],
            "conversation_id": "1586114802828673024",
            "text": "What happens when a request to your API doesn't go as planned? \n\nAn error response is displayed; it is the only way for developers to diagnose what went wrong.\n\nAn effective error response should have the following elements. \ud83d\udc47"
        }
    },
    {
        "data": {
            "conversation_id": "1586114802828673024",
            "id": "1586114802828673024",
            "text": "How to create a better error response for your API? \n\nThread \ud83e\uddf5\ud83d\udc47",
            "edit_history_tweet_ids": [
                "1586114802828673024"
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1586048932140007427"
            ],
            "id": "1586048932140007427",
            "text": "Thanks for reading!\n\nFollow us @Rapid_API for more exclusive content. \ud83d\udc19\ud83d\udc99",
            "conversation_id": "1586048899789328387"
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1586048928201539586"
            ],
            "id": "1586048928201539586",
            "text": "PUT - Bulk update of orders for the customer with ID=2\n\nDELETE - Remove all orders for the customer with ID=2",
            "conversation_id": "1586048899789328387"
        }
    },
    {
        "data": {
            "id": "1586048924145565698",
            "text": "3\ufe0f\u20e3 /customers/2/orders\n\nIf our API uses nested models, we can use the structure mentioned above. \n\nWe're going to manipulate orders for the customer with an ID=2\n\nPOST - Create a new order for the customer with ID=2\n\nGET - Retrieve all orders for the customer with ID=2",
            "edit_history_tweet_ids": [
                "1586048924145565698"
            ],
            "conversation_id": "1586048899789328387"
        }
    },
    {
        "data": {
            "id": "1586048920064507910",
            "edit_history_tweet_ids": [
                "1586048920064507910"
            ],
            "conversation_id": "1586048899789328387",
            "text": "2\ufe0f\u20e3 /customers/2 URI\n\nIn this example, we're going to manipulate a single customer with an ID of 2\n\nPOST - Not used\n\nGET - Retrieve the details for the customer with ID=2\n\nPUT - Update the details of the customer with ID=2\n\nDELETE - Remove customer with ID=2"
        }
    },
    {
        "data": {
            "text": "1\ufe0f\u20e3 /customers URI\n\nPOST - Create a new customer\n\nGET - Retrieve all customers\n\nPUT - Bulk update of customers\n\nDELETE - Remove all customers",
            "id": "1586048916012908547",
            "edit_history_tweet_ids": [
                "1586048916012908547"
            ],
            "conversation_id": "1586048899789328387"
        }
    },
    {
        "data": {
            "text": "To make your API URI structure easy to follow, you should structure it meaningfully.\n\nLet's assume we have an API with endpoints that manage customers.\n\nWe'll show different URIs with HTTP methods and their meanings.",
            "id": "1586048911889817601",
            "edit_history_tweet_ids": [
                "1586048911889817601"
            ],
            "conversation_id": "1586048899789328387"
        }
    },
    {
        "data": {
            "conversation_id": "1586048899789328387",
            "edit_history_tweet_ids": [
                "1586048907875860484"
            ],
            "text": "PATCH - performs a partial update of a resource\n\nDELETE - Deletes the resource located at the given URI.",
            "id": "1586048907875860484"
        }
    },
    {
        "data": {
            "conversation_id": "1586048899789328387",
            "id": "1586048903815757824",
            "edit_history_tweet_ids": [
                "1586048903815757824"
            ],
            "text": "The HTTP protocol defines several methods. Let's name the most used ones.\n\nGET - obtains a copy of the resource from the given URI.\n\nPOST - creates a new resource at the specified URI\n\nPUT - changes the resource at the given URI with a new one or creates a new one."
        }
    },
    {
        "data": {
            "conversation_id": "1586048899789328387",
            "edit_history_tweet_ids": [
                "1586048899789328387"
            ],
            "text": "API routes structure \u2014 best practices\n\nThread \ud83e\uddf5\ud83d\udc47",
            "id": "1586048899789328387"
        }
    },
    {
        "data": {
            "conversation_id": "1585979452248530944",
            "edit_history_tweet_ids": [
                "1585979483693146114"
            ],
            "id": "1585979483693146114",
            "text": "Thanks for reading!\ud83d\udc19\n\nCheck out RapidAPI Hub to play around with over 40,000 APIs! (https://t.co/2tM1EEQGY2)"
        }
    },
    {
        "data": {
            "id": "1585979478701916162",
            "attachments": {
                "media_keys": [
                    "3_1585979446116360193"
                ]
            },
            "text": "{ 6 / 6 } https://t.co/Ze4ui4B1BZ",
            "edit_history_tweet_ids": [
                "1585979478701916162"
            ],
            "conversation_id": "1585979452248530944"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1585979446116360193",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FgKH50LWIAEeG-J.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "id": "1585979473635299328",
            "edit_history_tweet_ids": [
                "1585979473635299328"
            ],
            "conversation_id": "1585979452248530944",
            "text": "{ 5 / 6 } https://t.co/Q2hZgFp02x",
            "attachments": {
                "media_keys": [
                    "3_1585979440374448129"
                ]
            }
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1585979440374448129",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FgKH5eyXgAEI5TZ.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "text": "{ 4 / 6 } https://t.co/CIiSnFGYKv",
            "id": "1585979468170027008",
            "edit_history_tweet_ids": [
                "1585979468170027008"
            ],
            "attachments": {
                "media_keys": [
                    "3_1585979434657628160"
                ]
            },
            "conversation_id": "1585979452248530944"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1585979434657628160",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FgKH5JfXwAArnbb.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "attachments": {
                "media_keys": [
                    "3_1585979429238763520"
                ]
            },
            "conversation_id": "1585979452248530944",
            "edit_history_tweet_ids": [
                "1585979462994239489"
            ],
            "id": "1585979462994239489",
            "text": "{ 3 / 6 } https://t.co/oa8ZSxjrVq"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1585979429238763520",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FgKH41TacAAnC35.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1585979457545854977"
            ],
            "attachments": {
                "media_keys": [
                    "3_1585979423127388160"
                ]
            },
            "id": "1585979457545854977",
            "text": "{ 2 / 6 } https://t.co/2EG2r36KtP",
            "conversation_id": "1585979452248530944"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1585979423127388160",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FgKH4eiWQAAF_eU.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "conversation_id": "1585979452248530944",
            "attachments": {
                "media_keys": [
                    "3_1585979417557344258"
                ]
            },
            "id": "1585979452248530944",
            "edit_history_tweet_ids": [
                "1585979452248530944"
            ],
            "text": "Find out how API responses are cached\ud83d\udc47\n\n{ 1 / 6 } https://t.co/rgh9V6NHv2"
        },
        "includes": {
            "media": [
                {
                    "media_key": "3_1585979417557344258",
                    "type": "photo",
                    "url": "https://pbs.twimg.com/media/FgKH4JyWIAIa0fR.jpg"
                }
            ]
        }
    },
    {
        "data": {
            "text": "Thanks for reading! \n\nFollow us @Rapid_API for more exclusive content. \ud83d\udc19\ud83d\udc99",
            "id": "1585757292980539392",
            "edit_history_tweet_ids": [
                "1585757292980539392"
            ],
            "conversation_id": "1585757256141897728"
        }
    },
    {
        "data": {
            "conversation_id": "1585757256141897728",
            "edit_history_tweet_ids": [
                "1585757288928886785"
            ],
            "text": "Furthermore, this design enables data and functionality to be encapsulated at each layer, enhancing security and avoiding unexpected behavior.",
            "id": "1585757288928886785"
        }
    },
    {
        "data": {
            "conversation_id": "1585757256141897728",
            "edit_history_tweet_ids": [
                "1585757284872904705"
            ],
            "id": "1585757284872904705",
            "text": "5\ufe0f\u20e3 REST API uses a layered architecture\n\nEach layer of the architecture adds to a distinct hierarchy.\n\nThis design is advantageous because it enables loose coupling between levels, making it easier for one layer to be altered or updated without impacting the others."
        }
    },
    {
        "data": {
            "conversation_id": "1585757256141897728",
            "edit_history_tweet_ids": [
                "1585757280741597184"
            ],
            "id": "1585757280741597184",
            "text": "4\ufe0f\u20e3 REST API uses a client-server architecture\n\nThe client and server should not be interdependent to prevent potential conflicts.\n\nYou shouldn't expect the client to be impacted by changes you make to the server and vice versa."
        }
    },
    {
        "data": {
            "conversation_id": "1585757256141897728",
            "edit_history_tweet_ids": [
                "1585757276652158978"
            ],
            "id": "1585757276652158978",
            "text": "On the client, a similar method might be applied.\n\nMaking subsequent requests quicker and more effective can enhance the user experience."
        }
    },
    {
        "data": {
            "edit_history_tweet_ids": [
                "1585757272617230336"
            ],
            "id": "1585757272617230336",
            "text": "3\ufe0f\u20e3 REST API is cached\n\nCaching is a method that may be used to enhance a web application's performance.\n\nThe server can save the answer to a client's request for a resource to accommodate subsequent requests for the same resource.",
            "conversation_id": "1585757256141897728"
        }
    }
]